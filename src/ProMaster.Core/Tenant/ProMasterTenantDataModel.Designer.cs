//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_Lease_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.Property), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.DocumentPrincipalType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_Document_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.DocumentType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_Lease_LeaseTerm", "LeaseTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.LeaseTerm), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_CreditReport_TenancyApplication", "TenancyApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.TenancyApplication), "CreditReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.CreditReport), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_DocumentCheckList_TenancyApplication", "TenancyApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.TenancyApplication), "DocumentCheckList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.DocumentCheckList), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_TenancyApplication_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.Property), "TenancyApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.TenancyApplication), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_TenantScreening_ScreeningCheckStatus", "ScreeningCheckStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.ScreeningCheckStatu), "TenantScreening", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.TenantScreening), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_TenantScreening_ScreeningCheckType", "ScreeningCheckType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.ScreeningCheckType), "TenantScreening", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.TenantScreening), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_TenantScreening_TenancyApplication", "TenancyApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.TenancyApplication), "TenantScreening", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.TenantScreening), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_ScreenProcess_TenancyApplication", "TenancyApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.TenancyApplication), "ScreenProcess", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.ScreenProcess), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_RentPayment_Tenant", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.Tenant), "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.RentPayment), true)]
[assembly: EdmRelationshipAttribute("ProMasterTenantDataModel", "FK_RentPayment_RentPaymentMethod", "RentPaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Tenant.RentPaymentMethod), "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Tenant.RentPayment), true)]

#endregion

namespace ProMaster.Core.Tenant
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProMasterTenantDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProMasterTenantDataEntities object using the connection string found in the 'ProMasterTenantDataEntities' section of the application configuration file.
        /// </summary>
        public ProMasterTenantDataEntities() : base("name=ProMasterTenantDataEntities", "ProMasterTenantDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterTenantDataEntities object.
        /// </summary>
        public ProMasterTenantDataEntities(string connectionString) : base(connectionString, "ProMasterTenantDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterTenantDataEntities object.
        /// </summary>
        public ProMasterTenantDataEntities(EntityConnection connection) : base(connection, "ProMasterTenantDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lease> Leases
        {
            get
            {
                if ((_Leases == null))
                {
                    _Leases = base.CreateObjectSet<Lease>("Leases");
                }
                return _Leases;
            }
        }
        private ObjectSet<Lease> _Leases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> Tenants
        {
            get
            {
                if ((_Tenants == null))
                {
                    _Tenants = base.CreateObjectSet<Tenant>("Tenants");
                }
                return _Tenants;
            }
        }
        private ObjectSet<Tenant> _Tenants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentPrincipalType> DocumentPrincipalTypes
        {
            get
            {
                if ((_DocumentPrincipalTypes == null))
                {
                    _DocumentPrincipalTypes = base.CreateObjectSet<DocumentPrincipalType>("DocumentPrincipalTypes");
                }
                return _DocumentPrincipalTypes;
            }
        }
        private ObjectSet<DocumentPrincipalType> _DocumentPrincipalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTerm> LeaseTerms
        {
            get
            {
                if ((_LeaseTerms == null))
                {
                    _LeaseTerms = base.CreateObjectSet<LeaseTerm>("LeaseTerms");
                }
                return _LeaseTerms;
            }
        }
        private ObjectSet<LeaseTerm> _LeaseTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditReport> CreditReports
        {
            get
            {
                if ((_CreditReports == null))
                {
                    _CreditReports = base.CreateObjectSet<CreditReport>("CreditReports");
                }
                return _CreditReports;
            }
        }
        private ObjectSet<CreditReport> _CreditReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentCheckList> DocumentCheckLists
        {
            get
            {
                if ((_DocumentCheckLists == null))
                {
                    _DocumentCheckLists = base.CreateObjectSet<DocumentCheckList>("DocumentCheckLists");
                }
                return _DocumentCheckLists;
            }
        }
        private ObjectSet<DocumentCheckList> _DocumentCheckLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TenancyApplication> TenancyApplications
        {
            get
            {
                if ((_TenancyApplications == null))
                {
                    _TenancyApplications = base.CreateObjectSet<TenancyApplication>("TenancyApplications");
                }
                return _TenancyApplications;
            }
        }
        private ObjectSet<TenancyApplication> _TenancyApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScreeningCheckStatu> ScreeningCheckStatus
        {
            get
            {
                if ((_ScreeningCheckStatus == null))
                {
                    _ScreeningCheckStatus = base.CreateObjectSet<ScreeningCheckStatu>("ScreeningCheckStatus");
                }
                return _ScreeningCheckStatus;
            }
        }
        private ObjectSet<ScreeningCheckStatu> _ScreeningCheckStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScreeningCheckType> ScreeningCheckTypes
        {
            get
            {
                if ((_ScreeningCheckTypes == null))
                {
                    _ScreeningCheckTypes = base.CreateObjectSet<ScreeningCheckType>("ScreeningCheckTypes");
                }
                return _ScreeningCheckTypes;
            }
        }
        private ObjectSet<ScreeningCheckType> _ScreeningCheckTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TenantScreening> TenantScreenings
        {
            get
            {
                if ((_TenantScreenings == null))
                {
                    _TenantScreenings = base.CreateObjectSet<TenantScreening>("TenantScreenings");
                }
                return _TenantScreenings;
            }
        }
        private ObjectSet<TenantScreening> _TenantScreenings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScreenProcess> ScreenProcesses
        {
            get
            {
                if ((_ScreenProcesses == null))
                {
                    _ScreenProcesses = base.CreateObjectSet<ScreenProcess>("ScreenProcesses");
                }
                return _ScreenProcesses;
            }
        }
        private ObjectSet<ScreenProcess> _ScreenProcesses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentPayment> RentPayments
        {
            get
            {
                if ((_RentPayments == null))
                {
                    _RentPayments = base.CreateObjectSet<RentPayment>("RentPayments");
                }
                return _RentPayments;
            }
        }
        private ObjectSet<RentPayment> _RentPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentPaymentMethod> RentPaymentMethods
        {
            get
            {
                if ((_RentPaymentMethods == null))
                {
                    _RentPaymentMethods = base.CreateObjectSet<RentPaymentMethod>("RentPaymentMethods");
                }
                return _RentPaymentMethods;
            }
        }
        private ObjectSet<RentPaymentMethod> _RentPaymentMethods;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeases(Lease lease)
        {
            base.AddObject("Leases", lease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tenants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenants(Tenant tenant)
        {
            base.AddObject("Tenants", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentPrincipalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentPrincipalTypes(DocumentPrincipalType documentPrincipalType)
        {
            base.AddObject("DocumentPrincipalTypes", documentPrincipalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTerms(LeaseTerm leaseTerm)
        {
            base.AddObject("LeaseTerms", leaseTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditReports(CreditReport creditReport)
        {
            base.AddObject("CreditReports", creditReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentCheckLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentCheckLists(DocumentCheckList documentCheckList)
        {
            base.AddObject("DocumentCheckLists", documentCheckList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TenancyApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenancyApplications(TenancyApplication tenancyApplication)
        {
            base.AddObject("TenancyApplications", tenancyApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScreeningCheckStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScreeningCheckStatus(ScreeningCheckStatu screeningCheckStatu)
        {
            base.AddObject("ScreeningCheckStatus", screeningCheckStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScreeningCheckTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScreeningCheckTypes(ScreeningCheckType screeningCheckType)
        {
            base.AddObject("ScreeningCheckTypes", screeningCheckType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TenantScreenings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenantScreenings(TenantScreening tenantScreening)
        {
            base.AddObject("TenantScreenings", tenantScreening);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScreenProcesses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScreenProcesses(ScreenProcess screenProcess)
        {
            base.AddObject("ScreenProcesses", screenProcess);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentPayments(RentPayment rentPayment)
        {
            base.AddObject("RentPayments", rentPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentPaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentPaymentMethods(RentPaymentMethod rentPaymentMethod)
        {
            base.AddObject("RentPaymentMethods", rentPaymentMethod);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="CreditReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditReport object.
        /// </summary>
        /// <param name="creditReportId">Initial value of the CreditReportId property.</param>
        /// <param name="tenancyApplicanionId">Initial value of the TenancyApplicanionId property.</param>
        /// <param name="creditReportScore">Initial value of the CreditReportScore property.</param>
        /// <param name="creditReportAddDate">Initial value of the CreditReportAddDate property.</param>
        public static CreditReport CreateCreditReport(global::System.Int32 creditReportId, global::System.Int32 tenancyApplicanionId, global::System.String creditReportScore, global::System.DateTime creditReportAddDate)
        {
            CreditReport creditReport = new CreditReport();
            creditReport.CreditReportId = creditReportId;
            creditReport.TenancyApplicanionId = tenancyApplicanionId;
            creditReport.CreditReportScore = creditReportScore;
            creditReport.CreditReportAddDate = creditReportAddDate;
            return creditReport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditReportId
        {
            get
            {
                return _CreditReportId;
            }
            set
            {
                if (_CreditReportId != value)
                {
                    OnCreditReportIdChanging(value);
                    ReportPropertyChanging("CreditReportId");
                    _CreditReportId = StructuralObject.SetValidValue(value, "CreditReportId");
                    ReportPropertyChanged("CreditReportId");
                    OnCreditReportIdChanged();
                }
            }
        }
        private global::System.Int32 _CreditReportId;
        partial void OnCreditReportIdChanging(global::System.Int32 value);
        partial void OnCreditReportIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenancyApplicanionId
        {
            get
            {
                return _TenancyApplicanionId;
            }
            set
            {
                OnTenancyApplicanionIdChanging(value);
                ReportPropertyChanging("TenancyApplicanionId");
                _TenancyApplicanionId = StructuralObject.SetValidValue(value, "TenancyApplicanionId");
                ReportPropertyChanged("TenancyApplicanionId");
                OnTenancyApplicanionIdChanged();
            }
        }
        private global::System.Int32 _TenancyApplicanionId;
        partial void OnTenancyApplicanionIdChanging(global::System.Int32 value);
        partial void OnTenancyApplicanionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreditReportScore
        {
            get
            {
                return _CreditReportScore;
            }
            set
            {
                OnCreditReportScoreChanging(value);
                ReportPropertyChanging("CreditReportScore");
                _CreditReportScore = StructuralObject.SetValidValue(value, false, "CreditReportScore");
                ReportPropertyChanged("CreditReportScore");
                OnCreditReportScoreChanged();
            }
        }
        private global::System.String _CreditReportScore;
        partial void OnCreditReportScoreChanging(global::System.String value);
        partial void OnCreditReportScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreditReportAddDate
        {
            get
            {
                return _CreditReportAddDate;
            }
            set
            {
                OnCreditReportAddDateChanging(value);
                ReportPropertyChanging("CreditReportAddDate");
                _CreditReportAddDate = StructuralObject.SetValidValue(value, "CreditReportAddDate");
                ReportPropertyChanged("CreditReportAddDate");
                OnCreditReportAddDateChanged();
            }
        }
        private global::System.DateTime _CreditReportAddDate;
        partial void OnCreditReportAddDateChanging(global::System.DateTime value);
        partial void OnCreditReportAddDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_CreditReport_TenancyApplication", "TenancyApplication")]
        public TenancyApplication TenancyApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_CreditReport_TenancyApplication", "TenancyApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_CreditReport_TenancyApplication", "TenancyApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TenancyApplication> TenancyApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_CreditReport_TenancyApplication", "TenancyApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_CreditReport_TenancyApplication", "TenancyApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="dcoumentDetails">Initial value of the DcoumentDetails property.</param>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalId">Initial value of the DocumentPrincipalId property.</param>
        /// <param name="documentUrl">Initial value of the DocumentUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.Int32 documentTypeId, global::System.String documentName, global::System.String dcoumentDetails, global::System.Int32 documentPrincipalTypeId, global::System.Int32 documentPrincipalId, global::System.String documentUrl, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.DocumentTypeId = documentTypeId;
            document.DocumentName = documentName;
            document.DcoumentDetails = dcoumentDetails;
            document.DocumentPrincipalTypeId = documentPrincipalTypeId;
            document.DocumentPrincipalId = documentPrincipalId;
            document.DocumentUrl = documentUrl;
            document.CreationDate = creationDate;
            document.UpdateDate = updateDate;
            document.IsActive = isActive;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value, "DocumentId");
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DcoumentDetails
        {
            get
            {
                return _DcoumentDetails;
            }
            set
            {
                OnDcoumentDetailsChanging(value);
                ReportPropertyChanging("DcoumentDetails");
                _DcoumentDetails = StructuralObject.SetValidValue(value, false, "DcoumentDetails");
                ReportPropertyChanged("DcoumentDetails");
                OnDcoumentDetailsChanged();
            }
        }
        private global::System.String _DcoumentDetails;
        partial void OnDcoumentDetailsChanging(global::System.String value);
        partial void OnDcoumentDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                OnDocumentPrincipalTypeIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalTypeId");
                _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                ReportPropertyChanged("DocumentPrincipalTypeId");
                OnDocumentPrincipalTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalId
        {
            get
            {
                return _DocumentPrincipalId;
            }
            set
            {
                OnDocumentPrincipalIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalId");
                _DocumentPrincipalId = StructuralObject.SetValidValue(value, "DocumentPrincipalId");
                ReportPropertyChanged("DocumentPrincipalId");
                OnDocumentPrincipalIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalId;
        partial void OnDocumentPrincipalIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentUrl
        {
            get
            {
                return _DocumentUrl;
            }
            set
            {
                OnDocumentUrlChanging(value);
                ReportPropertyChanging("DocumentUrl");
                _DocumentUrl = StructuralObject.SetValidValue(value, false, "DocumentUrl");
                ReportPropertyChanged("DocumentUrl");
                OnDocumentUrlChanged();
            }
        }
        private global::System.String _DocumentUrl;
        partial void OnDocumentUrlChanging(global::System.String value);
        partial void OnDocumentUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType")]
        public DocumentPrincipalType DocumentPrincipalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterTenantDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterTenantDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentPrincipalType> DocumentPrincipalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterTenantDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentPrincipalType>("ProMasterTenantDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Document_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterTenantDataModel.FK_Document_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterTenantDataModel.FK_Document_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterTenantDataModel.FK_Document_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("ProMasterTenantDataModel.FK_Document_DocumentType", "DocumentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="DocumentCheckList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentCheckList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentCheckList object.
        /// </summary>
        /// <param name="documentCheckListId">Initial value of the DocumentCheckListId property.</param>
        /// <param name="tenancyApplicanionId">Initial value of the TenancyApplicanionId property.</param>
        /// <param name="isIdentificationProvided">Initial value of the IsIdentificationProvided property.</param>
        /// <param name="isLandLordReferenceProvided">Initial value of the IsLandLordReferenceProvided property.</param>
        /// <param name="isEmployerReferenceProvided">Initial value of the IsEmployerReferenceProvided property.</param>
        /// <param name="isIncomeStatementProvided">Initial value of the IsIncomeStatementProvided property.</param>
        /// <param name="isCreditReportProvided">Initial value of the IsCreditReportProvided property.</param>
        /// <param name="documentCheckListCompletionDate">Initial value of the DocumentCheckListCompletionDate property.</param>
        public static DocumentCheckList CreateDocumentCheckList(global::System.Int32 documentCheckListId, global::System.Int32 tenancyApplicanionId, global::System.Boolean isIdentificationProvided, global::System.Boolean isLandLordReferenceProvided, global::System.Boolean isEmployerReferenceProvided, global::System.Boolean isIncomeStatementProvided, global::System.Boolean isCreditReportProvided, global::System.DateTime documentCheckListCompletionDate)
        {
            DocumentCheckList documentCheckList = new DocumentCheckList();
            documentCheckList.DocumentCheckListId = documentCheckListId;
            documentCheckList.TenancyApplicanionId = tenancyApplicanionId;
            documentCheckList.IsIdentificationProvided = isIdentificationProvided;
            documentCheckList.IsLandLordReferenceProvided = isLandLordReferenceProvided;
            documentCheckList.IsEmployerReferenceProvided = isEmployerReferenceProvided;
            documentCheckList.IsIncomeStatementProvided = isIncomeStatementProvided;
            documentCheckList.IsCreditReportProvided = isCreditReportProvided;
            documentCheckList.DocumentCheckListCompletionDate = documentCheckListCompletionDate;
            return documentCheckList;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentCheckListId
        {
            get
            {
                return _DocumentCheckListId;
            }
            set
            {
                if (_DocumentCheckListId != value)
                {
                    OnDocumentCheckListIdChanging(value);
                    ReportPropertyChanging("DocumentCheckListId");
                    _DocumentCheckListId = StructuralObject.SetValidValue(value, "DocumentCheckListId");
                    ReportPropertyChanged("DocumentCheckListId");
                    OnDocumentCheckListIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentCheckListId;
        partial void OnDocumentCheckListIdChanging(global::System.Int32 value);
        partial void OnDocumentCheckListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenancyApplicanionId
        {
            get
            {
                return _TenancyApplicanionId;
            }
            set
            {
                OnTenancyApplicanionIdChanging(value);
                ReportPropertyChanging("TenancyApplicanionId");
                _TenancyApplicanionId = StructuralObject.SetValidValue(value, "TenancyApplicanionId");
                ReportPropertyChanged("TenancyApplicanionId");
                OnTenancyApplicanionIdChanged();
            }
        }
        private global::System.Int32 _TenancyApplicanionId;
        partial void OnTenancyApplicanionIdChanging(global::System.Int32 value);
        partial void OnTenancyApplicanionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIdentificationProvided
        {
            get
            {
                return _IsIdentificationProvided;
            }
            set
            {
                OnIsIdentificationProvidedChanging(value);
                ReportPropertyChanging("IsIdentificationProvided");
                _IsIdentificationProvided = StructuralObject.SetValidValue(value, "IsIdentificationProvided");
                ReportPropertyChanged("IsIdentificationProvided");
                OnIsIdentificationProvidedChanged();
            }
        }
        private global::System.Boolean _IsIdentificationProvided;
        partial void OnIsIdentificationProvidedChanging(global::System.Boolean value);
        partial void OnIsIdentificationProvidedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLandLordReferenceProvided
        {
            get
            {
                return _IsLandLordReferenceProvided;
            }
            set
            {
                OnIsLandLordReferenceProvidedChanging(value);
                ReportPropertyChanging("IsLandLordReferenceProvided");
                _IsLandLordReferenceProvided = StructuralObject.SetValidValue(value, "IsLandLordReferenceProvided");
                ReportPropertyChanged("IsLandLordReferenceProvided");
                OnIsLandLordReferenceProvidedChanged();
            }
        }
        private global::System.Boolean _IsLandLordReferenceProvided;
        partial void OnIsLandLordReferenceProvidedChanging(global::System.Boolean value);
        partial void OnIsLandLordReferenceProvidedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEmployerReferenceProvided
        {
            get
            {
                return _IsEmployerReferenceProvided;
            }
            set
            {
                OnIsEmployerReferenceProvidedChanging(value);
                ReportPropertyChanging("IsEmployerReferenceProvided");
                _IsEmployerReferenceProvided = StructuralObject.SetValidValue(value, "IsEmployerReferenceProvided");
                ReportPropertyChanged("IsEmployerReferenceProvided");
                OnIsEmployerReferenceProvidedChanged();
            }
        }
        private global::System.Boolean _IsEmployerReferenceProvided;
        partial void OnIsEmployerReferenceProvidedChanging(global::System.Boolean value);
        partial void OnIsEmployerReferenceProvidedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIncomeStatementProvided
        {
            get
            {
                return _IsIncomeStatementProvided;
            }
            set
            {
                OnIsIncomeStatementProvidedChanging(value);
                ReportPropertyChanging("IsIncomeStatementProvided");
                _IsIncomeStatementProvided = StructuralObject.SetValidValue(value, "IsIncomeStatementProvided");
                ReportPropertyChanged("IsIncomeStatementProvided");
                OnIsIncomeStatementProvidedChanged();
            }
        }
        private global::System.Boolean _IsIncomeStatementProvided;
        partial void OnIsIncomeStatementProvidedChanging(global::System.Boolean value);
        partial void OnIsIncomeStatementProvidedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCreditReportProvided
        {
            get
            {
                return _IsCreditReportProvided;
            }
            set
            {
                OnIsCreditReportProvidedChanging(value);
                ReportPropertyChanging("IsCreditReportProvided");
                _IsCreditReportProvided = StructuralObject.SetValidValue(value, "IsCreditReportProvided");
                ReportPropertyChanged("IsCreditReportProvided");
                OnIsCreditReportProvidedChanged();
            }
        }
        private global::System.Boolean _IsCreditReportProvided;
        partial void OnIsCreditReportProvidedChanging(global::System.Boolean value);
        partial void OnIsCreditReportProvidedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DocumentCheckListCompletionDate
        {
            get
            {
                return _DocumentCheckListCompletionDate;
            }
            set
            {
                OnDocumentCheckListCompletionDateChanging(value);
                ReportPropertyChanging("DocumentCheckListCompletionDate");
                _DocumentCheckListCompletionDate = StructuralObject.SetValidValue(value, "DocumentCheckListCompletionDate");
                ReportPropertyChanged("DocumentCheckListCompletionDate");
                OnDocumentCheckListCompletionDateChanged();
            }
        }
        private global::System.DateTime _DocumentCheckListCompletionDate;
        partial void OnDocumentCheckListCompletionDateChanging(global::System.DateTime value);
        partial void OnDocumentCheckListCompletionDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_DocumentCheckList_TenancyApplication", "TenancyApplication")]
        public TenancyApplication TenancyApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_DocumentCheckList_TenancyApplication", "TenancyApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_DocumentCheckList_TenancyApplication", "TenancyApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TenancyApplication> TenancyApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_DocumentCheckList_TenancyApplication", "TenancyApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_DocumentCheckList_TenancyApplication", "TenancyApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="DocumentPrincipalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentPrincipalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentPrincipalType object.
        /// </summary>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalType1">Initial value of the DocumentPrincipalType1 property.</param>
        public static DocumentPrincipalType CreateDocumentPrincipalType(global::System.Int32 documentPrincipalTypeId, global::System.String documentPrincipalType1)
        {
            DocumentPrincipalType documentPrincipalType = new DocumentPrincipalType();
            documentPrincipalType.DocumentPrincipalTypeId = documentPrincipalTypeId;
            documentPrincipalType.DocumentPrincipalType1 = documentPrincipalType1;
            return documentPrincipalType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                if (_DocumentPrincipalTypeId != value)
                {
                    OnDocumentPrincipalTypeIdChanging(value);
                    ReportPropertyChanging("DocumentPrincipalTypeId");
                    _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                    ReportPropertyChanged("DocumentPrincipalTypeId");
                    OnDocumentPrincipalTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentPrincipalType1
        {
            get
            {
                return _DocumentPrincipalType1;
            }
            set
            {
                OnDocumentPrincipalType1Changing(value);
                ReportPropertyChanging("DocumentPrincipalType1");
                _DocumentPrincipalType1 = StructuralObject.SetValidValue(value, false, "DocumentPrincipalType1");
                ReportPropertyChanged("DocumentPrincipalType1");
                OnDocumentPrincipalType1Changed();
            }
        }
        private global::System.String _DocumentPrincipalType1;
        partial void OnDocumentPrincipalType1Changing(global::System.String value);
        partial void OnDocumentPrincipalType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Document_DocumentPrincipalType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterTenantDataModel.FK_Document_DocumentPrincipalType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterTenantDataModel.FK_Document_DocumentPrincipalType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentType1">Initial value of the DocumentType1 property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeId, global::System.String documentType1)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeId = documentTypeId;
            documentType.DocumentType1 = documentType1;
            return documentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                if (_DocumentTypeId != value)
                {
                    OnDocumentTypeIdChanging(value);
                    ReportPropertyChanging("DocumentTypeId");
                    _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                    ReportPropertyChanged("DocumentTypeId");
                    OnDocumentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType1
        {
            get
            {
                return _DocumentType1;
            }
            set
            {
                OnDocumentType1Changing(value);
                ReportPropertyChanging("DocumentType1");
                _DocumentType1 = StructuralObject.SetValidValue(value, false, "DocumentType1");
                ReportPropertyChanged("DocumentType1");
                OnDocumentType1Changed();
            }
        }
        private global::System.String _DocumentType1;
        partial void OnDocumentType1Changing(global::System.String value);
        partial void OnDocumentType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Document_DocumentType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterTenantDataModel.FK_Document_DocumentType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterTenantDataModel.FK_Document_DocumentType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="Lease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lease object.
        /// </summary>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="leaseTitle">Initial value of the LeaseTitle property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="leaseStartDate">Initial value of the LeaseStartDate property.</param>
        /// <param name="leaseEndDate">Initial value of the LeaseEndDate property.</param>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="rentFrequency">Initial value of the RentFrequency property.</param>
        /// <param name="rentAmount">Initial value of the RentAmount property.</param>
        /// <param name="rentDueOn">Initial value of the RentDueOn property.</param>
        /// <param name="damageDepositAmount">Initial value of the DamageDepositAmount property.</param>
        /// <param name="leaseSignDate">Initial value of the LeaseSignDate property.</param>
        /// <param name="addendum">Initial value of the Addendum property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Lease CreateLease(global::System.Int32 leaseId, global::System.String leaseTitle, global::System.Int32 propertyId, global::System.DateTime leaseStartDate, global::System.DateTime leaseEndDate, global::System.Int32 leaseTermId, global::System.String rentFrequency, global::System.Decimal rentAmount, global::System.String rentDueOn, global::System.Decimal damageDepositAmount, global::System.DateTime leaseSignDate, global::System.Boolean addendum, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Lease lease = new Lease();
            lease.LeaseId = leaseId;
            lease.LeaseTitle = leaseTitle;
            lease.PropertyId = propertyId;
            lease.LeaseStartDate = leaseStartDate;
            lease.LeaseEndDate = leaseEndDate;
            lease.LeaseTermId = leaseTermId;
            lease.RentFrequency = rentFrequency;
            lease.RentAmount = rentAmount;
            lease.RentDueOn = rentDueOn;
            lease.DamageDepositAmount = damageDepositAmount;
            lease.LeaseSignDate = leaseSignDate;
            lease.Addendum = addendum;
            lease.CreationDate = creationDate;
            lease.UpdateDate = updateDate;
            lease.IsActive = isActive;
            return lease;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                if (_LeaseId != value)
                {
                    OnLeaseIdChanging(value);
                    ReportPropertyChanging("LeaseId");
                    _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                    ReportPropertyChanged("LeaseId");
                    OnLeaseIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaseTitle
        {
            get
            {
                return _LeaseTitle;
            }
            set
            {
                OnLeaseTitleChanging(value);
                ReportPropertyChanging("LeaseTitle");
                _LeaseTitle = StructuralObject.SetValidValue(value, false, "LeaseTitle");
                ReportPropertyChanged("LeaseTitle");
                OnLeaseTitleChanged();
            }
        }
        private global::System.String _LeaseTitle;
        partial void OnLeaseTitleChanging(global::System.String value);
        partial void OnLeaseTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseDesc
        {
            get
            {
                return _LeaseDesc;
            }
            set
            {
                OnLeaseDescChanging(value);
                ReportPropertyChanging("LeaseDesc");
                _LeaseDesc = StructuralObject.SetValidValue(value, true, "LeaseDesc");
                ReportPropertyChanged("LeaseDesc");
                OnLeaseDescChanged();
            }
        }
        private global::System.String _LeaseDesc;
        partial void OnLeaseDescChanging(global::System.String value);
        partial void OnLeaseDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseStartDate
        {
            get
            {
                return _LeaseStartDate;
            }
            set
            {
                OnLeaseStartDateChanging(value);
                ReportPropertyChanging("LeaseStartDate");
                _LeaseStartDate = StructuralObject.SetValidValue(value, "LeaseStartDate");
                ReportPropertyChanged("LeaseStartDate");
                OnLeaseStartDateChanged();
            }
        }
        private global::System.DateTime _LeaseStartDate;
        partial void OnLeaseStartDateChanging(global::System.DateTime value);
        partial void OnLeaseStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseEndDate
        {
            get
            {
                return _LeaseEndDate;
            }
            set
            {
                OnLeaseEndDateChanging(value);
                ReportPropertyChanging("LeaseEndDate");
                _LeaseEndDate = StructuralObject.SetValidValue(value, "LeaseEndDate");
                ReportPropertyChanged("LeaseEndDate");
                OnLeaseEndDateChanged();
            }
        }
        private global::System.DateTime _LeaseEndDate;
        partial void OnLeaseEndDateChanging(global::System.DateTime value);
        partial void OnLeaseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                OnLeaseTermIdChanging(value);
                ReportPropertyChanging("LeaseTermId");
                _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                ReportPropertyChanged("LeaseTermId");
                OnLeaseTermIdChanged();
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentFrequency
        {
            get
            {
                return _RentFrequency;
            }
            set
            {
                OnRentFrequencyChanging(value);
                ReportPropertyChanging("RentFrequency");
                _RentFrequency = StructuralObject.SetValidValue(value, false, "RentFrequency");
                ReportPropertyChanged("RentFrequency");
                OnRentFrequencyChanged();
            }
        }
        private global::System.String _RentFrequency;
        partial void OnRentFrequencyChanging(global::System.String value);
        partial void OnRentFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentAmount
        {
            get
            {
                return _RentAmount;
            }
            set
            {
                OnRentAmountChanging(value);
                ReportPropertyChanging("RentAmount");
                _RentAmount = StructuralObject.SetValidValue(value, "RentAmount");
                ReportPropertyChanged("RentAmount");
                OnRentAmountChanged();
            }
        }
        private global::System.Decimal _RentAmount;
        partial void OnRentAmountChanging(global::System.Decimal value);
        partial void OnRentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentDueOn
        {
            get
            {
                return _RentDueOn;
            }
            set
            {
                OnRentDueOnChanging(value);
                ReportPropertyChanging("RentDueOn");
                _RentDueOn = StructuralObject.SetValidValue(value, false, "RentDueOn");
                ReportPropertyChanged("RentDueOn");
                OnRentDueOnChanged();
            }
        }
        private global::System.String _RentDueOn;
        partial void OnRentDueOnChanging(global::System.String value);
        partial void OnRentDueOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DamageDepositAmount
        {
            get
            {
                return _DamageDepositAmount;
            }
            set
            {
                OnDamageDepositAmountChanging(value);
                ReportPropertyChanging("DamageDepositAmount");
                _DamageDepositAmount = StructuralObject.SetValidValue(value, "DamageDepositAmount");
                ReportPropertyChanged("DamageDepositAmount");
                OnDamageDepositAmountChanged();
            }
        }
        private global::System.Decimal _DamageDepositAmount;
        partial void OnDamageDepositAmountChanging(global::System.Decimal value);
        partial void OnDamageDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PetDepositAmount
        {
            get
            {
                return _PetDepositAmount;
            }
            set
            {
                OnPetDepositAmountChanging(value);
                ReportPropertyChanging("PetDepositAmount");
                _PetDepositAmount = StructuralObject.SetValidValue(value, "PetDepositAmount");
                ReportPropertyChanged("PetDepositAmount");
                OnPetDepositAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PetDepositAmount;
        partial void OnPetDepositAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPetDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseSignDate
        {
            get
            {
                return _LeaseSignDate;
            }
            set
            {
                OnLeaseSignDateChanging(value);
                ReportPropertyChanging("LeaseSignDate");
                _LeaseSignDate = StructuralObject.SetValidValue(value, "LeaseSignDate");
                ReportPropertyChanged("LeaseSignDate");
                OnLeaseSignDateChanged();
            }
        }
        private global::System.DateTime _LeaseSignDate;
        partial void OnLeaseSignDateChanging(global::System.DateTime value);
        partial void OnLeaseSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseAgreementDocUrl
        {
            get
            {
                return _LeaseAgreementDocUrl;
            }
            set
            {
                OnLeaseAgreementDocUrlChanging(value);
                ReportPropertyChanging("LeaseAgreementDocUrl");
                _LeaseAgreementDocUrl = StructuralObject.SetValidValue(value, true, "LeaseAgreementDocUrl");
                ReportPropertyChanged("LeaseAgreementDocUrl");
                OnLeaseAgreementDocUrlChanged();
            }
        }
        private global::System.String _LeaseAgreementDocUrl;
        partial void OnLeaseAgreementDocUrlChanging(global::System.String value);
        partial void OnLeaseAgreementDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Addendum
        {
            get
            {
                return _Addendum;
            }
            set
            {
                OnAddendumChanging(value);
                ReportPropertyChanging("Addendum");
                _Addendum = StructuralObject.SetValidValue(value, "Addendum");
                ReportPropertyChanged("Addendum");
                OnAddendumChanged();
            }
        }
        private global::System.Boolean _Addendum;
        partial void OnAddendumChanging(global::System.Boolean value);
        partial void OnAddendumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Lease_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterTenantDataModel.FK_Lease_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterTenantDataModel.FK_Lease_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterTenantDataModel.FK_Lease_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterTenantDataModel.FK_Lease_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Lease_LeaseTerm", "LeaseTerm")]
        public LeaseTerm LeaseTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterTenantDataModel.FK_Lease_LeaseTerm", "LeaseTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterTenantDataModel.FK_Lease_LeaseTerm", "LeaseTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTerm> LeaseTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterTenantDataModel.FK_Lease_LeaseTerm", "LeaseTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTerm>("ProMasterTenantDataModel.FK_Lease_LeaseTerm", "LeaseTerm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="LeaseTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTerm object.
        /// </summary>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="leaaseTerm">Initial value of the LeaaseTerm property.</param>
        public static LeaseTerm CreateLeaseTerm(global::System.Int32 leaseTermId, global::System.String leaaseTerm)
        {
            LeaseTerm leaseTerm = new LeaseTerm();
            leaseTerm.LeaseTermId = leaseTermId;
            leaseTerm.LeaaseTerm = leaaseTerm;
            return leaseTerm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                if (_LeaseTermId != value)
                {
                    OnLeaseTermIdChanging(value);
                    ReportPropertyChanging("LeaseTermId");
                    _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                    ReportPropertyChanged("LeaseTermId");
                    OnLeaseTermIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaaseTerm
        {
            get
            {
                return _LeaaseTerm;
            }
            set
            {
                OnLeaaseTermChanging(value);
                ReportPropertyChanging("LeaaseTerm");
                _LeaaseTerm = StructuralObject.SetValidValue(value, false, "LeaaseTerm");
                ReportPropertyChanged("LeaaseTerm");
                OnLeaaseTermChanged();
            }
        }
        private global::System.String _LeaaseTerm;
        partial void OnLeaaseTermChanging(global::System.String value);
        partial void OnLeaaseTermChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Lease_LeaseTerm", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterTenantDataModel.FK_Lease_LeaseTerm", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterTenantDataModel.FK_Lease_LeaseTerm", "Lease", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="propertyBuildYear">Initial value of the PropertyBuildYear property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="propertyMgmntlStatusId">Initial value of the PropertyMgmntlStatusId property.</param>
        public static Property CreateProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.Int32 propertyTypeId, global::System.Int32 propertyAddressId, global::System.Int32 propertyFeatureId, global::System.Int32 propertyFacilityId, global::System.Int32 propertyOwnerId, global::System.Int32 propertyManagerId, global::System.Int32 propertyBuildYear, global::System.Boolean isActive, global::System.Boolean isShared, global::System.Int32 rentalStatusId, global::System.DateTime createdDate, global::System.DateTime updateDate, global::System.Int32 propertyMgmntlStatusId)
        {
            Property property = new Property();
            property.PropertyId = propertyId;
            property.PropertyName = propertyName;
            property.PropertyTypeId = propertyTypeId;
            property.PropertyAddressId = propertyAddressId;
            property.PropertyFeatureId = propertyFeatureId;
            property.PropertyFacilityId = propertyFacilityId;
            property.PropertyOwnerId = propertyOwnerId;
            property.PropertyManagerId = propertyManagerId;
            property.PropertyBuildYear = propertyBuildYear;
            property.IsActive = isActive;
            property.IsShared = isShared;
            property.RentalStatusId = rentalStatusId;
            property.CreatedDate = createdDate;
            property.UpdateDate = updateDate;
            property.PropertyMgmntlStatusId = propertyMgmntlStatusId;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDesc
        {
            get
            {
                return _PropertyDesc;
            }
            set
            {
                OnPropertyDescChanging(value);
                ReportPropertyChanging("PropertyDesc");
                _PropertyDesc = StructuralObject.SetValidValue(value, true, "PropertyDesc");
                ReportPropertyChanged("PropertyDesc");
                OnPropertyDescChanged();
            }
        }
        private global::System.String _PropertyDesc;
        partial void OnPropertyDescChanging(global::System.String value);
        partial void OnPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                OnPropertyTypeIdChanging(value);
                ReportPropertyChanging("PropertyTypeId");
                _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                ReportPropertyChanged("PropertyTypeId");
                OnPropertyTypeIdChanged();
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                OnPropertyAddressIdChanging(value);
                ReportPropertyChanging("PropertyAddressId");
                _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                ReportPropertyChanged("PropertyAddressId");
                OnPropertyAddressIdChanged();
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                OnPropertyFeatureIdChanging(value);
                ReportPropertyChanging("PropertyFeatureId");
                _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                ReportPropertyChanged("PropertyFeatureId");
                OnPropertyFeatureIdChanged();
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                OnPropertyFacilityIdChanging(value);
                ReportPropertyChanging("PropertyFacilityId");
                _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                ReportPropertyChanged("PropertyFacilityId");
                OnPropertyFacilityIdChanged();
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                OnPropertyOwnerIdChanging(value);
                ReportPropertyChanging("PropertyOwnerId");
                _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                ReportPropertyChanged("PropertyOwnerId");
                OnPropertyOwnerIdChanged();
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                OnPropertyManagerIdChanging(value);
                ReportPropertyChanging("PropertyManagerId");
                _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                ReportPropertyChanged("PropertyManagerId");
                OnPropertyManagerIdChanged();
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyImgUrl
        {
            get
            {
                return _PropertyImgUrl;
            }
            set
            {
                OnPropertyImgUrlChanging(value);
                ReportPropertyChanging("PropertyImgUrl");
                _PropertyImgUrl = StructuralObject.SetValidValue(value, true, "PropertyImgUrl");
                ReportPropertyChanged("PropertyImgUrl");
                OnPropertyImgUrlChanged();
            }
        }
        private global::System.String _PropertyImgUrl;
        partial void OnPropertyImgUrlChanging(global::System.String value);
        partial void OnPropertyImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyVideoUrl
        {
            get
            {
                return _PropertyVideoUrl;
            }
            set
            {
                OnPropertyVideoUrlChanging(value);
                ReportPropertyChanging("PropertyVideoUrl");
                _PropertyVideoUrl = StructuralObject.SetValidValue(value, true, "PropertyVideoUrl");
                ReportPropertyChanged("PropertyVideoUrl");
                OnPropertyVideoUrlChanged();
            }
        }
        private global::System.String _PropertyVideoUrl;
        partial void OnPropertyVideoUrlChanging(global::System.String value);
        partial void OnPropertyVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyBuildYear
        {
            get
            {
                return _PropertyBuildYear;
            }
            set
            {
                OnPropertyBuildYearChanging(value);
                ReportPropertyChanging("PropertyBuildYear");
                _PropertyBuildYear = StructuralObject.SetValidValue(value, "PropertyBuildYear");
                ReportPropertyChanged("PropertyBuildYear");
                OnPropertyBuildYearChanged();
            }
        }
        private global::System.Int32 _PropertyBuildYear;
        partial void OnPropertyBuildYearChanging(global::System.Int32 value);
        partial void OnPropertyBuildYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                OnRentalStatusIdChanging(value);
                ReportPropertyChanging("RentalStatusId");
                _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                ReportPropertyChanged("RentalStatusId");
                OnRentalStatusIdChanged();
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrataCouncilId
        {
            get
            {
                return _StrataCouncilId;
            }
            set
            {
                OnStrataCouncilIdChanging(value);
                ReportPropertyChanging("StrataCouncilId");
                _StrataCouncilId = StructuralObject.SetValidValue(value, "StrataCouncilId");
                ReportPropertyChanged("StrataCouncilId");
                OnStrataCouncilIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StrataCouncilId;
        partial void OnStrataCouncilIdChanging(Nullable<global::System.Int32> value);
        partial void OnStrataCouncilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyListDesc
        {
            get
            {
                return _PropertyListDesc;
            }
            set
            {
                OnPropertyListDescChanging(value);
                ReportPropertyChanging("PropertyListDesc");
                _PropertyListDesc = StructuralObject.SetValidValue(value, true, "PropertyListDesc");
                ReportPropertyChanged("PropertyListDesc");
                OnPropertyListDescChanged();
            }
        }
        private global::System.String _PropertyListDesc;
        partial void OnPropertyListDescChanging(global::System.String value);
        partial void OnPropertyListDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyMgmntlStatusId
        {
            get
            {
                return _PropertyMgmntlStatusId;
            }
            set
            {
                OnPropertyMgmntlStatusIdChanging(value);
                ReportPropertyChanging("PropertyMgmntlStatusId");
                _PropertyMgmntlStatusId = StructuralObject.SetValidValue(value, "PropertyMgmntlStatusId");
                ReportPropertyChanged("PropertyMgmntlStatusId");
                OnPropertyMgmntlStatusIdChanged();
            }
        }
        private global::System.Int32 _PropertyMgmntlStatusId;
        partial void OnPropertyMgmntlStatusIdChanging(global::System.Int32 value);
        partial void OnPropertyMgmntlStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_Lease_Property", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterTenantDataModel.FK_Lease_Property", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterTenantDataModel.FK_Lease_Property", "Lease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenancyApplication_Property", "TenancyApplication")]
        public EntityCollection<TenancyApplication> TenancyApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenancyApplication>("ProMasterTenantDataModel.FK_TenancyApplication_Property", "TenancyApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenancyApplication>("ProMasterTenantDataModel.FK_TenancyApplication_Property", "TenancyApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="RentPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentPayment object.
        /// </summary>
        /// <param name="rentPaymentId">Initial value of the RentPaymentId property.</param>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="rentIsPaidOntime">Initial value of the RentIsPaidOntime property.</param>
        /// <param name="rentPaymentDate">Initial value of the RentPaymentDate property.</param>
        /// <param name="rentPaymentMonth">Initial value of the RentPaymentMonth property.</param>
        /// <param name="rentPaymentYear">Initial value of the RentPaymentYear property.</param>
        /// <param name="rentPaidAmount">Initial value of the RentPaidAmount property.</param>
        /// <param name="numberOfLatePayment">Initial value of the NumberOfLatePayment property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="rentPaymentMethodId">Initial value of the RentPaymentMethodId property.</param>
        /// <param name="isCollectedInPerson">Initial value of the IsCollectedInPerson property.</param>
        /// <param name="isDepositForOwner">Initial value of the IsDepositForOwner property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static RentPayment CreateRentPayment(global::System.Int32 rentPaymentId, global::System.Int32 tenantId, global::System.Boolean rentIsPaidOntime, global::System.DateTime rentPaymentDate, global::System.String rentPaymentMonth, global::System.String rentPaymentYear, global::System.Decimal rentPaidAmount, global::System.Int32 numberOfLatePayment, global::System.Decimal balance, global::System.Int32 rentPaymentMethodId, global::System.Boolean isCollectedInPerson, global::System.Boolean isDepositForOwner, global::System.DateTime creationDate)
        {
            RentPayment rentPayment = new RentPayment();
            rentPayment.RentPaymentId = rentPaymentId;
            rentPayment.TenantId = tenantId;
            rentPayment.RentIsPaidOntime = rentIsPaidOntime;
            rentPayment.RentPaymentDate = rentPaymentDate;
            rentPayment.RentPaymentMonth = rentPaymentMonth;
            rentPayment.RentPaymentYear = rentPaymentYear;
            rentPayment.RentPaidAmount = rentPaidAmount;
            rentPayment.NumberOfLatePayment = numberOfLatePayment;
            rentPayment.Balance = balance;
            rentPayment.RentPaymentMethodId = rentPaymentMethodId;
            rentPayment.IsCollectedInPerson = isCollectedInPerson;
            rentPayment.IsDepositForOwner = isDepositForOwner;
            rentPayment.CreationDate = creationDate;
            return rentPayment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentId
        {
            get
            {
                return _RentPaymentId;
            }
            set
            {
                if (_RentPaymentId != value)
                {
                    OnRentPaymentIdChanging(value);
                    ReportPropertyChanging("RentPaymentId");
                    _RentPaymentId = StructuralObject.SetValidValue(value, "RentPaymentId");
                    ReportPropertyChanged("RentPaymentId");
                    OnRentPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _RentPaymentId;
        partial void OnRentPaymentIdChanging(global::System.Int32 value);
        partial void OnRentPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                OnTenantIdChanging(value);
                ReportPropertyChanging("TenantId");
                _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                ReportPropertyChanged("TenantId");
                OnTenantIdChanged();
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RentIsPaidOntime
        {
            get
            {
                return _RentIsPaidOntime;
            }
            set
            {
                OnRentIsPaidOntimeChanging(value);
                ReportPropertyChanging("RentIsPaidOntime");
                _RentIsPaidOntime = StructuralObject.SetValidValue(value, "RentIsPaidOntime");
                ReportPropertyChanged("RentIsPaidOntime");
                OnRentIsPaidOntimeChanged();
            }
        }
        private global::System.Boolean _RentIsPaidOntime;
        partial void OnRentIsPaidOntimeChanging(global::System.Boolean value);
        partial void OnRentIsPaidOntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RentPaymentDate
        {
            get
            {
                return _RentPaymentDate;
            }
            set
            {
                OnRentPaymentDateChanging(value);
                ReportPropertyChanging("RentPaymentDate");
                _RentPaymentDate = StructuralObject.SetValidValue(value, "RentPaymentDate");
                ReportPropertyChanged("RentPaymentDate");
                OnRentPaymentDateChanged();
            }
        }
        private global::System.DateTime _RentPaymentDate;
        partial void OnRentPaymentDateChanging(global::System.DateTime value);
        partial void OnRentPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentMonth
        {
            get
            {
                return _RentPaymentMonth;
            }
            set
            {
                OnRentPaymentMonthChanging(value);
                ReportPropertyChanging("RentPaymentMonth");
                _RentPaymentMonth = StructuralObject.SetValidValue(value, false, "RentPaymentMonth");
                ReportPropertyChanged("RentPaymentMonth");
                OnRentPaymentMonthChanged();
            }
        }
        private global::System.String _RentPaymentMonth;
        partial void OnRentPaymentMonthChanging(global::System.String value);
        partial void OnRentPaymentMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentYear
        {
            get
            {
                return _RentPaymentYear;
            }
            set
            {
                OnRentPaymentYearChanging(value);
                ReportPropertyChanging("RentPaymentYear");
                _RentPaymentYear = StructuralObject.SetValidValue(value, false, "RentPaymentYear");
                ReportPropertyChanged("RentPaymentYear");
                OnRentPaymentYearChanged();
            }
        }
        private global::System.String _RentPaymentYear;
        partial void OnRentPaymentYearChanging(global::System.String value);
        partial void OnRentPaymentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentPaidAmount
        {
            get
            {
                return _RentPaidAmount;
            }
            set
            {
                OnRentPaidAmountChanging(value);
                ReportPropertyChanging("RentPaidAmount");
                _RentPaidAmount = StructuralObject.SetValidValue(value, "RentPaidAmount");
                ReportPropertyChanged("RentPaidAmount");
                OnRentPaidAmountChanged();
            }
        }
        private global::System.Decimal _RentPaidAmount;
        partial void OnRentPaidAmountChanging(global::System.Decimal value);
        partial void OnRentPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfLatePayment
        {
            get
            {
                return _NumberOfLatePayment;
            }
            set
            {
                OnNumberOfLatePaymentChanging(value);
                ReportPropertyChanging("NumberOfLatePayment");
                _NumberOfLatePayment = StructuralObject.SetValidValue(value, "NumberOfLatePayment");
                ReportPropertyChanged("NumberOfLatePayment");
                OnNumberOfLatePaymentChanged();
            }
        }
        private global::System.Int32 _NumberOfLatePayment;
        partial void OnNumberOfLatePaymentChanging(global::System.Int32 value);
        partial void OnNumberOfLatePaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value, "Balance");
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentMethodId
        {
            get
            {
                return _RentPaymentMethodId;
            }
            set
            {
                OnRentPaymentMethodIdChanging(value);
                ReportPropertyChanging("RentPaymentMethodId");
                _RentPaymentMethodId = StructuralObject.SetValidValue(value, "RentPaymentMethodId");
                ReportPropertyChanged("RentPaymentMethodId");
                OnRentPaymentMethodIdChanged();
            }
        }
        private global::System.Int32 _RentPaymentMethodId;
        partial void OnRentPaymentMethodIdChanging(global::System.Int32 value);
        partial void OnRentPaymentMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCollectedInPerson
        {
            get
            {
                return _IsCollectedInPerson;
            }
            set
            {
                OnIsCollectedInPersonChanging(value);
                ReportPropertyChanging("IsCollectedInPerson");
                _IsCollectedInPerson = StructuralObject.SetValidValue(value, "IsCollectedInPerson");
                ReportPropertyChanged("IsCollectedInPerson");
                OnIsCollectedInPersonChanged();
            }
        }
        private global::System.Boolean _IsCollectedInPerson;
        partial void OnIsCollectedInPersonChanging(global::System.Boolean value);
        partial void OnIsCollectedInPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDepositForOwner
        {
            get
            {
                return _IsDepositForOwner;
            }
            set
            {
                OnIsDepositForOwnerChanging(value);
                ReportPropertyChanging("IsDepositForOwner");
                _IsDepositForOwner = StructuralObject.SetValidValue(value, "IsDepositForOwner");
                ReportPropertyChanged("IsDepositForOwner");
                OnIsDepositForOwnerChanged();
            }
        }
        private global::System.Boolean _IsDepositForOwner;
        partial void OnIsDepositForOwnerChanging(global::System.Boolean value);
        partial void OnIsDepositForOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_RentPayment_Tenant", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterTenantDataModel.FK_RentPayment_Tenant", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterTenantDataModel.FK_RentPayment_Tenant", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterTenantDataModel.FK_RentPayment_Tenant", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProMasterTenantDataModel.FK_RentPayment_Tenant", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_RentPayment_RentPaymentMethod", "RentPaymentMethod")]
        public RentPaymentMethod RentPaymentMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPaymentMethod>("ProMasterTenantDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPaymentMethod>("ProMasterTenantDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentPaymentMethod> RentPaymentMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPaymentMethod>("ProMasterTenantDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentPaymentMethod>("ProMasterTenantDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="RentPaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentPaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentPaymentMethod object.
        /// </summary>
        /// <param name="rentPaymentMethodId">Initial value of the RentPaymentMethodId property.</param>
        /// <param name="rentPaymentMethod1">Initial value of the RentPaymentMethod1 property.</param>
        public static RentPaymentMethod CreateRentPaymentMethod(global::System.Int32 rentPaymentMethodId, global::System.String rentPaymentMethod1)
        {
            RentPaymentMethod rentPaymentMethod = new RentPaymentMethod();
            rentPaymentMethod.RentPaymentMethodId = rentPaymentMethodId;
            rentPaymentMethod.RentPaymentMethod1 = rentPaymentMethod1;
            return rentPaymentMethod;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentMethodId
        {
            get
            {
                return _RentPaymentMethodId;
            }
            set
            {
                if (_RentPaymentMethodId != value)
                {
                    OnRentPaymentMethodIdChanging(value);
                    ReportPropertyChanging("RentPaymentMethodId");
                    _RentPaymentMethodId = StructuralObject.SetValidValue(value, "RentPaymentMethodId");
                    ReportPropertyChanged("RentPaymentMethodId");
                    OnRentPaymentMethodIdChanged();
                }
            }
        }
        private global::System.Int32 _RentPaymentMethodId;
        partial void OnRentPaymentMethodIdChanging(global::System.Int32 value);
        partial void OnRentPaymentMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentMethod1
        {
            get
            {
                return _RentPaymentMethod1;
            }
            set
            {
                OnRentPaymentMethod1Changing(value);
                ReportPropertyChanging("RentPaymentMethod1");
                _RentPaymentMethod1 = StructuralObject.SetValidValue(value, false, "RentPaymentMethod1");
                ReportPropertyChanged("RentPaymentMethod1");
                OnRentPaymentMethod1Changed();
            }
        }
        private global::System.String _RentPaymentMethod1;
        partial void OnRentPaymentMethod1Changing(global::System.String value);
        partial void OnRentPaymentMethod1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_RentPayment_RentPaymentMethod", "RentPayment")]
        public EntityCollection<RentPayment> RentPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentPayment>("ProMasterTenantDataModel.FK_RentPayment_RentPaymentMethod", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentPayment>("ProMasterTenantDataModel.FK_RentPayment_RentPaymentMethod", "RentPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="ScreeningCheckStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScreeningCheckStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScreeningCheckStatu object.
        /// </summary>
        /// <param name="screeningCheckStatusId">Initial value of the ScreeningCheckStatusId property.</param>
        /// <param name="screeningCheckStatusName">Initial value of the ScreeningCheckStatusName property.</param>
        public static ScreeningCheckStatu CreateScreeningCheckStatu(global::System.Int32 screeningCheckStatusId, global::System.String screeningCheckStatusName)
        {
            ScreeningCheckStatu screeningCheckStatu = new ScreeningCheckStatu();
            screeningCheckStatu.ScreeningCheckStatusId = screeningCheckStatusId;
            screeningCheckStatu.ScreeningCheckStatusName = screeningCheckStatusName;
            return screeningCheckStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreeningCheckStatusId
        {
            get
            {
                return _ScreeningCheckStatusId;
            }
            set
            {
                if (_ScreeningCheckStatusId != value)
                {
                    OnScreeningCheckStatusIdChanging(value);
                    ReportPropertyChanging("ScreeningCheckStatusId");
                    _ScreeningCheckStatusId = StructuralObject.SetValidValue(value, "ScreeningCheckStatusId");
                    ReportPropertyChanged("ScreeningCheckStatusId");
                    OnScreeningCheckStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _ScreeningCheckStatusId;
        partial void OnScreeningCheckStatusIdChanging(global::System.Int32 value);
        partial void OnScreeningCheckStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScreeningCheckStatusName
        {
            get
            {
                return _ScreeningCheckStatusName;
            }
            set
            {
                OnScreeningCheckStatusNameChanging(value);
                ReportPropertyChanging("ScreeningCheckStatusName");
                _ScreeningCheckStatusName = StructuralObject.SetValidValue(value, false, "ScreeningCheckStatusName");
                ReportPropertyChanged("ScreeningCheckStatusName");
                OnScreeningCheckStatusNameChanged();
            }
        }
        private global::System.String _ScreeningCheckStatusName;
        partial void OnScreeningCheckStatusNameChanging(global::System.String value);
        partial void OnScreeningCheckStatusNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenantScreening_ScreeningCheckStatus", "TenantScreening")]
        public EntityCollection<TenantScreening> TenantScreenings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantScreening>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckStatus", "TenantScreening");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantScreening>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckStatus", "TenantScreening", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="ScreeningCheckType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScreeningCheckType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScreeningCheckType object.
        /// </summary>
        /// <param name="screeningCheckTypeId">Initial value of the ScreeningCheckTypeId property.</param>
        /// <param name="screeningCheckTypeName">Initial value of the ScreeningCheckTypeName property.</param>
        public static ScreeningCheckType CreateScreeningCheckType(global::System.Int32 screeningCheckTypeId, global::System.String screeningCheckTypeName)
        {
            ScreeningCheckType screeningCheckType = new ScreeningCheckType();
            screeningCheckType.ScreeningCheckTypeId = screeningCheckTypeId;
            screeningCheckType.ScreeningCheckTypeName = screeningCheckTypeName;
            return screeningCheckType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreeningCheckTypeId
        {
            get
            {
                return _ScreeningCheckTypeId;
            }
            set
            {
                if (_ScreeningCheckTypeId != value)
                {
                    OnScreeningCheckTypeIdChanging(value);
                    ReportPropertyChanging("ScreeningCheckTypeId");
                    _ScreeningCheckTypeId = StructuralObject.SetValidValue(value, "ScreeningCheckTypeId");
                    ReportPropertyChanged("ScreeningCheckTypeId");
                    OnScreeningCheckTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ScreeningCheckTypeId;
        partial void OnScreeningCheckTypeIdChanging(global::System.Int32 value);
        partial void OnScreeningCheckTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScreeningCheckTypeName
        {
            get
            {
                return _ScreeningCheckTypeName;
            }
            set
            {
                OnScreeningCheckTypeNameChanging(value);
                ReportPropertyChanging("ScreeningCheckTypeName");
                _ScreeningCheckTypeName = StructuralObject.SetValidValue(value, false, "ScreeningCheckTypeName");
                ReportPropertyChanged("ScreeningCheckTypeName");
                OnScreeningCheckTypeNameChanged();
            }
        }
        private global::System.String _ScreeningCheckTypeName;
        partial void OnScreeningCheckTypeNameChanging(global::System.String value);
        partial void OnScreeningCheckTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenantScreening_ScreeningCheckType", "TenantScreening")]
        public EntityCollection<TenantScreening> TenantScreenings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantScreening>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckType", "TenantScreening");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantScreening>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckType", "TenantScreening", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="ScreenProcess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScreenProcess : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScreenProcess object.
        /// </summary>
        /// <param name="screenProcessId">Initial value of the ScreenProcessId property.</param>
        /// <param name="tenancyApplicanionId">Initial value of the TenancyApplicanionId property.</param>
        /// <param name="currentLandlordCheckStatus">Initial value of the CurrentLandlordCheckStatus property.</param>
        /// <param name="currentEmploerCheckStatus">Initial value of the CurrentEmploerCheckStatus property.</param>
        /// <param name="creditReportCheckStatus">Initial value of the CreditReportCheckStatus property.</param>
        /// <param name="rentToIncomeRatioCheckStatus">Initial value of the RentToIncomeRatioCheckStatus property.</param>
        /// <param name="isScreenProcessCompleted">Initial value of the IsScreenProcessCompleted property.</param>
        /// <param name="screenFinalStatus">Initial value of the ScreenFinalStatus property.</param>
        /// <param name="screenProcessCompletionDate">Initial value of the ScreenProcessCompletionDate property.</param>
        public static ScreenProcess CreateScreenProcess(global::System.Int32 screenProcessId, global::System.Int32 tenancyApplicanionId, global::System.String currentLandlordCheckStatus, global::System.String currentEmploerCheckStatus, global::System.String creditReportCheckStatus, global::System.String rentToIncomeRatioCheckStatus, global::System.Boolean isScreenProcessCompleted, global::System.String screenFinalStatus, global::System.DateTime screenProcessCompletionDate)
        {
            ScreenProcess screenProcess = new ScreenProcess();
            screenProcess.ScreenProcessId = screenProcessId;
            screenProcess.TenancyApplicanionId = tenancyApplicanionId;
            screenProcess.CurrentLandlordCheckStatus = currentLandlordCheckStatus;
            screenProcess.CurrentEmploerCheckStatus = currentEmploerCheckStatus;
            screenProcess.CreditReportCheckStatus = creditReportCheckStatus;
            screenProcess.RentToIncomeRatioCheckStatus = rentToIncomeRatioCheckStatus;
            screenProcess.IsScreenProcessCompleted = isScreenProcessCompleted;
            screenProcess.ScreenFinalStatus = screenFinalStatus;
            screenProcess.ScreenProcessCompletionDate = screenProcessCompletionDate;
            return screenProcess;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreenProcessId
        {
            get
            {
                return _ScreenProcessId;
            }
            set
            {
                if (_ScreenProcessId != value)
                {
                    OnScreenProcessIdChanging(value);
                    ReportPropertyChanging("ScreenProcessId");
                    _ScreenProcessId = StructuralObject.SetValidValue(value, "ScreenProcessId");
                    ReportPropertyChanged("ScreenProcessId");
                    OnScreenProcessIdChanged();
                }
            }
        }
        private global::System.Int32 _ScreenProcessId;
        partial void OnScreenProcessIdChanging(global::System.Int32 value);
        partial void OnScreenProcessIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenancyApplicanionId
        {
            get
            {
                return _TenancyApplicanionId;
            }
            set
            {
                OnTenancyApplicanionIdChanging(value);
                ReportPropertyChanging("TenancyApplicanionId");
                _TenancyApplicanionId = StructuralObject.SetValidValue(value, "TenancyApplicanionId");
                ReportPropertyChanged("TenancyApplicanionId");
                OnTenancyApplicanionIdChanged();
            }
        }
        private global::System.Int32 _TenancyApplicanionId;
        partial void OnTenancyApplicanionIdChanging(global::System.Int32 value);
        partial void OnTenancyApplicanionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentLandlordCheckStatus
        {
            get
            {
                return _CurrentLandlordCheckStatus;
            }
            set
            {
                OnCurrentLandlordCheckStatusChanging(value);
                ReportPropertyChanging("CurrentLandlordCheckStatus");
                _CurrentLandlordCheckStatus = StructuralObject.SetValidValue(value, false, "CurrentLandlordCheckStatus");
                ReportPropertyChanged("CurrentLandlordCheckStatus");
                OnCurrentLandlordCheckStatusChanged();
            }
        }
        private global::System.String _CurrentLandlordCheckStatus;
        partial void OnCurrentLandlordCheckStatusChanging(global::System.String value);
        partial void OnCurrentLandlordCheckStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PrevioustLandlordCheckStatus
        {
            get
            {
                return _PrevioustLandlordCheckStatus;
            }
            set
            {
                OnPrevioustLandlordCheckStatusChanging(value);
                ReportPropertyChanging("PrevioustLandlordCheckStatus");
                _PrevioustLandlordCheckStatus = StructuralObject.SetValidValue(value, true, "PrevioustLandlordCheckStatus");
                ReportPropertyChanged("PrevioustLandlordCheckStatus");
                OnPrevioustLandlordCheckStatusChanged();
            }
        }
        private global::System.String _PrevioustLandlordCheckStatus;
        partial void OnPrevioustLandlordCheckStatusChanging(global::System.String value);
        partial void OnPrevioustLandlordCheckStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentEmploerCheckStatus
        {
            get
            {
                return _CurrentEmploerCheckStatus;
            }
            set
            {
                OnCurrentEmploerCheckStatusChanging(value);
                ReportPropertyChanging("CurrentEmploerCheckStatus");
                _CurrentEmploerCheckStatus = StructuralObject.SetValidValue(value, false, "CurrentEmploerCheckStatus");
                ReportPropertyChanged("CurrentEmploerCheckStatus");
                OnCurrentEmploerCheckStatusChanged();
            }
        }
        private global::System.String _CurrentEmploerCheckStatus;
        partial void OnCurrentEmploerCheckStatusChanging(global::System.String value);
        partial void OnCurrentEmploerCheckStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousEmploerCheckStatus
        {
            get
            {
                return _PreviousEmploerCheckStatus;
            }
            set
            {
                OnPreviousEmploerCheckStatusChanging(value);
                ReportPropertyChanging("PreviousEmploerCheckStatus");
                _PreviousEmploerCheckStatus = StructuralObject.SetValidValue(value, true, "PreviousEmploerCheckStatus");
                ReportPropertyChanged("PreviousEmploerCheckStatus");
                OnPreviousEmploerCheckStatusChanged();
            }
        }
        private global::System.String _PreviousEmploerCheckStatus;
        partial void OnPreviousEmploerCheckStatusChanging(global::System.String value);
        partial void OnPreviousEmploerCheckStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreditReportCheckStatus
        {
            get
            {
                return _CreditReportCheckStatus;
            }
            set
            {
                OnCreditReportCheckStatusChanging(value);
                ReportPropertyChanging("CreditReportCheckStatus");
                _CreditReportCheckStatus = StructuralObject.SetValidValue(value, false, "CreditReportCheckStatus");
                ReportPropertyChanged("CreditReportCheckStatus");
                OnCreditReportCheckStatusChanged();
            }
        }
        private global::System.String _CreditReportCheckStatus;
        partial void OnCreditReportCheckStatusChanging(global::System.String value);
        partial void OnCreditReportCheckStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentToIncomeRatioCheckStatus
        {
            get
            {
                return _RentToIncomeRatioCheckStatus;
            }
            set
            {
                OnRentToIncomeRatioCheckStatusChanging(value);
                ReportPropertyChanging("RentToIncomeRatioCheckStatus");
                _RentToIncomeRatioCheckStatus = StructuralObject.SetValidValue(value, false, "RentToIncomeRatioCheckStatus");
                ReportPropertyChanged("RentToIncomeRatioCheckStatus");
                OnRentToIncomeRatioCheckStatusChanged();
            }
        }
        private global::System.String _RentToIncomeRatioCheckStatus;
        partial void OnRentToIncomeRatioCheckStatusChanging(global::System.String value);
        partial void OnRentToIncomeRatioCheckStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsScreenProcessCompleted
        {
            get
            {
                return _IsScreenProcessCompleted;
            }
            set
            {
                OnIsScreenProcessCompletedChanging(value);
                ReportPropertyChanging("IsScreenProcessCompleted");
                _IsScreenProcessCompleted = StructuralObject.SetValidValue(value, "IsScreenProcessCompleted");
                ReportPropertyChanged("IsScreenProcessCompleted");
                OnIsScreenProcessCompletedChanged();
            }
        }
        private global::System.Boolean _IsScreenProcessCompleted;
        partial void OnIsScreenProcessCompletedChanging(global::System.Boolean value);
        partial void OnIsScreenProcessCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScreenFinalStatus
        {
            get
            {
                return _ScreenFinalStatus;
            }
            set
            {
                OnScreenFinalStatusChanging(value);
                ReportPropertyChanging("ScreenFinalStatus");
                _ScreenFinalStatus = StructuralObject.SetValidValue(value, false, "ScreenFinalStatus");
                ReportPropertyChanged("ScreenFinalStatus");
                OnScreenFinalStatusChanged();
            }
        }
        private global::System.String _ScreenFinalStatus;
        partial void OnScreenFinalStatusChanging(global::System.String value);
        partial void OnScreenFinalStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScreenProcessCompletionDate
        {
            get
            {
                return _ScreenProcessCompletionDate;
            }
            set
            {
                OnScreenProcessCompletionDateChanging(value);
                ReportPropertyChanging("ScreenProcessCompletionDate");
                _ScreenProcessCompletionDate = StructuralObject.SetValidValue(value, "ScreenProcessCompletionDate");
                ReportPropertyChanged("ScreenProcessCompletionDate");
                OnScreenProcessCompletionDateChanged();
            }
        }
        private global::System.DateTime _ScreenProcessCompletionDate;
        partial void OnScreenProcessCompletionDateChanging(global::System.DateTime value);
        partial void OnScreenProcessCompletionDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_ScreenProcess_TenancyApplication", "TenancyApplication")]
        public TenancyApplication TenancyApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_ScreenProcess_TenancyApplication", "TenancyApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_ScreenProcess_TenancyApplication", "TenancyApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TenancyApplication> TenancyApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_ScreenProcess_TenancyApplication", "TenancyApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_ScreenProcess_TenancyApplication", "TenancyApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="TenancyApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TenancyApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TenancyApplication object.
        /// </summary>
        /// <param name="tenancyApplicationId">Initial value of the TenancyApplicationId property.</param>
        /// <param name="applicantFirstName">Initial value of the ApplicantFirstName property.</param>
        /// <param name="applicantLastName">Initial value of the ApplicantLastName property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="currentAddress">Initial value of the CurrentAddress property.</param>
        /// <param name="applicantContactEmail">Initial value of the ApplicantContactEmail property.</param>
        /// <param name="numberOfTenant">Initial value of the NumberOfTenant property.</param>
        /// <param name="currentEmployerContact">Initial value of the CurrentEmployerContact property.</param>
        /// <param name="currentMonthlyIncome">Initial value of the CurrentMonthlyIncome property.</param>
        /// <param name="isAuthorizedForRefCheck">Initial value of the IsAuthorizedForRefCheck property.</param>
        /// <param name="currentLandlordContact">Initial value of the CurrentLandlordContact property.</param>
        /// <param name="isIdentificationDocAvailalbe">Initial value of the IsIdentificationDocAvailalbe property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="applicationSentDate">Initial value of the ApplicationSentDate property.</param>
        /// <param name="applicantSIN">Initial value of the ApplicantSIN property.</param>
        public static TenancyApplication CreateTenancyApplication(global::System.Int32 tenancyApplicationId, global::System.String applicantFirstName, global::System.String applicantLastName, global::System.Int32 propertyId, global::System.String currentAddress, global::System.String applicantContactEmail, global::System.Int32 numberOfTenant, global::System.String currentEmployerContact, global::System.Decimal currentMonthlyIncome, global::System.Boolean isAuthorizedForRefCheck, global::System.String currentLandlordContact, global::System.Boolean isIdentificationDocAvailalbe, global::System.Boolean isApproved, global::System.Boolean isActive, global::System.DateTime applicationSentDate, global::System.String applicantSIN)
        {
            TenancyApplication tenancyApplication = new TenancyApplication();
            tenancyApplication.TenancyApplicationId = tenancyApplicationId;
            tenancyApplication.ApplicantFirstName = applicantFirstName;
            tenancyApplication.ApplicantLastName = applicantLastName;
            tenancyApplication.PropertyId = propertyId;
            tenancyApplication.CurrentAddress = currentAddress;
            tenancyApplication.ApplicantContactEmail = applicantContactEmail;
            tenancyApplication.NumberOfTenant = numberOfTenant;
            tenancyApplication.CurrentEmployerContact = currentEmployerContact;
            tenancyApplication.CurrentMonthlyIncome = currentMonthlyIncome;
            tenancyApplication.IsAuthorizedForRefCheck = isAuthorizedForRefCheck;
            tenancyApplication.CurrentLandlordContact = currentLandlordContact;
            tenancyApplication.IsIdentificationDocAvailalbe = isIdentificationDocAvailalbe;
            tenancyApplication.IsApproved = isApproved;
            tenancyApplication.IsActive = isActive;
            tenancyApplication.ApplicationSentDate = applicationSentDate;
            tenancyApplication.ApplicantSIN = applicantSIN;
            return tenancyApplication;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenancyApplicationId
        {
            get
            {
                return _TenancyApplicationId;
            }
            set
            {
                if (_TenancyApplicationId != value)
                {
                    OnTenancyApplicationIdChanging(value);
                    ReportPropertyChanging("TenancyApplicationId");
                    _TenancyApplicationId = StructuralObject.SetValidValue(value, "TenancyApplicationId");
                    ReportPropertyChanged("TenancyApplicationId");
                    OnTenancyApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _TenancyApplicationId;
        partial void OnTenancyApplicationIdChanging(global::System.Int32 value);
        partial void OnTenancyApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantFirstName
        {
            get
            {
                return _ApplicantFirstName;
            }
            set
            {
                OnApplicantFirstNameChanging(value);
                ReportPropertyChanging("ApplicantFirstName");
                _ApplicantFirstName = StructuralObject.SetValidValue(value, false, "ApplicantFirstName");
                ReportPropertyChanged("ApplicantFirstName");
                OnApplicantFirstNameChanged();
            }
        }
        private global::System.String _ApplicantFirstName;
        partial void OnApplicantFirstNameChanging(global::System.String value);
        partial void OnApplicantFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantLastName
        {
            get
            {
                return _ApplicantLastName;
            }
            set
            {
                OnApplicantLastNameChanging(value);
                ReportPropertyChanging("ApplicantLastName");
                _ApplicantLastName = StructuralObject.SetValidValue(value, false, "ApplicantLastName");
                ReportPropertyChanged("ApplicantLastName");
                OnApplicantLastNameChanged();
            }
        }
        private global::System.String _ApplicantLastName;
        partial void OnApplicantLastNameChanging(global::System.String value);
        partial void OnApplicantLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentAddress
        {
            get
            {
                return _CurrentAddress;
            }
            set
            {
                OnCurrentAddressChanging(value);
                ReportPropertyChanging("CurrentAddress");
                _CurrentAddress = StructuralObject.SetValidValue(value, false, "CurrentAddress");
                ReportPropertyChanged("CurrentAddress");
                OnCurrentAddressChanged();
            }
        }
        private global::System.String _CurrentAddress;
        partial void OnCurrentAddressChanging(global::System.String value);
        partial void OnCurrentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousAddress
        {
            get
            {
                return _PreviousAddress;
            }
            set
            {
                OnPreviousAddressChanging(value);
                ReportPropertyChanging("PreviousAddress");
                _PreviousAddress = StructuralObject.SetValidValue(value, true, "PreviousAddress");
                ReportPropertyChanged("PreviousAddress");
                OnPreviousAddressChanged();
            }
        }
        private global::System.String _PreviousAddress;
        partial void OnPreviousAddressChanging(global::System.String value);
        partial void OnPreviousAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicantContactTel
        {
            get
            {
                return _ApplicantContactTel;
            }
            set
            {
                OnApplicantContactTelChanging(value);
                ReportPropertyChanging("ApplicantContactTel");
                _ApplicantContactTel = StructuralObject.SetValidValue(value, true, "ApplicantContactTel");
                ReportPropertyChanged("ApplicantContactTel");
                OnApplicantContactTelChanged();
            }
        }
        private global::System.String _ApplicantContactTel;
        partial void OnApplicantContactTelChanging(global::System.String value);
        partial void OnApplicantContactTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantContactEmail
        {
            get
            {
                return _ApplicantContactEmail;
            }
            set
            {
                OnApplicantContactEmailChanging(value);
                ReportPropertyChanging("ApplicantContactEmail");
                _ApplicantContactEmail = StructuralObject.SetValidValue(value, false, "ApplicantContactEmail");
                ReportPropertyChanged("ApplicantContactEmail");
                OnApplicantContactEmailChanged();
            }
        }
        private global::System.String _ApplicantContactEmail;
        partial void OnApplicantContactEmailChanging(global::System.String value);
        partial void OnApplicantContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfTenant
        {
            get
            {
                return _NumberOfTenant;
            }
            set
            {
                OnNumberOfTenantChanging(value);
                ReportPropertyChanging("NumberOfTenant");
                _NumberOfTenant = StructuralObject.SetValidValue(value, "NumberOfTenant");
                ReportPropertyChanged("NumberOfTenant");
                OnNumberOfTenantChanged();
            }
        }
        private global::System.Int32 _NumberOfTenant;
        partial void OnNumberOfTenantChanging(global::System.Int32 value);
        partial void OnNumberOfTenantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfChildren
        {
            get
            {
                return _NumberOfChildren;
            }
            set
            {
                OnNumberOfChildrenChanging(value);
                ReportPropertyChanging("NumberOfChildren");
                _NumberOfChildren = StructuralObject.SetValidValue(value, "NumberOfChildren");
                ReportPropertyChanged("NumberOfChildren");
                OnNumberOfChildrenChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfChildren;
        partial void OnNumberOfChildrenChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfChildrenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentEmployerContact
        {
            get
            {
                return _CurrentEmployerContact;
            }
            set
            {
                OnCurrentEmployerContactChanging(value);
                ReportPropertyChanging("CurrentEmployerContact");
                _CurrentEmployerContact = StructuralObject.SetValidValue(value, false, "CurrentEmployerContact");
                ReportPropertyChanged("CurrentEmployerContact");
                OnCurrentEmployerContactChanged();
            }
        }
        private global::System.String _CurrentEmployerContact;
        partial void OnCurrentEmployerContactChanging(global::System.String value);
        partial void OnCurrentEmployerContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousEmployerContact
        {
            get
            {
                return _PreviousEmployerContact;
            }
            set
            {
                OnPreviousEmployerContactChanging(value);
                ReportPropertyChanging("PreviousEmployerContact");
                _PreviousEmployerContact = StructuralObject.SetValidValue(value, true, "PreviousEmployerContact");
                ReportPropertyChanged("PreviousEmployerContact");
                OnPreviousEmployerContactChanged();
            }
        }
        private global::System.String _PreviousEmployerContact;
        partial void OnPreviousEmployerContactChanging(global::System.String value);
        partial void OnPreviousEmployerContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentMonthlyIncome
        {
            get
            {
                return _CurrentMonthlyIncome;
            }
            set
            {
                OnCurrentMonthlyIncomeChanging(value);
                ReportPropertyChanging("CurrentMonthlyIncome");
                _CurrentMonthlyIncome = StructuralObject.SetValidValue(value, "CurrentMonthlyIncome");
                ReportPropertyChanged("CurrentMonthlyIncome");
                OnCurrentMonthlyIncomeChanged();
            }
        }
        private global::System.Decimal _CurrentMonthlyIncome;
        partial void OnCurrentMonthlyIncomeChanging(global::System.Decimal value);
        partial void OnCurrentMonthlyIncomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAuthorizedForRefCheck
        {
            get
            {
                return _IsAuthorizedForRefCheck;
            }
            set
            {
                OnIsAuthorizedForRefCheckChanging(value);
                ReportPropertyChanging("IsAuthorizedForRefCheck");
                _IsAuthorizedForRefCheck = StructuralObject.SetValidValue(value, "IsAuthorizedForRefCheck");
                ReportPropertyChanged("IsAuthorizedForRefCheck");
                OnIsAuthorizedForRefCheckChanged();
            }
        }
        private global::System.Boolean _IsAuthorizedForRefCheck;
        partial void OnIsAuthorizedForRefCheckChanging(global::System.Boolean value);
        partial void OnIsAuthorizedForRefCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentLandlordContact
        {
            get
            {
                return _CurrentLandlordContact;
            }
            set
            {
                OnCurrentLandlordContactChanging(value);
                ReportPropertyChanging("CurrentLandlordContact");
                _CurrentLandlordContact = StructuralObject.SetValidValue(value, false, "CurrentLandlordContact");
                ReportPropertyChanged("CurrentLandlordContact");
                OnCurrentLandlordContactChanged();
            }
        }
        private global::System.String _CurrentLandlordContact;
        partial void OnCurrentLandlordContactChanging(global::System.String value);
        partial void OnCurrentLandlordContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousLandlordContact
        {
            get
            {
                return _PreviousLandlordContact;
            }
            set
            {
                OnPreviousLandlordContactChanging(value);
                ReportPropertyChanging("PreviousLandlordContact");
                _PreviousLandlordContact = StructuralObject.SetValidValue(value, true, "PreviousLandlordContact");
                ReportPropertyChanged("PreviousLandlordContact");
                OnPreviousLandlordContactChanged();
            }
        }
        private global::System.String _PreviousLandlordContact;
        partial void OnPreviousLandlordContactChanging(global::System.String value);
        partial void OnPreviousLandlordContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIdentificationDocAvailalbe
        {
            get
            {
                return _IsIdentificationDocAvailalbe;
            }
            set
            {
                OnIsIdentificationDocAvailalbeChanging(value);
                ReportPropertyChanging("IsIdentificationDocAvailalbe");
                _IsIdentificationDocAvailalbe = StructuralObject.SetValidValue(value, "IsIdentificationDocAvailalbe");
                ReportPropertyChanged("IsIdentificationDocAvailalbe");
                OnIsIdentificationDocAvailalbeChanged();
            }
        }
        private global::System.Boolean _IsIdentificationDocAvailalbe;
        partial void OnIsIdentificationDocAvailalbeChanging(global::System.Boolean value);
        partial void OnIsIdentificationDocAvailalbeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value, "IsApproved");
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditReportScore
        {
            get
            {
                return _CreditReportScore;
            }
            set
            {
                OnCreditReportScoreChanging(value);
                ReportPropertyChanging("CreditReportScore");
                _CreditReportScore = StructuralObject.SetValidValue(value, true, "CreditReportScore");
                ReportPropertyChanged("CreditReportScore");
                OnCreditReportScoreChanged();
            }
        }
        private global::System.String _CreditReportScore;
        partial void OnCreditReportScoreChanging(global::System.String value);
        partial void OnCreditReportScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicationSentDate
        {
            get
            {
                return _ApplicationSentDate;
            }
            set
            {
                OnApplicationSentDateChanging(value);
                ReportPropertyChanging("ApplicationSentDate");
                _ApplicationSentDate = StructuralObject.SetValidValue(value, "ApplicationSentDate");
                ReportPropertyChanged("ApplicationSentDate");
                OnApplicationSentDateChanged();
            }
        }
        private global::System.DateTime _ApplicationSentDate;
        partial void OnApplicationSentDateChanging(global::System.DateTime value);
        partial void OnApplicationSentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantSIN
        {
            get
            {
                return _ApplicantSIN;
            }
            set
            {
                OnApplicantSINChanging(value);
                ReportPropertyChanging("ApplicantSIN");
                _ApplicantSIN = StructuralObject.SetValidValue(value, false, "ApplicantSIN");
                ReportPropertyChanged("ApplicantSIN");
                OnApplicantSINChanged();
            }
        }
        private global::System.String _ApplicantSIN;
        partial void OnApplicantSINChanging(global::System.String value);
        partial void OnApplicantSINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScreeningNotes
        {
            get
            {
                return _ScreeningNotes;
            }
            set
            {
                OnScreeningNotesChanging(value);
                ReportPropertyChanging("ScreeningNotes");
                _ScreeningNotes = StructuralObject.SetValidValue(value, true, "ScreeningNotes");
                ReportPropertyChanged("ScreeningNotes");
                OnScreeningNotesChanged();
            }
        }
        private global::System.String _ScreeningNotes;
        partial void OnScreeningNotesChanging(global::System.String value);
        partial void OnScreeningNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_CreditReport_TenancyApplication", "CreditReport")]
        public EntityCollection<CreditReport> CreditReports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditReport>("ProMasterTenantDataModel.FK_CreditReport_TenancyApplication", "CreditReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditReport>("ProMasterTenantDataModel.FK_CreditReport_TenancyApplication", "CreditReport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_DocumentCheckList_TenancyApplication", "DocumentCheckList")]
        public EntityCollection<DocumentCheckList> DocumentCheckLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocumentCheckList>("ProMasterTenantDataModel.FK_DocumentCheckList_TenancyApplication", "DocumentCheckList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocumentCheckList>("ProMasterTenantDataModel.FK_DocumentCheckList_TenancyApplication", "DocumentCheckList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenancyApplication_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterTenantDataModel.FK_TenancyApplication_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterTenantDataModel.FK_TenancyApplication_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterTenantDataModel.FK_TenancyApplication_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterTenantDataModel.FK_TenancyApplication_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenantScreening_TenancyApplication", "TenantScreening")]
        public EntityCollection<TenantScreening> TenantScreenings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantScreening>("ProMasterTenantDataModel.FK_TenantScreening_TenancyApplication", "TenantScreening");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantScreening>("ProMasterTenantDataModel.FK_TenantScreening_TenancyApplication", "TenantScreening", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_ScreenProcess_TenancyApplication", "ScreenProcess")]
        public EntityCollection<ScreenProcess> ScreenProcesses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ScreenProcess>("ProMasterTenantDataModel.FK_ScreenProcess_TenancyApplication", "ScreenProcess");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ScreenProcess>("ProMasterTenantDataModel.FK_ScreenProcess_TenancyApplication", "ScreenProcess", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="managedBy">Initial value of the ManagedBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Tenant CreateTenant(global::System.Int32 tenantId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Int32 leaseId, global::System.Int32 roleId, global::System.Boolean isActive, global::System.String managedBy, global::System.DateTime createDate, global::System.DateTime updateDate)
        {
            Tenant tenant = new Tenant();
            tenant.TenantId = tenantId;
            tenant.UserName = userName;
            tenant.FirstName = firstName;
            tenant.LastName = lastName;
            tenant.ContactEmail = contactEmail;
            tenant.ContactTelephone1 = contactTelephone1;
            tenant.OnlineAccessEnbaled = onlineAccessEnbaled;
            tenant.UserAvartaImgUrl = userAvartaImgUrl;
            tenant.LeaseId = leaseId;
            tenant.RoleId = roleId;
            tenant.IsActive = isActive;
            tenant.ManagedBy = managedBy;
            tenant.CreateDate = createDate;
            tenant.UpdateDate = updateDate;
            return tenant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                if (_TenantId != value)
                {
                    OnTenantIdChanging(value);
                    ReportPropertyChanging("TenantId");
                    _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                    ReportPropertyChanged("TenantId");
                    OnTenantIdChanged();
                }
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagedBy
        {
            get
            {
                return _ManagedBy;
            }
            set
            {
                OnManagedByChanging(value);
                ReportPropertyChanging("ManagedBy");
                _ManagedBy = StructuralObject.SetValidValue(value, false, "ManagedBy");
                ReportPropertyChanged("ManagedBy");
                OnManagedByChanged();
            }
        }
        private global::System.String _ManagedBy;
        partial void OnManagedByChanging(global::System.String value);
        partial void OnManagedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_RentPayment_Tenant", "RentPayment")]
        public EntityCollection<RentPayment> RentPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentPayment>("ProMasterTenantDataModel.FK_RentPayment_Tenant", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentPayment>("ProMasterTenantDataModel.FK_RentPayment_Tenant", "RentPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="TenantScreening")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TenantScreening : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TenantScreening object.
        /// </summary>
        /// <param name="tenantScreeningId">Initial value of the TenantScreeningId property.</param>
        /// <param name="teancyApplicationId">Initial value of the TeancyApplicationId property.</param>
        /// <param name="screeningCheckTypeId">Initial value of the ScreeningCheckTypeId property.</param>
        /// <param name="screeningCheckStatusId">Initial value of the ScreeningCheckStatusId property.</param>
        /// <param name="screenCheckUpdateDate">Initial value of the ScreenCheckUpdateDate property.</param>
        public static TenantScreening CreateTenantScreening(global::System.Int32 tenantScreeningId, global::System.Int32 teancyApplicationId, global::System.Int32 screeningCheckTypeId, global::System.Int32 screeningCheckStatusId, global::System.DateTime screenCheckUpdateDate)
        {
            TenantScreening tenantScreening = new TenantScreening();
            tenantScreening.TenantScreeningId = tenantScreeningId;
            tenantScreening.TeancyApplicationId = teancyApplicationId;
            tenantScreening.ScreeningCheckTypeId = screeningCheckTypeId;
            tenantScreening.ScreeningCheckStatusId = screeningCheckStatusId;
            tenantScreening.ScreenCheckUpdateDate = screenCheckUpdateDate;
            return tenantScreening;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantScreeningId
        {
            get
            {
                return _TenantScreeningId;
            }
            set
            {
                if (_TenantScreeningId != value)
                {
                    OnTenantScreeningIdChanging(value);
                    ReportPropertyChanging("TenantScreeningId");
                    _TenantScreeningId = StructuralObject.SetValidValue(value, "TenantScreeningId");
                    ReportPropertyChanged("TenantScreeningId");
                    OnTenantScreeningIdChanged();
                }
            }
        }
        private global::System.Int32 _TenantScreeningId;
        partial void OnTenantScreeningIdChanging(global::System.Int32 value);
        partial void OnTenantScreeningIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeancyApplicationId
        {
            get
            {
                return _TeancyApplicationId;
            }
            set
            {
                OnTeancyApplicationIdChanging(value);
                ReportPropertyChanging("TeancyApplicationId");
                _TeancyApplicationId = StructuralObject.SetValidValue(value, "TeancyApplicationId");
                ReportPropertyChanged("TeancyApplicationId");
                OnTeancyApplicationIdChanged();
            }
        }
        private global::System.Int32 _TeancyApplicationId;
        partial void OnTeancyApplicationIdChanging(global::System.Int32 value);
        partial void OnTeancyApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreeningCheckTypeId
        {
            get
            {
                return _ScreeningCheckTypeId;
            }
            set
            {
                OnScreeningCheckTypeIdChanging(value);
                ReportPropertyChanging("ScreeningCheckTypeId");
                _ScreeningCheckTypeId = StructuralObject.SetValidValue(value, "ScreeningCheckTypeId");
                ReportPropertyChanged("ScreeningCheckTypeId");
                OnScreeningCheckTypeIdChanged();
            }
        }
        private global::System.Int32 _ScreeningCheckTypeId;
        partial void OnScreeningCheckTypeIdChanging(global::System.Int32 value);
        partial void OnScreeningCheckTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScreeningCheckStatusId
        {
            get
            {
                return _ScreeningCheckStatusId;
            }
            set
            {
                OnScreeningCheckStatusIdChanging(value);
                ReportPropertyChanging("ScreeningCheckStatusId");
                _ScreeningCheckStatusId = StructuralObject.SetValidValue(value, "ScreeningCheckStatusId");
                ReportPropertyChanged("ScreeningCheckStatusId");
                OnScreeningCheckStatusIdChanged();
            }
        }
        private global::System.Int32 _ScreeningCheckStatusId;
        partial void OnScreeningCheckStatusIdChanging(global::System.Int32 value);
        partial void OnScreeningCheckStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ScreenCheckUpdateDate
        {
            get
            {
                return _ScreenCheckUpdateDate;
            }
            set
            {
                OnScreenCheckUpdateDateChanging(value);
                ReportPropertyChanging("ScreenCheckUpdateDate");
                _ScreenCheckUpdateDate = StructuralObject.SetValidValue(value, "ScreenCheckUpdateDate");
                ReportPropertyChanged("ScreenCheckUpdateDate");
                OnScreenCheckUpdateDateChanged();
            }
        }
        private global::System.DateTime _ScreenCheckUpdateDate;
        partial void OnScreenCheckUpdateDateChanging(global::System.DateTime value);
        partial void OnScreenCheckUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ScreenNotes
        {
            get
            {
                return _ScreenNotes;
            }
            set
            {
                OnScreenNotesChanging(value);
                ReportPropertyChanging("ScreenNotes");
                _ScreenNotes = StructuralObject.SetValidValue(value, true, "ScreenNotes");
                ReportPropertyChanged("ScreenNotes");
                OnScreenNotesChanged();
            }
        }
        private global::System.String _ScreenNotes;
        partial void OnScreenNotesChanging(global::System.String value);
        partial void OnScreenNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenantScreening_ScreeningCheckStatus", "ScreeningCheckStatu")]
        public ScreeningCheckStatu ScreeningCheckStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScreeningCheckStatu>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckStatus", "ScreeningCheckStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScreeningCheckStatu>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckStatus", "ScreeningCheckStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScreeningCheckStatu> ScreeningCheckStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScreeningCheckStatu>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckStatus", "ScreeningCheckStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScreeningCheckStatu>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckStatus", "ScreeningCheckStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenantScreening_ScreeningCheckType", "ScreeningCheckType")]
        public ScreeningCheckType ScreeningCheckType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScreeningCheckType>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckType", "ScreeningCheckType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScreeningCheckType>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckType", "ScreeningCheckType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ScreeningCheckType> ScreeningCheckTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ScreeningCheckType>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckType", "ScreeningCheckType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ScreeningCheckType>("ProMasterTenantDataModel.FK_TenantScreening_ScreeningCheckType", "ScreeningCheckType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterTenantDataModel", "FK_TenantScreening_TenancyApplication", "TenancyApplication")]
        public TenancyApplication TenancyApplication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_TenantScreening_TenancyApplication", "TenancyApplication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_TenantScreening_TenancyApplication", "TenancyApplication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TenancyApplication> TenancyApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_TenantScreening_TenancyApplication", "TenancyApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TenancyApplication>("ProMasterTenantDataModel.FK_TenantScreening_TenancyApplication", "TenancyApplication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterTenantDataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="disabled">Initial value of the Disabled property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName, global::System.Boolean disabled)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.Disabled = disabled;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Disabled
        {
            get
            {
                return _Disabled;
            }
            set
            {
                OnDisabledChanging(value);
                ReportPropertyChanging("Disabled");
                _Disabled = StructuralObject.SetValidValue(value, "Disabled");
                ReportPropertyChanged("Disabled");
                OnDisabledChanged();
            }
        }
        private global::System.Boolean _Disabled;
        partial void OnDisabledChanging(global::System.Boolean value);
        partial void OnDisabledChanged();

        #endregion

    }

    #endregion

}
