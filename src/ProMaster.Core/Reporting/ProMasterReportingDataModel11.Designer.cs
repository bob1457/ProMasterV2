//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_ManagementFee_ManagementContract", "ManagementContract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.ManagementContract), "ManagementFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.ManagementFee), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_ManagementFee_ManagementFeeType", "ManagementFeeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.ManagementFeeType), "ManagementFee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.ManagementFee), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.WorkOrderCategory), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.WorkOrderStatu), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderType", "WorkOrderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.WorkOrderType), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_ManagementContract_ManagementFeeFrequency", "ManagementFeeFrequency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.ManagementFeeFrequency), "ManagementContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.ManagementContract), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_RentPayment_Tenant", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.Tenant), "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.RentPayment), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Cost_CostCategory", "CostCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.CostCategory), "OtherCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.OtherCost), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Lease_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.Property), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_ManagementContract_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.Property), "ManagementContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.ManagementContract), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Event_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.Property), "ManagementEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.ManagementEvent), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Cost_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.Property), "OtherCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.OtherCost), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyAddress", "PropertyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.PropertyAddress), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyManager", "PropertyManager", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.PropertyManager), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyOwner", "PropertyOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.PropertyOwner), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyType", "PropertyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.PropertyType), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_Property_RentalStatus", "RentalStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.RentalStatu), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Reporting.Property), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Reporting.WorkOrder), true)]

#endregion

namespace ProMaster.Core.Reporting
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProMasterReportingDataModelEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProMasterReportingDataModelEntities1 object using the connection string found in the 'ProMasterReportingDataModelEntities1' section of the application configuration file.
        /// </summary>
        public ProMasterReportingDataModelEntities1() : base("name=ProMasterReportingDataModelEntities1", "ProMasterReportingDataModelEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterReportingDataModelEntities1 object.
        /// </summary>
        public ProMasterReportingDataModelEntities1(string connectionString) : base(connectionString, "ProMasterReportingDataModelEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterReportingDataModelEntities1 object.
        /// </summary>
        public ProMasterReportingDataModelEntities1(EntityConnection connection) : base(connection, "ProMasterReportingDataModelEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lease> Leases
        {
            get
            {
                if ((_Leases == null))
                {
                    _Leases = base.CreateObjectSet<Lease>("Leases");
                }
                return _Leases;
            }
        }
        private ObjectSet<Lease> _Leases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementContract> ManagementContracts
        {
            get
            {
                if ((_ManagementContracts == null))
                {
                    _ManagementContracts = base.CreateObjectSet<ManagementContract>("ManagementContracts");
                }
                return _ManagementContracts;
            }
        }
        private ObjectSet<ManagementContract> _ManagementContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementEvent> ManagementEvents
        {
            get
            {
                if ((_ManagementEvents == null))
                {
                    _ManagementEvents = base.CreateObjectSet<ManagementEvent>("ManagementEvents");
                }
                return _ManagementEvents;
            }
        }
        private ObjectSet<ManagementEvent> _ManagementEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementFee> ManagementFees
        {
            get
            {
                if ((_ManagementFees == null))
                {
                    _ManagementFees = base.CreateObjectSet<ManagementFee>("ManagementFees");
                }
                return _ManagementFees;
            }
        }
        private ObjectSet<ManagementFee> _ManagementFees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementFeeType> ManagementFeeTypes
        {
            get
            {
                if ((_ManagementFeeTypes == null))
                {
                    _ManagementFeeTypes = base.CreateObjectSet<ManagementFeeType>("ManagementFeeTypes");
                }
                return _ManagementFeeTypes;
            }
        }
        private ObjectSet<ManagementFeeType> _ManagementFeeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OtherCost> OtherCosts
        {
            get
            {
                if ((_OtherCosts == null))
                {
                    _OtherCosts = base.CreateObjectSet<OtherCost>("OtherCosts");
                }
                return _OtherCosts;
            }
        }
        private ObjectSet<OtherCost> _OtherCosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyOwner> PropertyOwners
        {
            get
            {
                if ((_PropertyOwners == null))
                {
                    _PropertyOwners = base.CreateObjectSet<PropertyOwner>("PropertyOwners");
                }
                return _PropertyOwners;
            }
        }
        private ObjectSet<PropertyOwner> _PropertyOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrder> WorkOrders
        {
            get
            {
                if ((_WorkOrders == null))
                {
                    _WorkOrders = base.CreateObjectSet<WorkOrder>("WorkOrders");
                }
                return _WorkOrders;
            }
        }
        private ObjectSet<WorkOrder> _WorkOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderCategory> WorkOrderCategories
        {
            get
            {
                if ((_WorkOrderCategories == null))
                {
                    _WorkOrderCategories = base.CreateObjectSet<WorkOrderCategory>("WorkOrderCategories");
                }
                return _WorkOrderCategories;
            }
        }
        private ObjectSet<WorkOrderCategory> _WorkOrderCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderStatu> WorkOrderStatus
        {
            get
            {
                if ((_WorkOrderStatus == null))
                {
                    _WorkOrderStatus = base.CreateObjectSet<WorkOrderStatu>("WorkOrderStatus");
                }
                return _WorkOrderStatus;
            }
        }
        private ObjectSet<WorkOrderStatu> _WorkOrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderType> WorkOrderTypes
        {
            get
            {
                if ((_WorkOrderTypes == null))
                {
                    _WorkOrderTypes = base.CreateObjectSet<WorkOrderType>("WorkOrderTypes");
                }
                return _WorkOrderTypes;
            }
        }
        private ObjectSet<WorkOrderType> _WorkOrderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementFeeFrequency> ManagementFeeFrequencies
        {
            get
            {
                if ((_ManagementFeeFrequencies == null))
                {
                    _ManagementFeeFrequencies = base.CreateObjectSet<ManagementFeeFrequency>("ManagementFeeFrequencies");
                }
                return _ManagementFeeFrequencies;
            }
        }
        private ObjectSet<ManagementFeeFrequency> _ManagementFeeFrequencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyManager> PropertyManagers
        {
            get
            {
                if ((_PropertyManagers == null))
                {
                    _PropertyManagers = base.CreateObjectSet<PropertyManager>("PropertyManagers");
                }
                return _PropertyManagers;
            }
        }
        private ObjectSet<PropertyManager> _PropertyManagers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyType> PropertyTypes
        {
            get
            {
                if ((_PropertyTypes == null))
                {
                    _PropertyTypes = base.CreateObjectSet<PropertyType>("PropertyTypes");
                }
                return _PropertyTypes;
            }
        }
        private ObjectSet<PropertyType> _PropertyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentPayment> RentPayments
        {
            get
            {
                if ((_RentPayments == null))
                {
                    _RentPayments = base.CreateObjectSet<RentPayment>("RentPayments");
                }
                return _RentPayments;
            }
        }
        private ObjectSet<RentPayment> _RentPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> Tenants
        {
            get
            {
                if ((_Tenants == null))
                {
                    _Tenants = base.CreateObjectSet<Tenant>("Tenants");
                }
                return _Tenants;
            }
        }
        private ObjectSet<Tenant> _Tenants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CostCategory> CostCategories
        {
            get
            {
                if ((_CostCategories == null))
                {
                    _CostCategories = base.CreateObjectSet<CostCategory>("CostCategories");
                }
                return _CostCategories;
            }
        }
        private ObjectSet<CostCategory> _CostCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentalStatu> RentalStatus
        {
            get
            {
                if ((_RentalStatus == null))
                {
                    _RentalStatus = base.CreateObjectSet<RentalStatu>("RentalStatus");
                }
                return _RentalStatus;
            }
        }
        private ObjectSet<RentalStatu> _RentalStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyAddress> PropertyAddresses
        {
            get
            {
                if ((_PropertyAddresses == null))
                {
                    _PropertyAddresses = base.CreateObjectSet<PropertyAddress>("PropertyAddresses");
                }
                return _PropertyAddresses;
            }
        }
        private ObjectSet<PropertyAddress> _PropertyAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeases(Lease lease)
        {
            base.AddObject("Leases", lease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementContracts(ManagementContract managementContract)
        {
            base.AddObject("ManagementContracts", managementContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementEvents(ManagementEvent managementEvent)
        {
            base.AddObject("ManagementEvents", managementEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementFees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementFees(ManagementFee managementFee)
        {
            base.AddObject("ManagementFees", managementFee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementFeeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementFeeTypes(ManagementFeeType managementFeeType)
        {
            base.AddObject("ManagementFeeTypes", managementFeeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OtherCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOtherCosts(OtherCost otherCost)
        {
            base.AddObject("OtherCosts", otherCost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyOwners(PropertyOwner propertyOwner)
        {
            base.AddObject("PropertyOwners", propertyOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrders(WorkOrder workOrder)
        {
            base.AddObject("WorkOrders", workOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderCategories(WorkOrderCategory workOrderCategory)
        {
            base.AddObject("WorkOrderCategories", workOrderCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderStatus(WorkOrderStatu workOrderStatu)
        {
            base.AddObject("WorkOrderStatus", workOrderStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderTypes(WorkOrderType workOrderType)
        {
            base.AddObject("WorkOrderTypes", workOrderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementFeeFrequencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementFeeFrequencies(ManagementFeeFrequency managementFeeFrequency)
        {
            base.AddObject("ManagementFeeFrequencies", managementFeeFrequency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyManagers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyManagers(PropertyManager propertyManager)
        {
            base.AddObject("PropertyManagers", propertyManager);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyTypes(PropertyType propertyType)
        {
            base.AddObject("PropertyTypes", propertyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentPayments(RentPayment rentPayment)
        {
            base.AddObject("RentPayments", rentPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tenants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenants(Tenant tenant)
        {
            base.AddObject("Tenants", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CostCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCostCategories(CostCategory costCategory)
        {
            base.AddObject("CostCategories", costCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentalStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentalStatus(RentalStatu rentalStatu)
        {
            base.AddObject("RentalStatus", rentalStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyAddresses(PropertyAddress propertyAddress)
        {
            base.AddObject("PropertyAddresses", propertyAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="CostCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CostCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CostCategory object.
        /// </summary>
        /// <param name="costCategoryId">Initial value of the CostCategoryId property.</param>
        /// <param name="costCategoryName">Initial value of the CostCategoryName property.</param>
        public static CostCategory CreateCostCategory(global::System.Int32 costCategoryId, global::System.String costCategoryName)
        {
            CostCategory costCategory = new CostCategory();
            costCategory.CostCategoryId = costCategoryId;
            costCategory.CostCategoryName = costCategoryName;
            return costCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCategoryId
        {
            get
            {
                return _CostCategoryId;
            }
            set
            {
                if (_CostCategoryId != value)
                {
                    OnCostCategoryIdChanging(value);
                    ReportPropertyChanging("CostCategoryId");
                    _CostCategoryId = StructuralObject.SetValidValue(value, "CostCategoryId");
                    ReportPropertyChanged("CostCategoryId");
                    OnCostCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CostCategoryId;
        partial void OnCostCategoryIdChanging(global::System.Int32 value);
        partial void OnCostCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CostCategoryName
        {
            get
            {
                return _CostCategoryName;
            }
            set
            {
                OnCostCategoryNameChanging(value);
                ReportPropertyChanging("CostCategoryName");
                _CostCategoryName = StructuralObject.SetValidValue(value, false, "CostCategoryName");
                ReportPropertyChanged("CostCategoryName");
                OnCostCategoryNameChanged();
            }
        }
        private global::System.String _CostCategoryName;
        partial void OnCostCategoryNameChanging(global::System.String value);
        partial void OnCostCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Cost_CostCategory", "OtherCost")]
        public EntityCollection<OtherCost> OtherCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtherCost>("ProMasterReportingDataModel1.FK_Cost_CostCategory", "OtherCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtherCost>("ProMasterReportingDataModel1.FK_Cost_CostCategory", "OtherCost", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="Lease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lease object.
        /// </summary>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="leaseTitle">Initial value of the LeaseTitle property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="leaseStartDate">Initial value of the LeaseStartDate property.</param>
        /// <param name="leaseEndDate">Initial value of the LeaseEndDate property.</param>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="rentFrequency">Initial value of the RentFrequency property.</param>
        /// <param name="rentAmount">Initial value of the RentAmount property.</param>
        /// <param name="rentDueOn">Initial value of the RentDueOn property.</param>
        /// <param name="damageDepositAmount">Initial value of the DamageDepositAmount property.</param>
        /// <param name="leaseSignDate">Initial value of the LeaseSignDate property.</param>
        /// <param name="addendum">Initial value of the Addendum property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Lease CreateLease(global::System.Int32 leaseId, global::System.String leaseTitle, global::System.Int32 propertyId, global::System.DateTime leaseStartDate, global::System.DateTime leaseEndDate, global::System.Int32 leaseTermId, global::System.String rentFrequency, global::System.Decimal rentAmount, global::System.String rentDueOn, global::System.Decimal damageDepositAmount, global::System.DateTime leaseSignDate, global::System.Boolean addendum, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Lease lease = new Lease();
            lease.LeaseId = leaseId;
            lease.LeaseTitle = leaseTitle;
            lease.PropertyId = propertyId;
            lease.LeaseStartDate = leaseStartDate;
            lease.LeaseEndDate = leaseEndDate;
            lease.LeaseTermId = leaseTermId;
            lease.RentFrequency = rentFrequency;
            lease.RentAmount = rentAmount;
            lease.RentDueOn = rentDueOn;
            lease.DamageDepositAmount = damageDepositAmount;
            lease.LeaseSignDate = leaseSignDate;
            lease.Addendum = addendum;
            lease.CreationDate = creationDate;
            lease.UpdateDate = updateDate;
            lease.IsActive = isActive;
            return lease;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                if (_LeaseId != value)
                {
                    OnLeaseIdChanging(value);
                    ReportPropertyChanging("LeaseId");
                    _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                    ReportPropertyChanged("LeaseId");
                    OnLeaseIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaseTitle
        {
            get
            {
                return _LeaseTitle;
            }
            set
            {
                OnLeaseTitleChanging(value);
                ReportPropertyChanging("LeaseTitle");
                _LeaseTitle = StructuralObject.SetValidValue(value, false, "LeaseTitle");
                ReportPropertyChanged("LeaseTitle");
                OnLeaseTitleChanged();
            }
        }
        private global::System.String _LeaseTitle;
        partial void OnLeaseTitleChanging(global::System.String value);
        partial void OnLeaseTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseDesc
        {
            get
            {
                return _LeaseDesc;
            }
            set
            {
                OnLeaseDescChanging(value);
                ReportPropertyChanging("LeaseDesc");
                _LeaseDesc = StructuralObject.SetValidValue(value, true, "LeaseDesc");
                ReportPropertyChanged("LeaseDesc");
                OnLeaseDescChanged();
            }
        }
        private global::System.String _LeaseDesc;
        partial void OnLeaseDescChanging(global::System.String value);
        partial void OnLeaseDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseStartDate
        {
            get
            {
                return _LeaseStartDate;
            }
            set
            {
                OnLeaseStartDateChanging(value);
                ReportPropertyChanging("LeaseStartDate");
                _LeaseStartDate = StructuralObject.SetValidValue(value, "LeaseStartDate");
                ReportPropertyChanged("LeaseStartDate");
                OnLeaseStartDateChanged();
            }
        }
        private global::System.DateTime _LeaseStartDate;
        partial void OnLeaseStartDateChanging(global::System.DateTime value);
        partial void OnLeaseStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseEndDate
        {
            get
            {
                return _LeaseEndDate;
            }
            set
            {
                OnLeaseEndDateChanging(value);
                ReportPropertyChanging("LeaseEndDate");
                _LeaseEndDate = StructuralObject.SetValidValue(value, "LeaseEndDate");
                ReportPropertyChanged("LeaseEndDate");
                OnLeaseEndDateChanged();
            }
        }
        private global::System.DateTime _LeaseEndDate;
        partial void OnLeaseEndDateChanging(global::System.DateTime value);
        partial void OnLeaseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                OnLeaseTermIdChanging(value);
                ReportPropertyChanging("LeaseTermId");
                _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                ReportPropertyChanged("LeaseTermId");
                OnLeaseTermIdChanged();
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentFrequency
        {
            get
            {
                return _RentFrequency;
            }
            set
            {
                OnRentFrequencyChanging(value);
                ReportPropertyChanging("RentFrequency");
                _RentFrequency = StructuralObject.SetValidValue(value, false, "RentFrequency");
                ReportPropertyChanged("RentFrequency");
                OnRentFrequencyChanged();
            }
        }
        private global::System.String _RentFrequency;
        partial void OnRentFrequencyChanging(global::System.String value);
        partial void OnRentFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentAmount
        {
            get
            {
                return _RentAmount;
            }
            set
            {
                OnRentAmountChanging(value);
                ReportPropertyChanging("RentAmount");
                _RentAmount = StructuralObject.SetValidValue(value, "RentAmount");
                ReportPropertyChanged("RentAmount");
                OnRentAmountChanged();
            }
        }
        private global::System.Decimal _RentAmount;
        partial void OnRentAmountChanging(global::System.Decimal value);
        partial void OnRentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentDueOn
        {
            get
            {
                return _RentDueOn;
            }
            set
            {
                OnRentDueOnChanging(value);
                ReportPropertyChanging("RentDueOn");
                _RentDueOn = StructuralObject.SetValidValue(value, false, "RentDueOn");
                ReportPropertyChanged("RentDueOn");
                OnRentDueOnChanged();
            }
        }
        private global::System.String _RentDueOn;
        partial void OnRentDueOnChanging(global::System.String value);
        partial void OnRentDueOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DamageDepositAmount
        {
            get
            {
                return _DamageDepositAmount;
            }
            set
            {
                OnDamageDepositAmountChanging(value);
                ReportPropertyChanging("DamageDepositAmount");
                _DamageDepositAmount = StructuralObject.SetValidValue(value, "DamageDepositAmount");
                ReportPropertyChanged("DamageDepositAmount");
                OnDamageDepositAmountChanged();
            }
        }
        private global::System.Decimal _DamageDepositAmount;
        partial void OnDamageDepositAmountChanging(global::System.Decimal value);
        partial void OnDamageDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PetDepositAmount
        {
            get
            {
                return _PetDepositAmount;
            }
            set
            {
                OnPetDepositAmountChanging(value);
                ReportPropertyChanging("PetDepositAmount");
                _PetDepositAmount = StructuralObject.SetValidValue(value, "PetDepositAmount");
                ReportPropertyChanged("PetDepositAmount");
                OnPetDepositAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PetDepositAmount;
        partial void OnPetDepositAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPetDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseSignDate
        {
            get
            {
                return _LeaseSignDate;
            }
            set
            {
                OnLeaseSignDateChanging(value);
                ReportPropertyChanging("LeaseSignDate");
                _LeaseSignDate = StructuralObject.SetValidValue(value, "LeaseSignDate");
                ReportPropertyChanged("LeaseSignDate");
                OnLeaseSignDateChanged();
            }
        }
        private global::System.DateTime _LeaseSignDate;
        partial void OnLeaseSignDateChanging(global::System.DateTime value);
        partial void OnLeaseSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseAgreementDocUrl
        {
            get
            {
                return _LeaseAgreementDocUrl;
            }
            set
            {
                OnLeaseAgreementDocUrlChanging(value);
                ReportPropertyChanging("LeaseAgreementDocUrl");
                _LeaseAgreementDocUrl = StructuralObject.SetValidValue(value, true, "LeaseAgreementDocUrl");
                ReportPropertyChanged("LeaseAgreementDocUrl");
                OnLeaseAgreementDocUrlChanged();
            }
        }
        private global::System.String _LeaseAgreementDocUrl;
        partial void OnLeaseAgreementDocUrlChanging(global::System.String value);
        partial void OnLeaseAgreementDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Addendum
        {
            get
            {
                return _Addendum;
            }
            set
            {
                OnAddendumChanging(value);
                ReportPropertyChanging("Addendum");
                _Addendum = StructuralObject.SetValidValue(value, "Addendum");
                ReportPropertyChanged("Addendum");
                OnAddendumChanged();
            }
        }
        private global::System.Boolean _Addendum;
        partial void OnAddendumChanging(global::System.Boolean value);
        partial void OnAddendumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Lease_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Lease_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Lease_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Lease_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterReportingDataModel1.FK_Lease_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="ManagementContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementContract object.
        /// </summary>
        /// <param name="managementContractId">Initial value of the ManagementContractId property.</param>
        /// <param name="managementContractTitile">Initial value of the ManagementContractTitile property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="listingFeeScale">Initial value of the ListingFeeScale property.</param>
        /// <param name="managementFeeScale">Initial value of the ManagementFeeScale property.</param>
        /// <param name="managementFeeFrequencyId">Initial value of the ManagementFeeFrequencyId property.</param>
        /// <param name="contractSignDate">Initial value of the ContractSignDate property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ManagementContract CreateManagementContract(global::System.Int32 managementContractId, global::System.String managementContractTitile, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String listingFeeScale, global::System.String managementFeeScale, global::System.Int32 managementFeeFrequencyId, global::System.DateTime contractSignDate, global::System.Int32 propertyId, global::System.DateTime createDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            ManagementContract managementContract = new ManagementContract();
            managementContract.ManagementContractId = managementContractId;
            managementContract.ManagementContractTitile = managementContractTitile;
            managementContract.StartDate = startDate;
            managementContract.EndDate = endDate;
            managementContract.ListingFeeScale = listingFeeScale;
            managementContract.ManagementFeeScale = managementFeeScale;
            managementContract.ManagementFeeFrequencyId = managementFeeFrequencyId;
            managementContract.ContractSignDate = contractSignDate;
            managementContract.PropertyId = propertyId;
            managementContract.CreateDate = createDate;
            managementContract.UpdateDate = updateDate;
            managementContract.IsActive = isActive;
            return managementContract;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementContractId
        {
            get
            {
                return _ManagementContractId;
            }
            set
            {
                if (_ManagementContractId != value)
                {
                    OnManagementContractIdChanging(value);
                    ReportPropertyChanging("ManagementContractId");
                    _ManagementContractId = StructuralObject.SetValidValue(value, "ManagementContractId");
                    ReportPropertyChanged("ManagementContractId");
                    OnManagementContractIdChanged();
                }
            }
        }
        private global::System.Int32 _ManagementContractId;
        partial void OnManagementContractIdChanging(global::System.Int32 value);
        partial void OnManagementContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementContractTitile
        {
            get
            {
                return _ManagementContractTitile;
            }
            set
            {
                OnManagementContractTitileChanging(value);
                ReportPropertyChanging("ManagementContractTitile");
                _ManagementContractTitile = StructuralObject.SetValidValue(value, false, "ManagementContractTitile");
                ReportPropertyChanged("ManagementContractTitile");
                OnManagementContractTitileChanged();
            }
        }
        private global::System.String _ManagementContractTitile;
        partial void OnManagementContractTitileChanging(global::System.String value);
        partial void OnManagementContractTitileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingFeeScale
        {
            get
            {
                return _ListingFeeScale;
            }
            set
            {
                OnListingFeeScaleChanging(value);
                ReportPropertyChanging("ListingFeeScale");
                _ListingFeeScale = StructuralObject.SetValidValue(value, false, "ListingFeeScale");
                ReportPropertyChanged("ListingFeeScale");
                OnListingFeeScaleChanged();
            }
        }
        private global::System.String _ListingFeeScale;
        partial void OnListingFeeScaleChanging(global::System.String value);
        partial void OnListingFeeScaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementFeeScale
        {
            get
            {
                return _ManagementFeeScale;
            }
            set
            {
                OnManagementFeeScaleChanging(value);
                ReportPropertyChanging("ManagementFeeScale");
                _ManagementFeeScale = StructuralObject.SetValidValue(value, false, "ManagementFeeScale");
                ReportPropertyChanged("ManagementFeeScale");
                OnManagementFeeScaleChanged();
            }
        }
        private global::System.String _ManagementFeeScale;
        partial void OnManagementFeeScaleChanging(global::System.String value);
        partial void OnManagementFeeScaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeFrequencyId
        {
            get
            {
                return _ManagementFeeFrequencyId;
            }
            set
            {
                OnManagementFeeFrequencyIdChanging(value);
                ReportPropertyChanging("ManagementFeeFrequencyId");
                _ManagementFeeFrequencyId = StructuralObject.SetValidValue(value, "ManagementFeeFrequencyId");
                ReportPropertyChanged("ManagementFeeFrequencyId");
                OnManagementFeeFrequencyIdChanged();
            }
        }
        private global::System.Int32 _ManagementFeeFrequencyId;
        partial void OnManagementFeeFrequencyIdChanging(global::System.Int32 value);
        partial void OnManagementFeeFrequencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ContractSignDate
        {
            get
            {
                return _ContractSignDate;
            }
            set
            {
                OnContractSignDateChanging(value);
                ReportPropertyChanging("ContractSignDate");
                _ContractSignDate = StructuralObject.SetValidValue(value, "ContractSignDate");
                ReportPropertyChanged("ContractSignDate");
                OnContractSignDateChanged();
            }
        }
        private global::System.DateTime _ContractSignDate;
        partial void OnContractSignDateChanging(global::System.DateTime value);
        partial void OnContractSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagementContractDocUrl
        {
            get
            {
                return _ManagementContractDocUrl;
            }
            set
            {
                OnManagementContractDocUrlChanging(value);
                ReportPropertyChanging("ManagementContractDocUrl");
                _ManagementContractDocUrl = StructuralObject.SetValidValue(value, true, "ManagementContractDocUrl");
                ReportPropertyChanged("ManagementContractDocUrl");
                OnManagementContractDocUrlChanged();
            }
        }
        private global::System.String _ManagementContractDocUrl;
        partial void OnManagementContractDocUrlChanging(global::System.String value);
        partial void OnManagementContractDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementFee_ManagementContract", "ManagementFee")]
        public EntityCollection<ManagementFee> ManagementFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementFee>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementContract", "ManagementFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementFee>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementContract", "ManagementFee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementContract_ManagementFeeFrequency", "ManagementFeeFrequency")]
        public ManagementFeeFrequency ManagementFeeFrequency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeFrequency>("ProMasterReportingDataModel1.FK_ManagementContract_ManagementFeeFrequency", "ManagementFeeFrequency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeFrequency>("ProMasterReportingDataModel1.FK_ManagementContract_ManagementFeeFrequency", "ManagementFeeFrequency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManagementFeeFrequency> ManagementFeeFrequencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeFrequency>("ProMasterReportingDataModel1.FK_ManagementContract_ManagementFeeFrequency", "ManagementFeeFrequency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManagementFeeFrequency>("ProMasterReportingDataModel1.FK_ManagementContract_ManagementFeeFrequency", "ManagementFeeFrequency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementContract_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_ManagementContract_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_ManagementContract_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_ManagementContract_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterReportingDataModel1.FK_ManagementContract_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="ManagementEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementEvent object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventName">Initial value of the EventName property.</param>
        /// <param name="eventDetails">Initial value of the EventDetails property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="mileageIncurred">Initial value of the MileageIncurred property.</param>
        /// <param name="timeSpent">Initial value of the TimeSpent property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static ManagementEvent CreateManagementEvent(global::System.Int32 eventId, global::System.String eventName, global::System.String eventDetails, global::System.DateTime eventDate, global::System.Int32 eventTypeId, global::System.Int32 propertyId, global::System.Decimal mileageIncurred, global::System.Decimal timeSpent, global::System.DateTime creationDate)
        {
            ManagementEvent managementEvent = new ManagementEvent();
            managementEvent.EventId = eventId;
            managementEvent.EventName = eventName;
            managementEvent.EventDetails = eventDetails;
            managementEvent.EventDate = eventDate;
            managementEvent.EventTypeId = eventTypeId;
            managementEvent.PropertyId = propertyId;
            managementEvent.MileageIncurred = mileageIncurred;
            managementEvent.TimeSpent = timeSpent;
            managementEvent.CreationDate = creationDate;
            return managementEvent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, "EventId");
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                OnEventNameChanging(value);
                ReportPropertyChanging("EventName");
                _EventName = StructuralObject.SetValidValue(value, false, "EventName");
                ReportPropertyChanged("EventName");
                OnEventNameChanged();
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDetails
        {
            get
            {
                return _EventDetails;
            }
            set
            {
                OnEventDetailsChanging(value);
                ReportPropertyChanging("EventDetails");
                _EventDetails = StructuralObject.SetValidValue(value, false, "EventDetails");
                ReportPropertyChanged("EventDetails");
                OnEventDetailsChanged();
            }
        }
        private global::System.String _EventDetails;
        partial void OnEventDetailsChanging(global::System.String value);
        partial void OnEventDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value, "EventDate");
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                OnEventTypeIdChanging(value);
                ReportPropertyChanging("EventTypeId");
                _EventTypeId = StructuralObject.SetValidValue(value, "EventTypeId");
                ReportPropertyChanged("EventTypeId");
                OnEventTypeIdChanged();
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MileageIncurred
        {
            get
            {
                return _MileageIncurred;
            }
            set
            {
                OnMileageIncurredChanging(value);
                ReportPropertyChanging("MileageIncurred");
                _MileageIncurred = StructuralObject.SetValidValue(value, "MileageIncurred");
                ReportPropertyChanged("MileageIncurred");
                OnMileageIncurredChanged();
            }
        }
        private global::System.Decimal _MileageIncurred;
        partial void OnMileageIncurredChanging(global::System.Decimal value);
        partial void OnMileageIncurredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TimeSpent
        {
            get
            {
                return _TimeSpent;
            }
            set
            {
                OnTimeSpentChanging(value);
                ReportPropertyChanging("TimeSpent");
                _TimeSpent = StructuralObject.SetValidValue(value, "TimeSpent");
                ReportPropertyChanged("TimeSpent");
                OnTimeSpentChanged();
            }
        }
        private global::System.Decimal _TimeSpent;
        partial void OnTimeSpentChanging(global::System.Decimal value);
        partial void OnTimeSpentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Event_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Event_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Event_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Event_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterReportingDataModel1.FK_Event_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="ManagementFee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementFee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementFee object.
        /// </summary>
        /// <param name="managementFeeId">Initial value of the ManagementFeeId property.</param>
        /// <param name="managementFeeTypeId">Initial value of the ManagementFeeTypeId property.</param>
        /// <param name="managementFeeAmount">Initial value of the ManagementFeeAmount property.</param>
        /// <param name="managementFeeMonth">Initial value of the ManagementFeeMonth property.</param>
        /// <param name="managementFeeYear">Initial value of the ManagementFeeYear property.</param>
        /// <param name="isReceived">Initial value of the IsReceived property.</param>
        /// <param name="managementDueDate">Initial value of the ManagementDueDate property.</param>
        /// <param name="receivedDate">Initial value of the ReceivedDate property.</param>
        /// <param name="managementContractId">Initial value of the ManagementContractId property.</param>
        public static ManagementFee CreateManagementFee(global::System.Int32 managementFeeId, global::System.Int32 managementFeeTypeId, global::System.Decimal managementFeeAmount, global::System.String managementFeeMonth, global::System.String managementFeeYear, global::System.Boolean isReceived, global::System.DateTime managementDueDate, global::System.DateTime receivedDate, global::System.Int32 managementContractId)
        {
            ManagementFee managementFee = new ManagementFee();
            managementFee.ManagementFeeId = managementFeeId;
            managementFee.ManagementFeeTypeId = managementFeeTypeId;
            managementFee.ManagementFeeAmount = managementFeeAmount;
            managementFee.ManagementFeeMonth = managementFeeMonth;
            managementFee.ManagementFeeYear = managementFeeYear;
            managementFee.IsReceived = isReceived;
            managementFee.ManagementDueDate = managementDueDate;
            managementFee.ReceivedDate = receivedDate;
            managementFee.ManagementContractId = managementContractId;
            return managementFee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeId
        {
            get
            {
                return _ManagementFeeId;
            }
            set
            {
                if (_ManagementFeeId != value)
                {
                    OnManagementFeeIdChanging(value);
                    ReportPropertyChanging("ManagementFeeId");
                    _ManagementFeeId = StructuralObject.SetValidValue(value, "ManagementFeeId");
                    ReportPropertyChanged("ManagementFeeId");
                    OnManagementFeeIdChanged();
                }
            }
        }
        private global::System.Int32 _ManagementFeeId;
        partial void OnManagementFeeIdChanging(global::System.Int32 value);
        partial void OnManagementFeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeTypeId
        {
            get
            {
                return _ManagementFeeTypeId;
            }
            set
            {
                OnManagementFeeTypeIdChanging(value);
                ReportPropertyChanging("ManagementFeeTypeId");
                _ManagementFeeTypeId = StructuralObject.SetValidValue(value, "ManagementFeeTypeId");
                ReportPropertyChanged("ManagementFeeTypeId");
                OnManagementFeeTypeIdChanged();
            }
        }
        private global::System.Int32 _ManagementFeeTypeId;
        partial void OnManagementFeeTypeIdChanging(global::System.Int32 value);
        partial void OnManagementFeeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ManagementFeeAmount
        {
            get
            {
                return _ManagementFeeAmount;
            }
            set
            {
                OnManagementFeeAmountChanging(value);
                ReportPropertyChanging("ManagementFeeAmount");
                _ManagementFeeAmount = StructuralObject.SetValidValue(value, "ManagementFeeAmount");
                ReportPropertyChanged("ManagementFeeAmount");
                OnManagementFeeAmountChanged();
            }
        }
        private global::System.Decimal _ManagementFeeAmount;
        partial void OnManagementFeeAmountChanging(global::System.Decimal value);
        partial void OnManagementFeeAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementFeeMonth
        {
            get
            {
                return _ManagementFeeMonth;
            }
            set
            {
                OnManagementFeeMonthChanging(value);
                ReportPropertyChanging("ManagementFeeMonth");
                _ManagementFeeMonth = StructuralObject.SetValidValue(value, false, "ManagementFeeMonth");
                ReportPropertyChanged("ManagementFeeMonth");
                OnManagementFeeMonthChanged();
            }
        }
        private global::System.String _ManagementFeeMonth;
        partial void OnManagementFeeMonthChanging(global::System.String value);
        partial void OnManagementFeeMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementFeeYear
        {
            get
            {
                return _ManagementFeeYear;
            }
            set
            {
                OnManagementFeeYearChanging(value);
                ReportPropertyChanging("ManagementFeeYear");
                _ManagementFeeYear = StructuralObject.SetValidValue(value, false, "ManagementFeeYear");
                ReportPropertyChanged("ManagementFeeYear");
                OnManagementFeeYearChanged();
            }
        }
        private global::System.String _ManagementFeeYear;
        partial void OnManagementFeeYearChanging(global::System.String value);
        partial void OnManagementFeeYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReceived
        {
            get
            {
                return _IsReceived;
            }
            set
            {
                OnIsReceivedChanging(value);
                ReportPropertyChanging("IsReceived");
                _IsReceived = StructuralObject.SetValidValue(value, "IsReceived");
                ReportPropertyChanged("IsReceived");
                OnIsReceivedChanged();
            }
        }
        private global::System.Boolean _IsReceived;
        partial void OnIsReceivedChanging(global::System.Boolean value);
        partial void OnIsReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ManagementDueDate
        {
            get
            {
                return _ManagementDueDate;
            }
            set
            {
                OnManagementDueDateChanging(value);
                ReportPropertyChanging("ManagementDueDate");
                _ManagementDueDate = StructuralObject.SetValidValue(value, "ManagementDueDate");
                ReportPropertyChanged("ManagementDueDate");
                OnManagementDueDateChanged();
            }
        }
        private global::System.DateTime _ManagementDueDate;
        partial void OnManagementDueDateChanging(global::System.DateTime value);
        partial void OnManagementDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value, "ReceivedDate");
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private global::System.DateTime _ReceivedDate;
        partial void OnReceivedDateChanging(global::System.DateTime value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementContractId
        {
            get
            {
                return _ManagementContractId;
            }
            set
            {
                OnManagementContractIdChanging(value);
                ReportPropertyChanging("ManagementContractId");
                _ManagementContractId = StructuralObject.SetValidValue(value, "ManagementContractId");
                ReportPropertyChanged("ManagementContractId");
                OnManagementContractIdChanged();
            }
        }
        private global::System.Int32 _ManagementContractId;
        partial void OnManagementContractIdChanging(global::System.Int32 value);
        partial void OnManagementContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementFee_ManagementContract", "ManagementContract")]
        public ManagementContract ManagementContract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementContract", "ManagementContract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementContract", "ManagementContract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManagementContract> ManagementContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementContract", "ManagementContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementContract", "ManagementContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementFee_ManagementFeeType", "ManagementFeeType")]
        public ManagementFeeType ManagementFeeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeType>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementFeeType", "ManagementFeeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeType>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementFeeType", "ManagementFeeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManagementFeeType> ManagementFeeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeType>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementFeeType", "ManagementFeeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManagementFeeType>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementFeeType", "ManagementFeeType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="ManagementFeeFrequency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementFeeFrequency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementFeeFrequency object.
        /// </summary>
        /// <param name="managementFeeFrequencyId">Initial value of the ManagementFeeFrequencyId property.</param>
        /// <param name="managementFeeFrequency1">Initial value of the ManagementFeeFrequency1 property.</param>
        public static ManagementFeeFrequency CreateManagementFeeFrequency(global::System.Int32 managementFeeFrequencyId, global::System.String managementFeeFrequency1)
        {
            ManagementFeeFrequency managementFeeFrequency = new ManagementFeeFrequency();
            managementFeeFrequency.ManagementFeeFrequencyId = managementFeeFrequencyId;
            managementFeeFrequency.ManagementFeeFrequency1 = managementFeeFrequency1;
            return managementFeeFrequency;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeFrequencyId
        {
            get
            {
                return _ManagementFeeFrequencyId;
            }
            set
            {
                if (_ManagementFeeFrequencyId != value)
                {
                    OnManagementFeeFrequencyIdChanging(value);
                    ReportPropertyChanging("ManagementFeeFrequencyId");
                    _ManagementFeeFrequencyId = StructuralObject.SetValidValue(value, "ManagementFeeFrequencyId");
                    ReportPropertyChanged("ManagementFeeFrequencyId");
                    OnManagementFeeFrequencyIdChanged();
                }
            }
        }
        private global::System.Int32 _ManagementFeeFrequencyId;
        partial void OnManagementFeeFrequencyIdChanging(global::System.Int32 value);
        partial void OnManagementFeeFrequencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementFeeFrequency1
        {
            get
            {
                return _ManagementFeeFrequency1;
            }
            set
            {
                OnManagementFeeFrequency1Changing(value);
                ReportPropertyChanging("ManagementFeeFrequency1");
                _ManagementFeeFrequency1 = StructuralObject.SetValidValue(value, false, "ManagementFeeFrequency1");
                ReportPropertyChanged("ManagementFeeFrequency1");
                OnManagementFeeFrequency1Changed();
            }
        }
        private global::System.String _ManagementFeeFrequency1;
        partial void OnManagementFeeFrequency1Changing(global::System.String value);
        partial void OnManagementFeeFrequency1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementContract_ManagementFeeFrequency", "ManagementContract")]
        public EntityCollection<ManagementContract> ManagementContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementContract_ManagementFeeFrequency", "ManagementContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementContract_ManagementFeeFrequency", "ManagementContract", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="ManagementFeeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementFeeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementFeeType object.
        /// </summary>
        /// <param name="managementFeeTypeId">Initial value of the ManagementFeeTypeId property.</param>
        /// <param name="managementFeeType1">Initial value of the ManagementFeeType1 property.</param>
        public static ManagementFeeType CreateManagementFeeType(global::System.Int32 managementFeeTypeId, global::System.String managementFeeType1)
        {
            ManagementFeeType managementFeeType = new ManagementFeeType();
            managementFeeType.ManagementFeeTypeId = managementFeeTypeId;
            managementFeeType.ManagementFeeType1 = managementFeeType1;
            return managementFeeType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeTypeId
        {
            get
            {
                return _ManagementFeeTypeId;
            }
            set
            {
                if (_ManagementFeeTypeId != value)
                {
                    OnManagementFeeTypeIdChanging(value);
                    ReportPropertyChanging("ManagementFeeTypeId");
                    _ManagementFeeTypeId = StructuralObject.SetValidValue(value, "ManagementFeeTypeId");
                    ReportPropertyChanged("ManagementFeeTypeId");
                    OnManagementFeeTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ManagementFeeTypeId;
        partial void OnManagementFeeTypeIdChanging(global::System.Int32 value);
        partial void OnManagementFeeTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementFeeType1
        {
            get
            {
                return _ManagementFeeType1;
            }
            set
            {
                OnManagementFeeType1Changing(value);
                ReportPropertyChanging("ManagementFeeType1");
                _ManagementFeeType1 = StructuralObject.SetValidValue(value, false, "ManagementFeeType1");
                ReportPropertyChanged("ManagementFeeType1");
                OnManagementFeeType1Changed();
            }
        }
        private global::System.String _ManagementFeeType1;
        partial void OnManagementFeeType1Changing(global::System.String value);
        partial void OnManagementFeeType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementFee_ManagementFeeType", "ManagementFee")]
        public EntityCollection<ManagementFee> ManagementFees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementFee>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementFeeType", "ManagementFee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementFee>("ProMasterReportingDataModel1.FK_ManagementFee_ManagementFeeType", "ManagementFee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="OtherCost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtherCost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OtherCost object.
        /// </summary>
        /// <param name="otherCostId">Initial value of the OtherCostId property.</param>
        /// <param name="costName">Initial value of the CostName property.</param>
        /// <param name="costCategoryId">Initial value of the CostCategoryId property.</param>
        /// <param name="costAmount">Initial value of the CostAmount property.</param>
        /// <param name="isPaid">Initial value of the IsPaid property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="costAddedDate">Initial value of the CostAddedDate property.</param>
        public static OtherCost CreateOtherCost(global::System.Int32 otherCostId, global::System.String costName, global::System.Int32 costCategoryId, global::System.Decimal costAmount, global::System.Boolean isPaid, global::System.Int32 propertyId, global::System.DateTime costAddedDate)
        {
            OtherCost otherCost = new OtherCost();
            otherCost.OtherCostId = otherCostId;
            otherCost.CostName = costName;
            otherCost.CostCategoryId = costCategoryId;
            otherCost.CostAmount = costAmount;
            otherCost.IsPaid = isPaid;
            otherCost.PropertyId = propertyId;
            otherCost.CostAddedDate = costAddedDate;
            return otherCost;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OtherCostId
        {
            get
            {
                return _OtherCostId;
            }
            set
            {
                if (_OtherCostId != value)
                {
                    OnOtherCostIdChanging(value);
                    ReportPropertyChanging("OtherCostId");
                    _OtherCostId = StructuralObject.SetValidValue(value, "OtherCostId");
                    ReportPropertyChanged("OtherCostId");
                    OnOtherCostIdChanged();
                }
            }
        }
        private global::System.Int32 _OtherCostId;
        partial void OnOtherCostIdChanging(global::System.Int32 value);
        partial void OnOtherCostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CostName
        {
            get
            {
                return _CostName;
            }
            set
            {
                OnCostNameChanging(value);
                ReportPropertyChanging("CostName");
                _CostName = StructuralObject.SetValidValue(value, false, "CostName");
                ReportPropertyChanged("CostName");
                OnCostNameChanged();
            }
        }
        private global::System.String _CostName;
        partial void OnCostNameChanging(global::System.String value);
        partial void OnCostNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostDesc
        {
            get
            {
                return _CostDesc;
            }
            set
            {
                OnCostDescChanging(value);
                ReportPropertyChanging("CostDesc");
                _CostDesc = StructuralObject.SetValidValue(value, true, "CostDesc");
                ReportPropertyChanged("CostDesc");
                OnCostDescChanged();
            }
        }
        private global::System.String _CostDesc;
        partial void OnCostDescChanging(global::System.String value);
        partial void OnCostDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCategoryId
        {
            get
            {
                return _CostCategoryId;
            }
            set
            {
                OnCostCategoryIdChanging(value);
                ReportPropertyChanging("CostCategoryId");
                _CostCategoryId = StructuralObject.SetValidValue(value, "CostCategoryId");
                ReportPropertyChanged("CostCategoryId");
                OnCostCategoryIdChanged();
            }
        }
        private global::System.Int32 _CostCategoryId;
        partial void OnCostCategoryIdChanging(global::System.Int32 value);
        partial void OnCostCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CostAmount
        {
            get
            {
                return _CostAmount;
            }
            set
            {
                OnCostAmountChanging(value);
                ReportPropertyChanging("CostAmount");
                _CostAmount = StructuralObject.SetValidValue(value, "CostAmount");
                ReportPropertyChanged("CostAmount");
                OnCostAmountChanged();
            }
        }
        private global::System.Decimal _CostAmount;
        partial void OnCostAmountChanging(global::System.Decimal value);
        partial void OnCostAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value, "IsPaid");
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private global::System.Boolean _IsPaid;
        partial void OnIsPaidChanging(global::System.Boolean value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostInvoiceDocUrl
        {
            get
            {
                return _CostInvoiceDocUrl;
            }
            set
            {
                OnCostInvoiceDocUrlChanging(value);
                ReportPropertyChanging("CostInvoiceDocUrl");
                _CostInvoiceDocUrl = StructuralObject.SetValidValue(value, true, "CostInvoiceDocUrl");
                ReportPropertyChanged("CostInvoiceDocUrl");
                OnCostInvoiceDocUrlChanged();
            }
        }
        private global::System.String _CostInvoiceDocUrl;
        partial void OnCostInvoiceDocUrlChanging(global::System.String value);
        partial void OnCostInvoiceDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CostAddedDate
        {
            get
            {
                return _CostAddedDate;
            }
            set
            {
                OnCostAddedDateChanging(value);
                ReportPropertyChanging("CostAddedDate");
                _CostAddedDate = StructuralObject.SetValidValue(value, "CostAddedDate");
                ReportPropertyChanged("CostAddedDate");
                OnCostAddedDateChanged();
            }
        }
        private global::System.DateTime _CostAddedDate;
        partial void OnCostAddedDateChanging(global::System.DateTime value);
        partial void OnCostAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CostUpdateDate
        {
            get
            {
                return _CostUpdateDate;
            }
            set
            {
                OnCostUpdateDateChanging(value);
                ReportPropertyChanging("CostUpdateDate");
                _CostUpdateDate = StructuralObject.SetValidValue(value, "CostUpdateDate");
                ReportPropertyChanged("CostUpdateDate");
                OnCostUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CostUpdateDate;
        partial void OnCostUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCostUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Cost_CostCategory", "CostCategory")]
        public CostCategory CostCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCategory>("ProMasterReportingDataModel1.FK_Cost_CostCategory", "CostCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCategory>("ProMasterReportingDataModel1.FK_Cost_CostCategory", "CostCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostCategory> CostCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCategory>("ProMasterReportingDataModel1.FK_Cost_CostCategory", "CostCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostCategory>("ProMasterReportingDataModel1.FK_Cost_CostCategory", "CostCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Cost_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Cost_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Cost_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_Cost_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterReportingDataModel1.FK_Cost_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="propertyBuildYear">Initial value of the PropertyBuildYear property.</param>
        /// <param name="propertyMgmntlStatusId">Initial value of the PropertyMgmntlStatusId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Property CreateProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.Int32 propertyTypeId, global::System.Int32 propertyAddressId, global::System.Int32 propertyFeatureId, global::System.Int32 propertyFacilityId, global::System.Int32 propertyOwnerId, global::System.Int32 propertyManagerId, global::System.Int32 propertyBuildYear, global::System.Int32 propertyMgmntlStatusId, global::System.Boolean isActive, global::System.Boolean isShared, global::System.Int32 rentalStatusId, global::System.DateTime createdDate, global::System.DateTime updateDate)
        {
            Property property = new Property();
            property.PropertyId = propertyId;
            property.PropertyName = propertyName;
            property.PropertyTypeId = propertyTypeId;
            property.PropertyAddressId = propertyAddressId;
            property.PropertyFeatureId = propertyFeatureId;
            property.PropertyFacilityId = propertyFacilityId;
            property.PropertyOwnerId = propertyOwnerId;
            property.PropertyManagerId = propertyManagerId;
            property.PropertyBuildYear = propertyBuildYear;
            property.PropertyMgmntlStatusId = propertyMgmntlStatusId;
            property.IsActive = isActive;
            property.IsShared = isShared;
            property.RentalStatusId = rentalStatusId;
            property.CreatedDate = createdDate;
            property.UpdateDate = updateDate;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDesc
        {
            get
            {
                return _PropertyDesc;
            }
            set
            {
                OnPropertyDescChanging(value);
                ReportPropertyChanging("PropertyDesc");
                _PropertyDesc = StructuralObject.SetValidValue(value, true, "PropertyDesc");
                ReportPropertyChanged("PropertyDesc");
                OnPropertyDescChanged();
            }
        }
        private global::System.String _PropertyDesc;
        partial void OnPropertyDescChanging(global::System.String value);
        partial void OnPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyListDesc
        {
            get
            {
                return _PropertyListDesc;
            }
            set
            {
                OnPropertyListDescChanging(value);
                ReportPropertyChanging("PropertyListDesc");
                _PropertyListDesc = StructuralObject.SetValidValue(value, true, "PropertyListDesc");
                ReportPropertyChanged("PropertyListDesc");
                OnPropertyListDescChanged();
            }
        }
        private global::System.String _PropertyListDesc;
        partial void OnPropertyListDescChanging(global::System.String value);
        partial void OnPropertyListDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                OnPropertyTypeIdChanging(value);
                ReportPropertyChanging("PropertyTypeId");
                _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                ReportPropertyChanged("PropertyTypeId");
                OnPropertyTypeIdChanged();
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrataCouncilId
        {
            get
            {
                return _StrataCouncilId;
            }
            set
            {
                OnStrataCouncilIdChanging(value);
                ReportPropertyChanging("StrataCouncilId");
                _StrataCouncilId = StructuralObject.SetValidValue(value, "StrataCouncilId");
                ReportPropertyChanged("StrataCouncilId");
                OnStrataCouncilIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StrataCouncilId;
        partial void OnStrataCouncilIdChanging(Nullable<global::System.Int32> value);
        partial void OnStrataCouncilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                OnPropertyAddressIdChanging(value);
                ReportPropertyChanging("PropertyAddressId");
                _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                ReportPropertyChanged("PropertyAddressId");
                OnPropertyAddressIdChanged();
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                OnPropertyFeatureIdChanging(value);
                ReportPropertyChanging("PropertyFeatureId");
                _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                ReportPropertyChanged("PropertyFeatureId");
                OnPropertyFeatureIdChanged();
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                OnPropertyFacilityIdChanging(value);
                ReportPropertyChanging("PropertyFacilityId");
                _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                ReportPropertyChanged("PropertyFacilityId");
                OnPropertyFacilityIdChanged();
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                OnPropertyOwnerIdChanging(value);
                ReportPropertyChanging("PropertyOwnerId");
                _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                ReportPropertyChanged("PropertyOwnerId");
                OnPropertyOwnerIdChanged();
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                OnPropertyManagerIdChanging(value);
                ReportPropertyChanging("PropertyManagerId");
                _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                ReportPropertyChanged("PropertyManagerId");
                OnPropertyManagerIdChanged();
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyImgUrl
        {
            get
            {
                return _PropertyImgUrl;
            }
            set
            {
                OnPropertyImgUrlChanging(value);
                ReportPropertyChanging("PropertyImgUrl");
                _PropertyImgUrl = StructuralObject.SetValidValue(value, true, "PropertyImgUrl");
                ReportPropertyChanged("PropertyImgUrl");
                OnPropertyImgUrlChanged();
            }
        }
        private global::System.String _PropertyImgUrl;
        partial void OnPropertyImgUrlChanging(global::System.String value);
        partial void OnPropertyImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyVideoUrl
        {
            get
            {
                return _PropertyVideoUrl;
            }
            set
            {
                OnPropertyVideoUrlChanging(value);
                ReportPropertyChanging("PropertyVideoUrl");
                _PropertyVideoUrl = StructuralObject.SetValidValue(value, true, "PropertyVideoUrl");
                ReportPropertyChanged("PropertyVideoUrl");
                OnPropertyVideoUrlChanged();
            }
        }
        private global::System.String _PropertyVideoUrl;
        partial void OnPropertyVideoUrlChanging(global::System.String value);
        partial void OnPropertyVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyBuildYear
        {
            get
            {
                return _PropertyBuildYear;
            }
            set
            {
                OnPropertyBuildYearChanging(value);
                ReportPropertyChanging("PropertyBuildYear");
                _PropertyBuildYear = StructuralObject.SetValidValue(value, "PropertyBuildYear");
                ReportPropertyChanged("PropertyBuildYear");
                OnPropertyBuildYearChanged();
            }
        }
        private global::System.Int32 _PropertyBuildYear;
        partial void OnPropertyBuildYearChanging(global::System.Int32 value);
        partial void OnPropertyBuildYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyMgmntlStatusId
        {
            get
            {
                return _PropertyMgmntlStatusId;
            }
            set
            {
                OnPropertyMgmntlStatusIdChanging(value);
                ReportPropertyChanging("PropertyMgmntlStatusId");
                _PropertyMgmntlStatusId = StructuralObject.SetValidValue(value, "PropertyMgmntlStatusId");
                ReportPropertyChanged("PropertyMgmntlStatusId");
                OnPropertyMgmntlStatusIdChanged();
            }
        }
        private global::System.Int32 _PropertyMgmntlStatusId;
        partial void OnPropertyMgmntlStatusIdChanging(global::System.Int32 value);
        partial void OnPropertyMgmntlStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                OnRentalStatusIdChanging(value);
                ReportPropertyChanging("RentalStatusId");
                _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                ReportPropertyChanged("RentalStatusId");
                OnRentalStatusIdChanged();
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Lease_Property", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterReportingDataModel1.FK_Lease_Property", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterReportingDataModel1.FK_Lease_Property", "Lease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_ManagementContract_Property", "ManagementContract")]
        public EntityCollection<ManagementContract> ManagementContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementContract_Property", "ManagementContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementContract>("ProMasterReportingDataModel1.FK_ManagementContract_Property", "ManagementContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Event_Property", "ManagementEvent")]
        public EntityCollection<ManagementEvent> ManagementEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementEvent>("ProMasterReportingDataModel1.FK_Event_Property", "ManagementEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementEvent>("ProMasterReportingDataModel1.FK_Event_Property", "ManagementEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Cost_Property", "OtherCost")]
        public EntityCollection<OtherCost> OtherCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtherCost>("ProMasterReportingDataModel1.FK_Cost_Property", "OtherCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtherCost>("ProMasterReportingDataModel1.FK_Cost_Property", "OtherCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyAddress", "PropertyAddress")]
        public PropertyAddress PropertyAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterReportingDataModel1.FK_Property_PropertyAddress", "PropertyAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterReportingDataModel1.FK_Property_PropertyAddress", "PropertyAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyAddress> PropertyAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterReportingDataModel1.FK_Property_PropertyAddress", "PropertyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyAddress>("ProMasterReportingDataModel1.FK_Property_PropertyAddress", "PropertyAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyManager", "PropertyManager")]
        public PropertyManager PropertyManager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyManager>("ProMasterReportingDataModel1.FK_Property_PropertyManager", "PropertyManager").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyManager>("ProMasterReportingDataModel1.FK_Property_PropertyManager", "PropertyManager").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyManager> PropertyManagerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyManager>("ProMasterReportingDataModel1.FK_Property_PropertyManager", "PropertyManager");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyManager>("ProMasterReportingDataModel1.FK_Property_PropertyManager", "PropertyManager", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyOwner", "PropertyOwner")]
        public PropertyOwner PropertyOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterReportingDataModel1.FK_Property_PropertyOwner", "PropertyOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterReportingDataModel1.FK_Property_PropertyOwner", "PropertyOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyOwner> PropertyOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterReportingDataModel1.FK_Property_PropertyOwner", "PropertyOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyOwner>("ProMasterReportingDataModel1.FK_Property_PropertyOwner", "PropertyOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyType", "PropertyType")]
        public PropertyType PropertyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyType>("ProMasterReportingDataModel1.FK_Property_PropertyType", "PropertyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyType>("ProMasterReportingDataModel1.FK_Property_PropertyType", "PropertyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyType> PropertyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyType>("ProMasterReportingDataModel1.FK_Property_PropertyType", "PropertyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyType>("ProMasterReportingDataModel1.FK_Property_PropertyType", "PropertyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_RentalStatus", "RentalStatu")]
        public RentalStatu RentalStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalStatu>("ProMasterReportingDataModel1.FK_Property_RentalStatus", "RentalStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalStatu>("ProMasterReportingDataModel1.FK_Property_RentalStatus", "RentalStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentalStatu> RentalStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalStatu>("ProMasterReportingDataModel1.FK_Property_RentalStatus", "RentalStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentalStatu>("ProMasterReportingDataModel1.FK_Property_RentalStatus", "RentalStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_Property", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_Property", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_Property", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="PropertyAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyAddress object.
        /// </summary>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertySuiteNumber">Initial value of the PropertySuiteNumber property.</param>
        /// <param name="propertyStreet">Initial value of the PropertyStreet property.</param>
        /// <param name="propertyCity">Initial value of the PropertyCity property.</param>
        /// <param name="propertyStateProvince">Initial value of the PropertyStateProvince property.</param>
        /// <param name="propertyCountry">Initial value of the PropertyCountry property.</param>
        /// <param name="propertyZipPostCode">Initial value of the PropertyZipPostCode property.</param>
        public static PropertyAddress CreatePropertyAddress(global::System.Int32 propertyAddressId, global::System.String propertySuiteNumber, global::System.String propertyStreet, global::System.String propertyCity, global::System.String propertyStateProvince, global::System.String propertyCountry, global::System.String propertyZipPostCode)
        {
            PropertyAddress propertyAddress = new PropertyAddress();
            propertyAddress.PropertyAddressId = propertyAddressId;
            propertyAddress.PropertySuiteNumber = propertySuiteNumber;
            propertyAddress.PropertyStreet = propertyStreet;
            propertyAddress.PropertyCity = propertyCity;
            propertyAddress.PropertyStateProvince = propertyStateProvince;
            propertyAddress.PropertyCountry = propertyCountry;
            propertyAddress.PropertyZipPostCode = propertyZipPostCode;
            return propertyAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                if (_PropertyAddressId != value)
                {
                    OnPropertyAddressIdChanging(value);
                    ReportPropertyChanging("PropertyAddressId");
                    _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                    ReportPropertyChanged("PropertyAddressId");
                    OnPropertyAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertySuiteNumber
        {
            get
            {
                return _PropertySuiteNumber;
            }
            set
            {
                OnPropertySuiteNumberChanging(value);
                ReportPropertyChanging("PropertySuiteNumber");
                _PropertySuiteNumber = StructuralObject.SetValidValue(value, false, "PropertySuiteNumber");
                ReportPropertyChanged("PropertySuiteNumber");
                OnPropertySuiteNumberChanged();
            }
        }
        private global::System.String _PropertySuiteNumber;
        partial void OnPropertySuiteNumberChanging(global::System.String value);
        partial void OnPropertySuiteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyNumber
        {
            get
            {
                return _PropertyNumber;
            }
            set
            {
                OnPropertyNumberChanging(value);
                ReportPropertyChanging("PropertyNumber");
                _PropertyNumber = StructuralObject.SetValidValue(value, true, "PropertyNumber");
                ReportPropertyChanged("PropertyNumber");
                OnPropertyNumberChanged();
            }
        }
        private global::System.String _PropertyNumber;
        partial void OnPropertyNumberChanging(global::System.String value);
        partial void OnPropertyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStreet
        {
            get
            {
                return _PropertyStreet;
            }
            set
            {
                OnPropertyStreetChanging(value);
                ReportPropertyChanging("PropertyStreet");
                _PropertyStreet = StructuralObject.SetValidValue(value, false, "PropertyStreet");
                ReportPropertyChanged("PropertyStreet");
                OnPropertyStreetChanged();
            }
        }
        private global::System.String _PropertyStreet;
        partial void OnPropertyStreetChanging(global::System.String value);
        partial void OnPropertyStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCity
        {
            get
            {
                return _PropertyCity;
            }
            set
            {
                OnPropertyCityChanging(value);
                ReportPropertyChanging("PropertyCity");
                _PropertyCity = StructuralObject.SetValidValue(value, false, "PropertyCity");
                ReportPropertyChanged("PropertyCity");
                OnPropertyCityChanged();
            }
        }
        private global::System.String _PropertyCity;
        partial void OnPropertyCityChanging(global::System.String value);
        partial void OnPropertyCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStateProvince
        {
            get
            {
                return _PropertyStateProvince;
            }
            set
            {
                OnPropertyStateProvinceChanging(value);
                ReportPropertyChanging("PropertyStateProvince");
                _PropertyStateProvince = StructuralObject.SetValidValue(value, false, "PropertyStateProvince");
                ReportPropertyChanged("PropertyStateProvince");
                OnPropertyStateProvinceChanged();
            }
        }
        private global::System.String _PropertyStateProvince;
        partial void OnPropertyStateProvinceChanging(global::System.String value);
        partial void OnPropertyStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCountry
        {
            get
            {
                return _PropertyCountry;
            }
            set
            {
                OnPropertyCountryChanging(value);
                ReportPropertyChanging("PropertyCountry");
                _PropertyCountry = StructuralObject.SetValidValue(value, false, "PropertyCountry");
                ReportPropertyChanged("PropertyCountry");
                OnPropertyCountryChanged();
            }
        }
        private global::System.String _PropertyCountry;
        partial void OnPropertyCountryChanging(global::System.String value);
        partial void OnPropertyCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyZipPostCode
        {
            get
            {
                return _PropertyZipPostCode;
            }
            set
            {
                OnPropertyZipPostCodeChanging(value);
                ReportPropertyChanging("PropertyZipPostCode");
                _PropertyZipPostCode = StructuralObject.SetValidValue(value, false, "PropertyZipPostCode");
                ReportPropertyChanged("PropertyZipPostCode");
                OnPropertyZipPostCodeChanged();
            }
        }
        private global::System.String _PropertyZipPostCode;
        partial void OnPropertyZipPostCodeChanging(global::System.String value);
        partial void OnPropertyZipPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLongitudeValue
        {
            get
            {
                return _GPSLongitudeValue;
            }
            set
            {
                OnGPSLongitudeValueChanging(value);
                ReportPropertyChanging("GPSLongitudeValue");
                _GPSLongitudeValue = StructuralObject.SetValidValue(value, true, "GPSLongitudeValue");
                ReportPropertyChanged("GPSLongitudeValue");
                OnGPSLongitudeValueChanged();
            }
        }
        private global::System.String _GPSLongitudeValue;
        partial void OnGPSLongitudeValueChanging(global::System.String value);
        partial void OnGPSLongitudeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLatitudeValue
        {
            get
            {
                return _GPSLatitudeValue;
            }
            set
            {
                OnGPSLatitudeValueChanging(value);
                ReportPropertyChanging("GPSLatitudeValue");
                _GPSLatitudeValue = StructuralObject.SetValidValue(value, true, "GPSLatitudeValue");
                ReportPropertyChanged("GPSLatitudeValue");
                OnGPSLatitudeValueChanged();
            }
        }
        private global::System.String _GPSLatitudeValue;
        partial void OnGPSLatitudeValueChanging(global::System.String value);
        partial void OnGPSLatitudeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyAddress", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyAddress", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyAddress", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="PropertyManager")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyManager : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyManager object.
        /// </summary>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static PropertyManager CreatePropertyManager(global::System.Int32 propertyManagerId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.String userAvartaImgUrl, global::System.Boolean isActive, global::System.Int32 roleId, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            PropertyManager propertyManager = new PropertyManager();
            propertyManager.PropertyManagerId = propertyManagerId;
            propertyManager.UserName = userName;
            propertyManager.FirstName = firstName;
            propertyManager.LastName = lastName;
            propertyManager.ContactEmail = contactEmail;
            propertyManager.ContactTelephone1 = contactTelephone1;
            propertyManager.UserAvartaImgUrl = userAvartaImgUrl;
            propertyManager.IsActive = isActive;
            propertyManager.RoleId = roleId;
            propertyManager.CreationDate = creationDate;
            propertyManager.UpdateDate = updateDate;
            return propertyManager;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                if (_PropertyManagerId != value)
                {
                    OnPropertyManagerIdChanging(value);
                    ReportPropertyChanging("PropertyManagerId");
                    _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                    ReportPropertyChanged("PropertyManagerId");
                    OnPropertyManagerIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyManager", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyManager", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyManager", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="PropertyOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyOwner object.
        /// </summary>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static PropertyOwner CreatePropertyOwner(global::System.Int32 propertyOwnerId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Boolean isActive, global::System.Int32 roleId, global::System.String addedBy, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            PropertyOwner propertyOwner = new PropertyOwner();
            propertyOwner.PropertyOwnerId = propertyOwnerId;
            propertyOwner.UserName = userName;
            propertyOwner.FirstName = firstName;
            propertyOwner.LastName = lastName;
            propertyOwner.ContactEmail = contactEmail;
            propertyOwner.ContactTelephone1 = contactTelephone1;
            propertyOwner.OnlineAccessEnbaled = onlineAccessEnbaled;
            propertyOwner.UserAvartaImgUrl = userAvartaImgUrl;
            propertyOwner.IsActive = isActive;
            propertyOwner.RoleId = roleId;
            propertyOwner.AddedBy = addedBy;
            propertyOwner.CreationDate = creationDate;
            propertyOwner.UpdateDate = updateDate;
            return propertyOwner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                if (_PropertyOwnerId != value)
                {
                    OnPropertyOwnerIdChanging(value);
                    ReportPropertyChanging("PropertyOwnerId");
                    _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                    ReportPropertyChanged("PropertyOwnerId");
                    OnPropertyOwnerIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false, "AddedBy");
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AddProperty
        {
            get
            {
                return _AddProperty;
            }
            set
            {
                OnAddPropertyChanging(value);
                ReportPropertyChanging("AddProperty");
                _AddProperty = StructuralObject.SetValidValue(value, "AddProperty");
                ReportPropertyChanged("AddProperty");
                OnAddPropertyChanged();
            }
        }
        private Nullable<global::System.Boolean> _AddProperty;
        partial void OnAddPropertyChanging(Nullable<global::System.Boolean> value);
        partial void OnAddPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyOwner", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyOwner", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyOwner", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="PropertyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyType object.
        /// </summary>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyType1">Initial value of the PropertyType1 property.</param>
        public static PropertyType CreatePropertyType(global::System.Int32 propertyTypeId, global::System.String propertyType1)
        {
            PropertyType propertyType = new PropertyType();
            propertyType.PropertyTypeId = propertyTypeId;
            propertyType.PropertyType1 = propertyType1;
            return propertyType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                if (_PropertyTypeId != value)
                {
                    OnPropertyTypeIdChanging(value);
                    ReportPropertyChanging("PropertyTypeId");
                    _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                    ReportPropertyChanged("PropertyTypeId");
                    OnPropertyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyType1
        {
            get
            {
                return _PropertyType1;
            }
            set
            {
                OnPropertyType1Changing(value);
                ReportPropertyChanging("PropertyType1");
                _PropertyType1 = StructuralObject.SetValidValue(value, false, "PropertyType1");
                ReportPropertyChanged("PropertyType1");
                OnPropertyType1Changed();
            }
        }
        private global::System.String _PropertyType1;
        partial void OnPropertyType1Changing(global::System.String value);
        partial void OnPropertyType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_PropertyType", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyType", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_PropertyType", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="RentalStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentalStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentalStatu object.
        /// </summary>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static RentalStatu CreateRentalStatu(global::System.Int32 rentalStatusId, global::System.String status)
        {
            RentalStatu rentalStatu = new RentalStatu();
            rentalStatu.RentalStatusId = rentalStatusId;
            rentalStatu.Status = status;
            return rentalStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                if (_RentalStatusId != value)
                {
                    OnRentalStatusIdChanging(value);
                    ReportPropertyChanging("RentalStatusId");
                    _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                    ReportPropertyChanged("RentalStatusId");
                    OnRentalStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_Property_RentalStatus", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_RentalStatus", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterReportingDataModel1.FK_Property_RentalStatus", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="RentPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentPayment object.
        /// </summary>
        /// <param name="rentPaymentId">Initial value of the RentPaymentId property.</param>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="rentIsPaidOntime">Initial value of the RentIsPaidOntime property.</param>
        /// <param name="rentPaymentDate">Initial value of the RentPaymentDate property.</param>
        /// <param name="rentPaymentMonth">Initial value of the RentPaymentMonth property.</param>
        /// <param name="rentPaymentYear">Initial value of the RentPaymentYear property.</param>
        /// <param name="rentPaidAmount">Initial value of the RentPaidAmount property.</param>
        /// <param name="numberOfLatePayment">Initial value of the NumberOfLatePayment property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="rentPaymentMethodId">Initial value of the RentPaymentMethodId property.</param>
        /// <param name="isCollectedInPerson">Initial value of the IsCollectedInPerson property.</param>
        /// <param name="isDepositForOwner">Initial value of the IsDepositForOwner property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static RentPayment CreateRentPayment(global::System.Int32 rentPaymentId, global::System.Int32 tenantId, global::System.Boolean rentIsPaidOntime, global::System.DateTime rentPaymentDate, global::System.String rentPaymentMonth, global::System.String rentPaymentYear, global::System.Decimal rentPaidAmount, global::System.Int32 numberOfLatePayment, global::System.Decimal balance, global::System.Int32 rentPaymentMethodId, global::System.Boolean isCollectedInPerson, global::System.Boolean isDepositForOwner, global::System.DateTime creationDate)
        {
            RentPayment rentPayment = new RentPayment();
            rentPayment.RentPaymentId = rentPaymentId;
            rentPayment.TenantId = tenantId;
            rentPayment.RentIsPaidOntime = rentIsPaidOntime;
            rentPayment.RentPaymentDate = rentPaymentDate;
            rentPayment.RentPaymentMonth = rentPaymentMonth;
            rentPayment.RentPaymentYear = rentPaymentYear;
            rentPayment.RentPaidAmount = rentPaidAmount;
            rentPayment.NumberOfLatePayment = numberOfLatePayment;
            rentPayment.Balance = balance;
            rentPayment.RentPaymentMethodId = rentPaymentMethodId;
            rentPayment.IsCollectedInPerson = isCollectedInPerson;
            rentPayment.IsDepositForOwner = isDepositForOwner;
            rentPayment.CreationDate = creationDate;
            return rentPayment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentId
        {
            get
            {
                return _RentPaymentId;
            }
            set
            {
                if (_RentPaymentId != value)
                {
                    OnRentPaymentIdChanging(value);
                    ReportPropertyChanging("RentPaymentId");
                    _RentPaymentId = StructuralObject.SetValidValue(value, "RentPaymentId");
                    ReportPropertyChanged("RentPaymentId");
                    OnRentPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _RentPaymentId;
        partial void OnRentPaymentIdChanging(global::System.Int32 value);
        partial void OnRentPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                OnTenantIdChanging(value);
                ReportPropertyChanging("TenantId");
                _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                ReportPropertyChanged("TenantId");
                OnTenantIdChanged();
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RentIsPaidOntime
        {
            get
            {
                return _RentIsPaidOntime;
            }
            set
            {
                OnRentIsPaidOntimeChanging(value);
                ReportPropertyChanging("RentIsPaidOntime");
                _RentIsPaidOntime = StructuralObject.SetValidValue(value, "RentIsPaidOntime");
                ReportPropertyChanged("RentIsPaidOntime");
                OnRentIsPaidOntimeChanged();
            }
        }
        private global::System.Boolean _RentIsPaidOntime;
        partial void OnRentIsPaidOntimeChanging(global::System.Boolean value);
        partial void OnRentIsPaidOntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RentPaymentDate
        {
            get
            {
                return _RentPaymentDate;
            }
            set
            {
                OnRentPaymentDateChanging(value);
                ReportPropertyChanging("RentPaymentDate");
                _RentPaymentDate = StructuralObject.SetValidValue(value, "RentPaymentDate");
                ReportPropertyChanged("RentPaymentDate");
                OnRentPaymentDateChanged();
            }
        }
        private global::System.DateTime _RentPaymentDate;
        partial void OnRentPaymentDateChanging(global::System.DateTime value);
        partial void OnRentPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentMonth
        {
            get
            {
                return _RentPaymentMonth;
            }
            set
            {
                OnRentPaymentMonthChanging(value);
                ReportPropertyChanging("RentPaymentMonth");
                _RentPaymentMonth = StructuralObject.SetValidValue(value, false, "RentPaymentMonth");
                ReportPropertyChanged("RentPaymentMonth");
                OnRentPaymentMonthChanged();
            }
        }
        private global::System.String _RentPaymentMonth;
        partial void OnRentPaymentMonthChanging(global::System.String value);
        partial void OnRentPaymentMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentYear
        {
            get
            {
                return _RentPaymentYear;
            }
            set
            {
                OnRentPaymentYearChanging(value);
                ReportPropertyChanging("RentPaymentYear");
                _RentPaymentYear = StructuralObject.SetValidValue(value, false, "RentPaymentYear");
                ReportPropertyChanged("RentPaymentYear");
                OnRentPaymentYearChanged();
            }
        }
        private global::System.String _RentPaymentYear;
        partial void OnRentPaymentYearChanging(global::System.String value);
        partial void OnRentPaymentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentPaidAmount
        {
            get
            {
                return _RentPaidAmount;
            }
            set
            {
                OnRentPaidAmountChanging(value);
                ReportPropertyChanging("RentPaidAmount");
                _RentPaidAmount = StructuralObject.SetValidValue(value, "RentPaidAmount");
                ReportPropertyChanged("RentPaidAmount");
                OnRentPaidAmountChanged();
            }
        }
        private global::System.Decimal _RentPaidAmount;
        partial void OnRentPaidAmountChanging(global::System.Decimal value);
        partial void OnRentPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfLatePayment
        {
            get
            {
                return _NumberOfLatePayment;
            }
            set
            {
                OnNumberOfLatePaymentChanging(value);
                ReportPropertyChanging("NumberOfLatePayment");
                _NumberOfLatePayment = StructuralObject.SetValidValue(value, "NumberOfLatePayment");
                ReportPropertyChanged("NumberOfLatePayment");
                OnNumberOfLatePaymentChanged();
            }
        }
        private global::System.Int32 _NumberOfLatePayment;
        partial void OnNumberOfLatePaymentChanging(global::System.Int32 value);
        partial void OnNumberOfLatePaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value, "Balance");
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentMethodId
        {
            get
            {
                return _RentPaymentMethodId;
            }
            set
            {
                OnRentPaymentMethodIdChanging(value);
                ReportPropertyChanging("RentPaymentMethodId");
                _RentPaymentMethodId = StructuralObject.SetValidValue(value, "RentPaymentMethodId");
                ReportPropertyChanged("RentPaymentMethodId");
                OnRentPaymentMethodIdChanged();
            }
        }
        private global::System.Int32 _RentPaymentMethodId;
        partial void OnRentPaymentMethodIdChanging(global::System.Int32 value);
        partial void OnRentPaymentMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCollectedInPerson
        {
            get
            {
                return _IsCollectedInPerson;
            }
            set
            {
                OnIsCollectedInPersonChanging(value);
                ReportPropertyChanging("IsCollectedInPerson");
                _IsCollectedInPerson = StructuralObject.SetValidValue(value, "IsCollectedInPerson");
                ReportPropertyChanged("IsCollectedInPerson");
                OnIsCollectedInPersonChanged();
            }
        }
        private global::System.Boolean _IsCollectedInPerson;
        partial void OnIsCollectedInPersonChanging(global::System.Boolean value);
        partial void OnIsCollectedInPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDepositForOwner
        {
            get
            {
                return _IsDepositForOwner;
            }
            set
            {
                OnIsDepositForOwnerChanging(value);
                ReportPropertyChanging("IsDepositForOwner");
                _IsDepositForOwner = StructuralObject.SetValidValue(value, "IsDepositForOwner");
                ReportPropertyChanged("IsDepositForOwner");
                OnIsDepositForOwnerChanged();
            }
        }
        private global::System.Boolean _IsDepositForOwner;
        partial void OnIsDepositForOwnerChanging(global::System.Boolean value);
        partial void OnIsDepositForOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_RentPayment_Tenant", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterReportingDataModel1.FK_RentPayment_Tenant", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterReportingDataModel1.FK_RentPayment_Tenant", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterReportingDataModel1.FK_RentPayment_Tenant", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProMasterReportingDataModel1.FK_RentPayment_Tenant", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="managedBy">Initial value of the ManagedBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Tenant CreateTenant(global::System.Int32 tenantId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Int32 leaseId, global::System.Int32 roleId, global::System.Boolean isActive, global::System.String managedBy, global::System.DateTime createDate, global::System.DateTime updateDate)
        {
            Tenant tenant = new Tenant();
            tenant.TenantId = tenantId;
            tenant.UserName = userName;
            tenant.FirstName = firstName;
            tenant.LastName = lastName;
            tenant.ContactEmail = contactEmail;
            tenant.ContactTelephone1 = contactTelephone1;
            tenant.OnlineAccessEnbaled = onlineAccessEnbaled;
            tenant.UserAvartaImgUrl = userAvartaImgUrl;
            tenant.LeaseId = leaseId;
            tenant.RoleId = roleId;
            tenant.IsActive = isActive;
            tenant.ManagedBy = managedBy;
            tenant.CreateDate = createDate;
            tenant.UpdateDate = updateDate;
            return tenant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                if (_TenantId != value)
                {
                    OnTenantIdChanging(value);
                    ReportPropertyChanging("TenantId");
                    _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                    ReportPropertyChanged("TenantId");
                    OnTenantIdChanged();
                }
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagedBy
        {
            get
            {
                return _ManagedBy;
            }
            set
            {
                OnManagedByChanging(value);
                ReportPropertyChanging("ManagedBy");
                _ManagedBy = StructuralObject.SetValidValue(value, false, "ManagedBy");
                ReportPropertyChanged("ManagedBy");
                OnManagedByChanged();
            }
        }
        private global::System.String _ManagedBy;
        partial void OnManagedByChanging(global::System.String value);
        partial void OnManagedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_RentPayment_Tenant", "RentPayment")]
        public EntityCollection<RentPayment> RentPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentPayment>("ProMasterReportingDataModel1.FK_RentPayment_Tenant", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentPayment>("ProMasterReportingDataModel1.FK_RentPayment_Tenant", "RentPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="WorkOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrder object.
        /// </summary>
        /// <param name="workOrderId">Initial value of the WorkOrderId property.</param>
        /// <param name="workOrderName">Initial value of the WorkOrderName property.</param>
        /// <param name="workOrderDetails">Initial value of the WorkOrderDetails property.</param>
        /// <param name="workOrderCategoryId">Initial value of the WorkOrderCategoryId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="workOrderTypeId">Initial value of the WorkOrderTypeId property.</param>
        /// <param name="invoiceAmount">Initial value of the InvoiceAmount property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isAuthorized">Initial value of the IsAuthorized property.</param>
        /// <param name="workOrderStatusId">Initial value of the WorkOrderStatusId property.</param>
        /// <param name="isPaid">Initial value of the IsPaid property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="recordCreationDate">Initial value of the RecordCreationDate property.</param>
        public static WorkOrder CreateWorkOrder(global::System.Int32 workOrderId, global::System.String workOrderName, global::System.String workOrderDetails, global::System.Int32 workOrderCategoryId, global::System.Int32 propertyId, global::System.Int32 vendorId, global::System.Int32 workOrderTypeId, global::System.Decimal invoiceAmount, global::System.DateTime invoiceDate, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isAuthorized, global::System.Int32 workOrderStatusId, global::System.Boolean isPaid, global::System.DateTime paymentDate, global::System.DateTime recordCreationDate)
        {
            WorkOrder workOrder = new WorkOrder();
            workOrder.WorkOrderId = workOrderId;
            workOrder.WorkOrderName = workOrderName;
            workOrder.WorkOrderDetails = workOrderDetails;
            workOrder.WorkOrderCategoryId = workOrderCategoryId;
            workOrder.PropertyId = propertyId;
            workOrder.VendorId = vendorId;
            workOrder.WorkOrderTypeId = workOrderTypeId;
            workOrder.InvoiceAmount = invoiceAmount;
            workOrder.InvoiceDate = invoiceDate;
            workOrder.StartDate = startDate;
            workOrder.EndDate = endDate;
            workOrder.IsAuthorized = isAuthorized;
            workOrder.WorkOrderStatusId = workOrderStatusId;
            workOrder.IsPaid = isPaid;
            workOrder.PaymentDate = paymentDate;
            workOrder.RecordCreationDate = recordCreationDate;
            return workOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderId
        {
            get
            {
                return _WorkOrderId;
            }
            set
            {
                if (_WorkOrderId != value)
                {
                    OnWorkOrderIdChanging(value);
                    ReportPropertyChanging("WorkOrderId");
                    _WorkOrderId = StructuralObject.SetValidValue(value, "WorkOrderId");
                    ReportPropertyChanged("WorkOrderId");
                    OnWorkOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderId;
        partial void OnWorkOrderIdChanging(global::System.Int32 value);
        partial void OnWorkOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderName
        {
            get
            {
                return _WorkOrderName;
            }
            set
            {
                OnWorkOrderNameChanging(value);
                ReportPropertyChanging("WorkOrderName");
                _WorkOrderName = StructuralObject.SetValidValue(value, false, "WorkOrderName");
                ReportPropertyChanged("WorkOrderName");
                OnWorkOrderNameChanged();
            }
        }
        private global::System.String _WorkOrderName;
        partial void OnWorkOrderNameChanging(global::System.String value);
        partial void OnWorkOrderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderDetails
        {
            get
            {
                return _WorkOrderDetails;
            }
            set
            {
                OnWorkOrderDetailsChanging(value);
                ReportPropertyChanging("WorkOrderDetails");
                _WorkOrderDetails = StructuralObject.SetValidValue(value, false, "WorkOrderDetails");
                ReportPropertyChanged("WorkOrderDetails");
                OnWorkOrderDetailsChanged();
            }
        }
        private global::System.String _WorkOrderDetails;
        partial void OnWorkOrderDetailsChanging(global::System.String value);
        partial void OnWorkOrderDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderCategoryId
        {
            get
            {
                return _WorkOrderCategoryId;
            }
            set
            {
                OnWorkOrderCategoryIdChanging(value);
                ReportPropertyChanging("WorkOrderCategoryId");
                _WorkOrderCategoryId = StructuralObject.SetValidValue(value, "WorkOrderCategoryId");
                ReportPropertyChanged("WorkOrderCategoryId");
                OnWorkOrderCategoryIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderCategoryId;
        partial void OnWorkOrderCategoryIdChanging(global::System.Int32 value);
        partial void OnWorkOrderCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value, "VendorId");
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderTypeId
        {
            get
            {
                return _WorkOrderTypeId;
            }
            set
            {
                OnWorkOrderTypeIdChanging(value);
                ReportPropertyChanging("WorkOrderTypeId");
                _WorkOrderTypeId = StructuralObject.SetValidValue(value, "WorkOrderTypeId");
                ReportPropertyChanged("WorkOrderTypeId");
                OnWorkOrderTypeIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderTypeId;
        partial void OnWorkOrderTypeIdChanging(global::System.Int32 value);
        partial void OnWorkOrderTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InvoiceAmount
        {
            get
            {
                return _InvoiceAmount;
            }
            set
            {
                OnInvoiceAmountChanging(value);
                ReportPropertyChanging("InvoiceAmount");
                _InvoiceAmount = StructuralObject.SetValidValue(value, "InvoiceAmount");
                ReportPropertyChanged("InvoiceAmount");
                OnInvoiceAmountChanged();
            }
        }
        private global::System.Decimal _InvoiceAmount;
        partial void OnInvoiceAmountChanging(global::System.Decimal value);
        partial void OnInvoiceAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceDocUrl
        {
            get
            {
                return _InvoiceDocUrl;
            }
            set
            {
                OnInvoiceDocUrlChanging(value);
                ReportPropertyChanging("InvoiceDocUrl");
                _InvoiceDocUrl = StructuralObject.SetValidValue(value, true, "InvoiceDocUrl");
                ReportPropertyChanged("InvoiceDocUrl");
                OnInvoiceDocUrlChanged();
            }
        }
        private global::System.String _InvoiceDocUrl;
        partial void OnInvoiceDocUrlChanging(global::System.String value);
        partial void OnInvoiceDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAuthorized
        {
            get
            {
                return _IsAuthorized;
            }
            set
            {
                OnIsAuthorizedChanging(value);
                ReportPropertyChanging("IsAuthorized");
                _IsAuthorized = StructuralObject.SetValidValue(value, "IsAuthorized");
                ReportPropertyChanged("IsAuthorized");
                OnIsAuthorizedChanged();
            }
        }
        private global::System.Boolean _IsAuthorized;
        partial void OnIsAuthorizedChanging(global::System.Boolean value);
        partial void OnIsAuthorizedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderStatusId
        {
            get
            {
                return _WorkOrderStatusId;
            }
            set
            {
                OnWorkOrderStatusIdChanging(value);
                ReportPropertyChanging("WorkOrderStatusId");
                _WorkOrderStatusId = StructuralObject.SetValidValue(value, "WorkOrderStatusId");
                ReportPropertyChanged("WorkOrderStatusId");
                OnWorkOrderStatusIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderStatusId;
        partial void OnWorkOrderStatusIdChanging(global::System.Int32 value);
        partial void OnWorkOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value, "IsPaid");
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private global::System.Boolean _IsPaid;
        partial void OnIsPaidChanging(global::System.Boolean value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, "PaymentDate");
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, true, "PaymentMethod");
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value, "PaymentAmount");
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordCreationDate
        {
            get
            {
                return _RecordCreationDate;
            }
            set
            {
                OnRecordCreationDateChanging(value);
                ReportPropertyChanging("RecordCreationDate");
                _RecordCreationDate = StructuralObject.SetValidValue(value, "RecordCreationDate");
                ReportPropertyChanged("RecordCreationDate");
                OnRecordCreationDateChanged();
            }
        }
        private global::System.DateTime _RecordCreationDate;
        partial void OnRecordCreationDateChanging(global::System.DateTime value);
        partial void OnRecordCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecordUpdateDate
        {
            get
            {
                return _RecordUpdateDate;
            }
            set
            {
                OnRecordUpdateDateChanging(value);
                ReportPropertyChanging("RecordUpdateDate");
                _RecordUpdateDate = StructuralObject.SetValidValue(value, "RecordUpdateDate");
                ReportPropertyChanged("RecordUpdateDate");
                OnRecordUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecordUpdateDate;
        partial void OnRecordUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecordUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory")]
        public WorkOrderCategory WorkOrderCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderCategory> WorkOrderCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderCategory>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu")]
        public WorkOrderStatu WorkOrderStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderStatu> WorkOrderStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderStatu>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderType", "WorkOrderType")]
        public WorkOrderType WorkOrderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderType>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderType", "WorkOrderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderType>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderType", "WorkOrderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderType> WorkOrderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderType>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderType", "WorkOrderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderType>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderType", "WorkOrderType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_WorkOrder_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_WorkOrder_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterReportingDataModel1.FK_WorkOrder_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterReportingDataModel1.FK_WorkOrder_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="WorkOrderCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderCategory object.
        /// </summary>
        /// <param name="workOrderCategoryId">Initial value of the WorkOrderCategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static WorkOrderCategory CreateWorkOrderCategory(global::System.Int32 workOrderCategoryId, global::System.String categoryName)
        {
            WorkOrderCategory workOrderCategory = new WorkOrderCategory();
            workOrderCategory.WorkOrderCategoryId = workOrderCategoryId;
            workOrderCategory.CategoryName = categoryName;
            return workOrderCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderCategoryId
        {
            get
            {
                return _WorkOrderCategoryId;
            }
            set
            {
                if (_WorkOrderCategoryId != value)
                {
                    OnWorkOrderCategoryIdChanging(value);
                    ReportPropertyChanging("WorkOrderCategoryId");
                    _WorkOrderCategoryId = StructuralObject.SetValidValue(value, "WorkOrderCategoryId");
                    ReportPropertyChanged("WorkOrderCategoryId");
                    OnWorkOrderCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderCategoryId;
        partial void OnWorkOrderCategoryIdChanging(global::System.Int32 value);
        partial void OnWorkOrderCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderCategory", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderCategory", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderCategory", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="WorkOrderStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderStatu object.
        /// </summary>
        /// <param name="workOrderStatusId">Initial value of the WorkOrderStatusId property.</param>
        /// <param name="workOrderStatus">Initial value of the WorkOrderStatus property.</param>
        public static WorkOrderStatu CreateWorkOrderStatu(global::System.Int32 workOrderStatusId, global::System.String workOrderStatus)
        {
            WorkOrderStatu workOrderStatu = new WorkOrderStatu();
            workOrderStatu.WorkOrderStatusId = workOrderStatusId;
            workOrderStatu.WorkOrderStatus = workOrderStatus;
            return workOrderStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderStatusId
        {
            get
            {
                return _WorkOrderStatusId;
            }
            set
            {
                if (_WorkOrderStatusId != value)
                {
                    OnWorkOrderStatusIdChanging(value);
                    ReportPropertyChanging("WorkOrderStatusId");
                    _WorkOrderStatusId = StructuralObject.SetValidValue(value, "WorkOrderStatusId");
                    ReportPropertyChanged("WorkOrderStatusId");
                    OnWorkOrderStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderStatusId;
        partial void OnWorkOrderStatusIdChanging(global::System.Int32 value);
        partial void OnWorkOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderStatus
        {
            get
            {
                return _WorkOrderStatus;
            }
            set
            {
                OnWorkOrderStatusChanging(value);
                ReportPropertyChanging("WorkOrderStatus");
                _WorkOrderStatus = StructuralObject.SetValidValue(value, false, "WorkOrderStatus");
                ReportPropertyChanged("WorkOrderStatus");
                OnWorkOrderStatusChanged();
            }
        }
        private global::System.String _WorkOrderStatus;
        partial void OnWorkOrderStatusChanging(global::System.String value);
        partial void OnWorkOrderStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderStatus", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderStatus", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderStatus", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterReportingDataModel1", Name="WorkOrderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderType object.
        /// </summary>
        /// <param name="workOrderTypeId">Initial value of the WorkOrderTypeId property.</param>
        /// <param name="workOrderTypeName">Initial value of the WorkOrderTypeName property.</param>
        public static WorkOrderType CreateWorkOrderType(global::System.Int32 workOrderTypeId, global::System.String workOrderTypeName)
        {
            WorkOrderType workOrderType = new WorkOrderType();
            workOrderType.WorkOrderTypeId = workOrderTypeId;
            workOrderType.WorkOrderTypeName = workOrderTypeName;
            return workOrderType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderTypeId
        {
            get
            {
                return _WorkOrderTypeId;
            }
            set
            {
                if (_WorkOrderTypeId != value)
                {
                    OnWorkOrderTypeIdChanging(value);
                    ReportPropertyChanging("WorkOrderTypeId");
                    _WorkOrderTypeId = StructuralObject.SetValidValue(value, "WorkOrderTypeId");
                    ReportPropertyChanged("WorkOrderTypeId");
                    OnWorkOrderTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderTypeId;
        partial void OnWorkOrderTypeIdChanging(global::System.Int32 value);
        partial void OnWorkOrderTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderTypeName
        {
            get
            {
                return _WorkOrderTypeName;
            }
            set
            {
                OnWorkOrderTypeNameChanging(value);
                ReportPropertyChanging("WorkOrderTypeName");
                _WorkOrderTypeName = StructuralObject.SetValidValue(value, false, "WorkOrderTypeName");
                ReportPropertyChanged("WorkOrderTypeName");
                OnWorkOrderTypeNameChanged();
            }
        }
        private global::System.String _WorkOrderTypeName;
        partial void OnWorkOrderTypeNameChanging(global::System.String value);
        partial void OnWorkOrderTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterReportingDataModel1", "FK_WorkOrder_WorkOrderType", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderType", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterReportingDataModel1.FK_WorkOrder_WorkOrderType", "WorkOrder", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
