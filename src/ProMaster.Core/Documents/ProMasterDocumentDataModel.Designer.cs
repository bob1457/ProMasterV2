//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProMasterDocumentDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Documents.DocumentPrincipalType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Documents.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterDocumentDataModel", "FK_Document_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Documents.DocumentType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Documents.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterDocumentDataModel", "FK_Lease_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Documents.Property), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Documents.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterDocumentDataModel", "FK_ManagementContract_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Documents.Property), "ManagementContract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Documents.ManagementContract), true)]
[assembly: EdmRelationshipAttribute("ProMasterDocumentDataModel", "FK_Property_PropertyOwner", "PropertyOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Documents.PropertyOwner), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Documents.Property), true)]

#endregion

namespace ProMaster.Core.Documents
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProMasterDocumentDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProMasterDocumentDataEntities object using the connection string found in the 'ProMasterDocumentDataEntities' section of the application configuration file.
        /// </summary>
        public ProMasterDocumentDataEntities() : base("name=ProMasterDocumentDataEntities", "ProMasterDocumentDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterDocumentDataEntities object.
        /// </summary>
        public ProMasterDocumentDataEntities(string connectionString) : base(connectionString, "ProMasterDocumentDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterDocumentDataEntities object.
        /// </summary>
        public ProMasterDocumentDataEntities(EntityConnection connection) : base(connection, "ProMasterDocumentDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentPrincipalType> DocumentPrincipalTypes
        {
            get
            {
                if ((_DocumentPrincipalTypes == null))
                {
                    _DocumentPrincipalTypes = base.CreateObjectSet<DocumentPrincipalType>("DocumentPrincipalTypes");
                }
                return _DocumentPrincipalTypes;
            }
        }
        private ObjectSet<DocumentPrincipalType> _DocumentPrincipalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lease> Leases
        {
            get
            {
                if ((_Leases == null))
                {
                    _Leases = base.CreateObjectSet<Lease>("Leases");
                }
                return _Leases;
            }
        }
        private ObjectSet<Lease> _Leases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementContract> ManagementContracts
        {
            get
            {
                if ((_ManagementContracts == null))
                {
                    _ManagementContracts = base.CreateObjectSet<ManagementContract>("ManagementContracts");
                }
                return _ManagementContracts;
            }
        }
        private ObjectSet<ManagementContract> _ManagementContracts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyOwner> PropertyOwners
        {
            get
            {
                if ((_PropertyOwners == null))
                {
                    _PropertyOwners = base.CreateObjectSet<PropertyOwner>("PropertyOwners");
                }
                return _PropertyOwners;
            }
        }
        private ObjectSet<PropertyOwner> _PropertyOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> Tenants
        {
            get
            {
                if ((_Tenants == null))
                {
                    _Tenants = base.CreateObjectSet<Tenant>("Tenants");
                }
                return _Tenants;
            }
        }
        private ObjectSet<Tenant> _Tenants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentPrincipalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentPrincipalTypes(DocumentPrincipalType documentPrincipalType)
        {
            base.AddObject("DocumentPrincipalTypes", documentPrincipalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeases(Lease lease)
        {
            base.AddObject("Leases", lease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementContracts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementContracts(ManagementContract managementContract)
        {
            base.AddObject("ManagementContracts", managementContract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyOwners(PropertyOwner propertyOwner)
        {
            base.AddObject("PropertyOwners", propertyOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tenants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenants(Tenant tenant)
        {
            base.AddObject("Tenants", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="dcoumentDetails">Initial value of the DcoumentDetails property.</param>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalId">Initial value of the DocumentPrincipalId property.</param>
        /// <param name="documentUrl">Initial value of the DocumentUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.Int32 documentTypeId, global::System.String documentName, global::System.String dcoumentDetails, global::System.Int32 documentPrincipalTypeId, global::System.Int32 documentPrincipalId, global::System.String documentUrl, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.DocumentTypeId = documentTypeId;
            document.DocumentName = documentName;
            document.DcoumentDetails = dcoumentDetails;
            document.DocumentPrincipalTypeId = documentPrincipalTypeId;
            document.DocumentPrincipalId = documentPrincipalId;
            document.DocumentUrl = documentUrl;
            document.CreationDate = creationDate;
            document.UpdateDate = updateDate;
            document.IsActive = isActive;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value, "DocumentId");
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DcoumentDetails
        {
            get
            {
                return _DcoumentDetails;
            }
            set
            {
                OnDcoumentDetailsChanging(value);
                ReportPropertyChanging("DcoumentDetails");
                _DcoumentDetails = StructuralObject.SetValidValue(value, false, "DcoumentDetails");
                ReportPropertyChanged("DcoumentDetails");
                OnDcoumentDetailsChanged();
            }
        }
        private global::System.String _DcoumentDetails;
        partial void OnDcoumentDetailsChanging(global::System.String value);
        partial void OnDcoumentDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                OnDocumentPrincipalTypeIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalTypeId");
                _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                ReportPropertyChanged("DocumentPrincipalTypeId");
                OnDocumentPrincipalTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalId
        {
            get
            {
                return _DocumentPrincipalId;
            }
            set
            {
                OnDocumentPrincipalIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalId");
                _DocumentPrincipalId = StructuralObject.SetValidValue(value, "DocumentPrincipalId");
                ReportPropertyChanged("DocumentPrincipalId");
                OnDocumentPrincipalIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalId;
        partial void OnDocumentPrincipalIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentUrl
        {
            get
            {
                return _DocumentUrl;
            }
            set
            {
                OnDocumentUrlChanging(value);
                ReportPropertyChanging("DocumentUrl");
                _DocumentUrl = StructuralObject.SetValidValue(value, false, "DocumentUrl");
                ReportPropertyChanged("DocumentUrl");
                OnDocumentUrlChanged();
            }
        }
        private global::System.String _DocumentUrl;
        partial void OnDocumentUrlChanging(global::System.String value);
        partial void OnDocumentUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType")]
        public DocumentPrincipalType DocumentPrincipalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterDocumentDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterDocumentDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentPrincipalType> DocumentPrincipalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterDocumentDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentPrincipalType>("ProMasterDocumentDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Document_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterDocumentDataModel.FK_Document_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterDocumentDataModel.FK_Document_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterDocumentDataModel.FK_Document_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("ProMasterDocumentDataModel.FK_Document_DocumentType", "DocumentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="DocumentPrincipalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentPrincipalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentPrincipalType object.
        /// </summary>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalType1">Initial value of the DocumentPrincipalType1 property.</param>
        public static DocumentPrincipalType CreateDocumentPrincipalType(global::System.Int32 documentPrincipalTypeId, global::System.String documentPrincipalType1)
        {
            DocumentPrincipalType documentPrincipalType = new DocumentPrincipalType();
            documentPrincipalType.DocumentPrincipalTypeId = documentPrincipalTypeId;
            documentPrincipalType.DocumentPrincipalType1 = documentPrincipalType1;
            return documentPrincipalType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                if (_DocumentPrincipalTypeId != value)
                {
                    OnDocumentPrincipalTypeIdChanging(value);
                    ReportPropertyChanging("DocumentPrincipalTypeId");
                    _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                    ReportPropertyChanged("DocumentPrincipalTypeId");
                    OnDocumentPrincipalTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentPrincipalType1
        {
            get
            {
                return _DocumentPrincipalType1;
            }
            set
            {
                OnDocumentPrincipalType1Changing(value);
                ReportPropertyChanging("DocumentPrincipalType1");
                _DocumentPrincipalType1 = StructuralObject.SetValidValue(value, false, "DocumentPrincipalType1");
                ReportPropertyChanged("DocumentPrincipalType1");
                OnDocumentPrincipalType1Changed();
            }
        }
        private global::System.String _DocumentPrincipalType1;
        partial void OnDocumentPrincipalType1Changing(global::System.String value);
        partial void OnDocumentPrincipalType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Document_DocumentPrincipalType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterDocumentDataModel.FK_Document_DocumentPrincipalType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterDocumentDataModel.FK_Document_DocumentPrincipalType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentType1">Initial value of the DocumentType1 property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeId, global::System.String documentType1)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeId = documentTypeId;
            documentType.DocumentType1 = documentType1;
            return documentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                if (_DocumentTypeId != value)
                {
                    OnDocumentTypeIdChanging(value);
                    ReportPropertyChanging("DocumentTypeId");
                    _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                    ReportPropertyChanged("DocumentTypeId");
                    OnDocumentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType1
        {
            get
            {
                return _DocumentType1;
            }
            set
            {
                OnDocumentType1Changing(value);
                ReportPropertyChanging("DocumentType1");
                _DocumentType1 = StructuralObject.SetValidValue(value, false, "DocumentType1");
                ReportPropertyChanged("DocumentType1");
                OnDocumentType1Changed();
            }
        }
        private global::System.String _DocumentType1;
        partial void OnDocumentType1Changing(global::System.String value);
        partial void OnDocumentType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Document_DocumentType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterDocumentDataModel.FK_Document_DocumentType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterDocumentDataModel.FK_Document_DocumentType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="Lease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lease object.
        /// </summary>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="leaseTitle">Initial value of the LeaseTitle property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="leaseStartDate">Initial value of the LeaseStartDate property.</param>
        /// <param name="leaseEndDate">Initial value of the LeaseEndDate property.</param>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="rentFrequency">Initial value of the RentFrequency property.</param>
        /// <param name="rentAmount">Initial value of the RentAmount property.</param>
        /// <param name="rentDueOn">Initial value of the RentDueOn property.</param>
        /// <param name="damageDepositAmount">Initial value of the DamageDepositAmount property.</param>
        /// <param name="leaseSignDate">Initial value of the LeaseSignDate property.</param>
        /// <param name="addendum">Initial value of the Addendum property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Lease CreateLease(global::System.Int32 leaseId, global::System.String leaseTitle, global::System.Int32 propertyId, global::System.DateTime leaseStartDate, global::System.DateTime leaseEndDate, global::System.Int32 leaseTermId, global::System.String rentFrequency, global::System.Decimal rentAmount, global::System.String rentDueOn, global::System.Decimal damageDepositAmount, global::System.DateTime leaseSignDate, global::System.Boolean addendum, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Lease lease = new Lease();
            lease.LeaseId = leaseId;
            lease.LeaseTitle = leaseTitle;
            lease.PropertyId = propertyId;
            lease.LeaseStartDate = leaseStartDate;
            lease.LeaseEndDate = leaseEndDate;
            lease.LeaseTermId = leaseTermId;
            lease.RentFrequency = rentFrequency;
            lease.RentAmount = rentAmount;
            lease.RentDueOn = rentDueOn;
            lease.DamageDepositAmount = damageDepositAmount;
            lease.LeaseSignDate = leaseSignDate;
            lease.Addendum = addendum;
            lease.CreationDate = creationDate;
            lease.UpdateDate = updateDate;
            lease.IsActive = isActive;
            return lease;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                if (_LeaseId != value)
                {
                    OnLeaseIdChanging(value);
                    ReportPropertyChanging("LeaseId");
                    _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                    ReportPropertyChanged("LeaseId");
                    OnLeaseIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaseTitle
        {
            get
            {
                return _LeaseTitle;
            }
            set
            {
                OnLeaseTitleChanging(value);
                ReportPropertyChanging("LeaseTitle");
                _LeaseTitle = StructuralObject.SetValidValue(value, false, "LeaseTitle");
                ReportPropertyChanged("LeaseTitle");
                OnLeaseTitleChanged();
            }
        }
        private global::System.String _LeaseTitle;
        partial void OnLeaseTitleChanging(global::System.String value);
        partial void OnLeaseTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseDesc
        {
            get
            {
                return _LeaseDesc;
            }
            set
            {
                OnLeaseDescChanging(value);
                ReportPropertyChanging("LeaseDesc");
                _LeaseDesc = StructuralObject.SetValidValue(value, true, "LeaseDesc");
                ReportPropertyChanged("LeaseDesc");
                OnLeaseDescChanged();
            }
        }
        private global::System.String _LeaseDesc;
        partial void OnLeaseDescChanging(global::System.String value);
        partial void OnLeaseDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseStartDate
        {
            get
            {
                return _LeaseStartDate;
            }
            set
            {
                OnLeaseStartDateChanging(value);
                ReportPropertyChanging("LeaseStartDate");
                _LeaseStartDate = StructuralObject.SetValidValue(value, "LeaseStartDate");
                ReportPropertyChanged("LeaseStartDate");
                OnLeaseStartDateChanged();
            }
        }
        private global::System.DateTime _LeaseStartDate;
        partial void OnLeaseStartDateChanging(global::System.DateTime value);
        partial void OnLeaseStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseEndDate
        {
            get
            {
                return _LeaseEndDate;
            }
            set
            {
                OnLeaseEndDateChanging(value);
                ReportPropertyChanging("LeaseEndDate");
                _LeaseEndDate = StructuralObject.SetValidValue(value, "LeaseEndDate");
                ReportPropertyChanged("LeaseEndDate");
                OnLeaseEndDateChanged();
            }
        }
        private global::System.DateTime _LeaseEndDate;
        partial void OnLeaseEndDateChanging(global::System.DateTime value);
        partial void OnLeaseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                OnLeaseTermIdChanging(value);
                ReportPropertyChanging("LeaseTermId");
                _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                ReportPropertyChanged("LeaseTermId");
                OnLeaseTermIdChanged();
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentFrequency
        {
            get
            {
                return _RentFrequency;
            }
            set
            {
                OnRentFrequencyChanging(value);
                ReportPropertyChanging("RentFrequency");
                _RentFrequency = StructuralObject.SetValidValue(value, false, "RentFrequency");
                ReportPropertyChanged("RentFrequency");
                OnRentFrequencyChanged();
            }
        }
        private global::System.String _RentFrequency;
        partial void OnRentFrequencyChanging(global::System.String value);
        partial void OnRentFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentAmount
        {
            get
            {
                return _RentAmount;
            }
            set
            {
                OnRentAmountChanging(value);
                ReportPropertyChanging("RentAmount");
                _RentAmount = StructuralObject.SetValidValue(value, "RentAmount");
                ReportPropertyChanged("RentAmount");
                OnRentAmountChanged();
            }
        }
        private global::System.Decimal _RentAmount;
        partial void OnRentAmountChanging(global::System.Decimal value);
        partial void OnRentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentDueOn
        {
            get
            {
                return _RentDueOn;
            }
            set
            {
                OnRentDueOnChanging(value);
                ReportPropertyChanging("RentDueOn");
                _RentDueOn = StructuralObject.SetValidValue(value, false, "RentDueOn");
                ReportPropertyChanged("RentDueOn");
                OnRentDueOnChanged();
            }
        }
        private global::System.String _RentDueOn;
        partial void OnRentDueOnChanging(global::System.String value);
        partial void OnRentDueOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DamageDepositAmount
        {
            get
            {
                return _DamageDepositAmount;
            }
            set
            {
                OnDamageDepositAmountChanging(value);
                ReportPropertyChanging("DamageDepositAmount");
                _DamageDepositAmount = StructuralObject.SetValidValue(value, "DamageDepositAmount");
                ReportPropertyChanged("DamageDepositAmount");
                OnDamageDepositAmountChanged();
            }
        }
        private global::System.Decimal _DamageDepositAmount;
        partial void OnDamageDepositAmountChanging(global::System.Decimal value);
        partial void OnDamageDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PetDepositAmount
        {
            get
            {
                return _PetDepositAmount;
            }
            set
            {
                OnPetDepositAmountChanging(value);
                ReportPropertyChanging("PetDepositAmount");
                _PetDepositAmount = StructuralObject.SetValidValue(value, "PetDepositAmount");
                ReportPropertyChanged("PetDepositAmount");
                OnPetDepositAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PetDepositAmount;
        partial void OnPetDepositAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPetDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseSignDate
        {
            get
            {
                return _LeaseSignDate;
            }
            set
            {
                OnLeaseSignDateChanging(value);
                ReportPropertyChanging("LeaseSignDate");
                _LeaseSignDate = StructuralObject.SetValidValue(value, "LeaseSignDate");
                ReportPropertyChanged("LeaseSignDate");
                OnLeaseSignDateChanged();
            }
        }
        private global::System.DateTime _LeaseSignDate;
        partial void OnLeaseSignDateChanging(global::System.DateTime value);
        partial void OnLeaseSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseAgreementDocUrl
        {
            get
            {
                return _LeaseAgreementDocUrl;
            }
            set
            {
                OnLeaseAgreementDocUrlChanging(value);
                ReportPropertyChanging("LeaseAgreementDocUrl");
                _LeaseAgreementDocUrl = StructuralObject.SetValidValue(value, true, "LeaseAgreementDocUrl");
                ReportPropertyChanged("LeaseAgreementDocUrl");
                OnLeaseAgreementDocUrlChanged();
            }
        }
        private global::System.String _LeaseAgreementDocUrl;
        partial void OnLeaseAgreementDocUrlChanging(global::System.String value);
        partial void OnLeaseAgreementDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Addendum
        {
            get
            {
                return _Addendum;
            }
            set
            {
                OnAddendumChanging(value);
                ReportPropertyChanging("Addendum");
                _Addendum = StructuralObject.SetValidValue(value, "Addendum");
                ReportPropertyChanged("Addendum");
                OnAddendumChanged();
            }
        }
        private global::System.Boolean _Addendum;
        partial void OnAddendumChanging(global::System.Boolean value);
        partial void OnAddendumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Lease_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterDocumentDataModel.FK_Lease_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterDocumentDataModel.FK_Lease_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterDocumentDataModel.FK_Lease_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterDocumentDataModel.FK_Lease_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="ManagementContract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementContract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementContract object.
        /// </summary>
        /// <param name="managementContractId">Initial value of the ManagementContractId property.</param>
        /// <param name="managementContractTitile">Initial value of the ManagementContractTitile property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="listingFeeScale">Initial value of the ListingFeeScale property.</param>
        /// <param name="managementFeeScale">Initial value of the ManagementFeeScale property.</param>
        /// <param name="managementFeeFrequencyId">Initial value of the ManagementFeeFrequencyId property.</param>
        /// <param name="contractSignDate">Initial value of the ContractSignDate property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ManagementContract CreateManagementContract(global::System.Int32 managementContractId, global::System.String managementContractTitile, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String listingFeeScale, global::System.String managementFeeScale, global::System.Int32 managementFeeFrequencyId, global::System.DateTime contractSignDate, global::System.Int32 propertyId, global::System.DateTime createDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            ManagementContract managementContract = new ManagementContract();
            managementContract.ManagementContractId = managementContractId;
            managementContract.ManagementContractTitile = managementContractTitile;
            managementContract.StartDate = startDate;
            managementContract.EndDate = endDate;
            managementContract.ListingFeeScale = listingFeeScale;
            managementContract.ManagementFeeScale = managementFeeScale;
            managementContract.ManagementFeeFrequencyId = managementFeeFrequencyId;
            managementContract.ContractSignDate = contractSignDate;
            managementContract.PropertyId = propertyId;
            managementContract.CreateDate = createDate;
            managementContract.UpdateDate = updateDate;
            managementContract.IsActive = isActive;
            return managementContract;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementContractId
        {
            get
            {
                return _ManagementContractId;
            }
            set
            {
                if (_ManagementContractId != value)
                {
                    OnManagementContractIdChanging(value);
                    ReportPropertyChanging("ManagementContractId");
                    _ManagementContractId = StructuralObject.SetValidValue(value, "ManagementContractId");
                    ReportPropertyChanged("ManagementContractId");
                    OnManagementContractIdChanged();
                }
            }
        }
        private global::System.Int32 _ManagementContractId;
        partial void OnManagementContractIdChanging(global::System.Int32 value);
        partial void OnManagementContractIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementContractTitile
        {
            get
            {
                return _ManagementContractTitile;
            }
            set
            {
                OnManagementContractTitileChanging(value);
                ReportPropertyChanging("ManagementContractTitile");
                _ManagementContractTitile = StructuralObject.SetValidValue(value, false, "ManagementContractTitile");
                ReportPropertyChanged("ManagementContractTitile");
                OnManagementContractTitileChanged();
            }
        }
        private global::System.String _ManagementContractTitile;
        partial void OnManagementContractTitileChanging(global::System.String value);
        partial void OnManagementContractTitileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingFeeScale
        {
            get
            {
                return _ListingFeeScale;
            }
            set
            {
                OnListingFeeScaleChanging(value);
                ReportPropertyChanging("ListingFeeScale");
                _ListingFeeScale = StructuralObject.SetValidValue(value, false, "ListingFeeScale");
                ReportPropertyChanged("ListingFeeScale");
                OnListingFeeScaleChanged();
            }
        }
        private global::System.String _ListingFeeScale;
        partial void OnListingFeeScaleChanging(global::System.String value);
        partial void OnListingFeeScaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagementFeeScale
        {
            get
            {
                return _ManagementFeeScale;
            }
            set
            {
                OnManagementFeeScaleChanging(value);
                ReportPropertyChanging("ManagementFeeScale");
                _ManagementFeeScale = StructuralObject.SetValidValue(value, false, "ManagementFeeScale");
                ReportPropertyChanged("ManagementFeeScale");
                OnManagementFeeScaleChanged();
            }
        }
        private global::System.String _ManagementFeeScale;
        partial void OnManagementFeeScaleChanging(global::System.String value);
        partial void OnManagementFeeScaleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeFrequencyId
        {
            get
            {
                return _ManagementFeeFrequencyId;
            }
            set
            {
                OnManagementFeeFrequencyIdChanging(value);
                ReportPropertyChanging("ManagementFeeFrequencyId");
                _ManagementFeeFrequencyId = StructuralObject.SetValidValue(value, "ManagementFeeFrequencyId");
                ReportPropertyChanged("ManagementFeeFrequencyId");
                OnManagementFeeFrequencyIdChanged();
            }
        }
        private global::System.Int32 _ManagementFeeFrequencyId;
        partial void OnManagementFeeFrequencyIdChanging(global::System.Int32 value);
        partial void OnManagementFeeFrequencyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ContractSignDate
        {
            get
            {
                return _ContractSignDate;
            }
            set
            {
                OnContractSignDateChanging(value);
                ReportPropertyChanging("ContractSignDate");
                _ContractSignDate = StructuralObject.SetValidValue(value, "ContractSignDate");
                ReportPropertyChanged("ContractSignDate");
                OnContractSignDateChanged();
            }
        }
        private global::System.DateTime _ContractSignDate;
        partial void OnContractSignDateChanging(global::System.DateTime value);
        partial void OnContractSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagementContractDocUrl
        {
            get
            {
                return _ManagementContractDocUrl;
            }
            set
            {
                OnManagementContractDocUrlChanging(value);
                ReportPropertyChanging("ManagementContractDocUrl");
                _ManagementContractDocUrl = StructuralObject.SetValidValue(value, true, "ManagementContractDocUrl");
                ReportPropertyChanged("ManagementContractDocUrl");
                OnManagementContractDocUrlChanged();
            }
        }
        private global::System.String _ManagementContractDocUrl;
        partial void OnManagementContractDocUrlChanging(global::System.String value);
        partial void OnManagementContractDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_ManagementContract_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterDocumentDataModel.FK_ManagementContract_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterDocumentDataModel.FK_ManagementContract_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterDocumentDataModel.FK_ManagementContract_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterDocumentDataModel.FK_ManagementContract_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="propertyBuildYear">Initial value of the PropertyBuildYear property.</param>
        /// <param name="propertyMgmntlStatusId">Initial value of the PropertyMgmntlStatusId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Property CreateProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.Int32 propertyTypeId, global::System.Int32 propertyAddressId, global::System.Int32 propertyFeatureId, global::System.Int32 propertyFacilityId, global::System.Int32 propertyOwnerId, global::System.Int32 propertyManagerId, global::System.Int32 propertyBuildYear, global::System.Int32 propertyMgmntlStatusId, global::System.Boolean isActive, global::System.Boolean isShared, global::System.Int32 rentalStatusId, global::System.DateTime createdDate, global::System.DateTime updateDate)
        {
            Property property = new Property();
            property.PropertyId = propertyId;
            property.PropertyName = propertyName;
            property.PropertyTypeId = propertyTypeId;
            property.PropertyAddressId = propertyAddressId;
            property.PropertyFeatureId = propertyFeatureId;
            property.PropertyFacilityId = propertyFacilityId;
            property.PropertyOwnerId = propertyOwnerId;
            property.PropertyManagerId = propertyManagerId;
            property.PropertyBuildYear = propertyBuildYear;
            property.PropertyMgmntlStatusId = propertyMgmntlStatusId;
            property.IsActive = isActive;
            property.IsShared = isShared;
            property.RentalStatusId = rentalStatusId;
            property.CreatedDate = createdDate;
            property.UpdateDate = updateDate;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDesc
        {
            get
            {
                return _PropertyDesc;
            }
            set
            {
                OnPropertyDescChanging(value);
                ReportPropertyChanging("PropertyDesc");
                _PropertyDesc = StructuralObject.SetValidValue(value, true, "PropertyDesc");
                ReportPropertyChanged("PropertyDesc");
                OnPropertyDescChanged();
            }
        }
        private global::System.String _PropertyDesc;
        partial void OnPropertyDescChanging(global::System.String value);
        partial void OnPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyListDesc
        {
            get
            {
                return _PropertyListDesc;
            }
            set
            {
                OnPropertyListDescChanging(value);
                ReportPropertyChanging("PropertyListDesc");
                _PropertyListDesc = StructuralObject.SetValidValue(value, true, "PropertyListDesc");
                ReportPropertyChanged("PropertyListDesc");
                OnPropertyListDescChanged();
            }
        }
        private global::System.String _PropertyListDesc;
        partial void OnPropertyListDescChanging(global::System.String value);
        partial void OnPropertyListDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                OnPropertyTypeIdChanging(value);
                ReportPropertyChanging("PropertyTypeId");
                _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                ReportPropertyChanged("PropertyTypeId");
                OnPropertyTypeIdChanged();
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrataCouncilId
        {
            get
            {
                return _StrataCouncilId;
            }
            set
            {
                OnStrataCouncilIdChanging(value);
                ReportPropertyChanging("StrataCouncilId");
                _StrataCouncilId = StructuralObject.SetValidValue(value, "StrataCouncilId");
                ReportPropertyChanged("StrataCouncilId");
                OnStrataCouncilIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StrataCouncilId;
        partial void OnStrataCouncilIdChanging(Nullable<global::System.Int32> value);
        partial void OnStrataCouncilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                OnPropertyAddressIdChanging(value);
                ReportPropertyChanging("PropertyAddressId");
                _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                ReportPropertyChanged("PropertyAddressId");
                OnPropertyAddressIdChanged();
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                OnPropertyFeatureIdChanging(value);
                ReportPropertyChanging("PropertyFeatureId");
                _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                ReportPropertyChanged("PropertyFeatureId");
                OnPropertyFeatureIdChanged();
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                OnPropertyFacilityIdChanging(value);
                ReportPropertyChanging("PropertyFacilityId");
                _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                ReportPropertyChanged("PropertyFacilityId");
                OnPropertyFacilityIdChanged();
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                OnPropertyOwnerIdChanging(value);
                ReportPropertyChanging("PropertyOwnerId");
                _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                ReportPropertyChanged("PropertyOwnerId");
                OnPropertyOwnerIdChanged();
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                OnPropertyManagerIdChanging(value);
                ReportPropertyChanging("PropertyManagerId");
                _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                ReportPropertyChanged("PropertyManagerId");
                OnPropertyManagerIdChanged();
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyImgUrl
        {
            get
            {
                return _PropertyImgUrl;
            }
            set
            {
                OnPropertyImgUrlChanging(value);
                ReportPropertyChanging("PropertyImgUrl");
                _PropertyImgUrl = StructuralObject.SetValidValue(value, true, "PropertyImgUrl");
                ReportPropertyChanged("PropertyImgUrl");
                OnPropertyImgUrlChanged();
            }
        }
        private global::System.String _PropertyImgUrl;
        partial void OnPropertyImgUrlChanging(global::System.String value);
        partial void OnPropertyImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyVideoUrl
        {
            get
            {
                return _PropertyVideoUrl;
            }
            set
            {
                OnPropertyVideoUrlChanging(value);
                ReportPropertyChanging("PropertyVideoUrl");
                _PropertyVideoUrl = StructuralObject.SetValidValue(value, true, "PropertyVideoUrl");
                ReportPropertyChanged("PropertyVideoUrl");
                OnPropertyVideoUrlChanged();
            }
        }
        private global::System.String _PropertyVideoUrl;
        partial void OnPropertyVideoUrlChanging(global::System.String value);
        partial void OnPropertyVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyBuildYear
        {
            get
            {
                return _PropertyBuildYear;
            }
            set
            {
                OnPropertyBuildYearChanging(value);
                ReportPropertyChanging("PropertyBuildYear");
                _PropertyBuildYear = StructuralObject.SetValidValue(value, "PropertyBuildYear");
                ReportPropertyChanged("PropertyBuildYear");
                OnPropertyBuildYearChanged();
            }
        }
        private global::System.Int32 _PropertyBuildYear;
        partial void OnPropertyBuildYearChanging(global::System.Int32 value);
        partial void OnPropertyBuildYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyMgmntlStatusId
        {
            get
            {
                return _PropertyMgmntlStatusId;
            }
            set
            {
                OnPropertyMgmntlStatusIdChanging(value);
                ReportPropertyChanging("PropertyMgmntlStatusId");
                _PropertyMgmntlStatusId = StructuralObject.SetValidValue(value, "PropertyMgmntlStatusId");
                ReportPropertyChanged("PropertyMgmntlStatusId");
                OnPropertyMgmntlStatusIdChanged();
            }
        }
        private global::System.Int32 _PropertyMgmntlStatusId;
        partial void OnPropertyMgmntlStatusIdChanging(global::System.Int32 value);
        partial void OnPropertyMgmntlStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                OnRentalStatusIdChanging(value);
                ReportPropertyChanging("RentalStatusId");
                _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                ReportPropertyChanged("RentalStatusId");
                OnRentalStatusIdChanged();
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Lease_Property", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterDocumentDataModel.FK_Lease_Property", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterDocumentDataModel.FK_Lease_Property", "Lease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_ManagementContract_Property", "ManagementContract")]
        public EntityCollection<ManagementContract> ManagementContracts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementContract>("ProMasterDocumentDataModel.FK_ManagementContract_Property", "ManagementContract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementContract>("ProMasterDocumentDataModel.FK_ManagementContract_Property", "ManagementContract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Property_PropertyOwner", "PropertyOwner")]
        public PropertyOwner PropertyOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterDocumentDataModel.FK_Property_PropertyOwner", "PropertyOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterDocumentDataModel.FK_Property_PropertyOwner", "PropertyOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyOwner> PropertyOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterDocumentDataModel.FK_Property_PropertyOwner", "PropertyOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyOwner>("ProMasterDocumentDataModel.FK_Property_PropertyOwner", "PropertyOwner", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="PropertyOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyOwner object.
        /// </summary>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static PropertyOwner CreatePropertyOwner(global::System.Int32 propertyOwnerId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Boolean isActive, global::System.Int32 roleId, global::System.String addedBy, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            PropertyOwner propertyOwner = new PropertyOwner();
            propertyOwner.PropertyOwnerId = propertyOwnerId;
            propertyOwner.UserName = userName;
            propertyOwner.FirstName = firstName;
            propertyOwner.LastName = lastName;
            propertyOwner.ContactEmail = contactEmail;
            propertyOwner.ContactTelephone1 = contactTelephone1;
            propertyOwner.OnlineAccessEnbaled = onlineAccessEnbaled;
            propertyOwner.UserAvartaImgUrl = userAvartaImgUrl;
            propertyOwner.IsActive = isActive;
            propertyOwner.RoleId = roleId;
            propertyOwner.AddedBy = addedBy;
            propertyOwner.CreationDate = creationDate;
            propertyOwner.UpdateDate = updateDate;
            return propertyOwner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                if (_PropertyOwnerId != value)
                {
                    OnPropertyOwnerIdChanging(value);
                    ReportPropertyChanging("PropertyOwnerId");
                    _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                    ReportPropertyChanged("PropertyOwnerId");
                    OnPropertyOwnerIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false, "AddedBy");
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AddProperty
        {
            get
            {
                return _AddProperty;
            }
            set
            {
                OnAddPropertyChanging(value);
                ReportPropertyChanging("AddProperty");
                _AddProperty = StructuralObject.SetValidValue(value, "AddProperty");
                ReportPropertyChanged("AddProperty");
                OnAddPropertyChanged();
            }
        }
        private Nullable<global::System.Boolean> _AddProperty;
        partial void OnAddPropertyChanging(Nullable<global::System.Boolean> value);
        partial void OnAddPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterDocumentDataModel", "FK_Property_PropertyOwner", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterDocumentDataModel.FK_Property_PropertyOwner", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterDocumentDataModel.FK_Property_PropertyOwner", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterDocumentDataModel", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="managedBy">Initial value of the ManagedBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Tenant CreateTenant(global::System.Int32 tenantId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Int32 leaseId, global::System.Int32 roleId, global::System.Boolean isActive, global::System.String managedBy, global::System.DateTime createDate, global::System.DateTime updateDate)
        {
            Tenant tenant = new Tenant();
            tenant.TenantId = tenantId;
            tenant.UserName = userName;
            tenant.FirstName = firstName;
            tenant.LastName = lastName;
            tenant.ContactEmail = contactEmail;
            tenant.ContactTelephone1 = contactTelephone1;
            tenant.OnlineAccessEnbaled = onlineAccessEnbaled;
            tenant.UserAvartaImgUrl = userAvartaImgUrl;
            tenant.LeaseId = leaseId;
            tenant.RoleId = roleId;
            tenant.IsActive = isActive;
            tenant.ManagedBy = managedBy;
            tenant.CreateDate = createDate;
            tenant.UpdateDate = updateDate;
            return tenant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                if (_TenantId != value)
                {
                    OnTenantIdChanging(value);
                    ReportPropertyChanging("TenantId");
                    _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                    ReportPropertyChanged("TenantId");
                    OnTenantIdChanged();
                }
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagedBy
        {
            get
            {
                return _ManagedBy;
            }
            set
            {
                OnManagedByChanging(value);
                ReportPropertyChanging("ManagedBy");
                _ManagedBy = StructuralObject.SetValidValue(value, false, "ManagedBy");
                ReportPropertyChanged("ManagedBy");
                OnManagedByChanged();
            }
        }
        private global::System.String _ManagedBy;
        partial void OnManagedByChanging(global::System.String value);
        partial void OnManagedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

    }

    #endregion

}
