//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_Addendum_Lease", "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.Lease), "Addendum", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.Addendum), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_Lease_LeaseTerm", "LeaseTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.LeaseTerm), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.DocumentPrincipalType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_Document_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.DocumentType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_RentPayment_RentPaymentMethod", "RentPaymentMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.RentPaymentMethod), "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.RentPayment), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_RentPayment_Tenant", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.Tenant), "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.RentPayment), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_RentDepositTransfer_RentPayment", "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.RentPayment), "RentDepositTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.RentDepositTransfer), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_RentRecipt_RentPayment", "RentPayment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.RentPayment), "RentRecipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.RentRecipt), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_Lease_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.Property), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterLeaseDataModel", "FK_Property_PropertyAddress", "PropertyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Lease.PropertyAddress), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Lease.Property), true)]

#endregion

namespace ProMaster.Core.Lease
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProMasterLeaseDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProMasterLeaseDataEntities object using the connection string found in the 'ProMasterLeaseDataEntities' section of the application configuration file.
        /// </summary>
        public ProMasterLeaseDataEntities() : base("name=ProMasterLeaseDataEntities", "ProMasterLeaseDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterLeaseDataEntities object.
        /// </summary>
        public ProMasterLeaseDataEntities(string connectionString) : base(connectionString, "ProMasterLeaseDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterLeaseDataEntities object.
        /// </summary>
        public ProMasterLeaseDataEntities(EntityConnection connection) : base(connection, "ProMasterLeaseDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Addendum> Addenda
        {
            get
            {
                if ((_Addenda == null))
                {
                    _Addenda = base.CreateObjectSet<Addendum>("Addenda");
                }
                return _Addenda;
            }
        }
        private ObjectSet<Addendum> _Addenda;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lease> Leases
        {
            get
            {
                if ((_Leases == null))
                {
                    _Leases = base.CreateObjectSet<Lease>("Leases");
                }
                return _Leases;
            }
        }
        private ObjectSet<Lease> _Leases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTerm> LeaseTerms
        {
            get
            {
                if ((_LeaseTerms == null))
                {
                    _LeaseTerms = base.CreateObjectSet<LeaseTerm>("LeaseTerms");
                }
                return _LeaseTerms;
            }
        }
        private ObjectSet<LeaseTerm> _LeaseTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> Tenants
        {
            get
            {
                if ((_Tenants == null))
                {
                    _Tenants = base.CreateObjectSet<Tenant>("Tenants");
                }
                return _Tenants;
            }
        }
        private ObjectSet<Tenant> _Tenants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentPrincipalType> DocumentPrincipalTypes
        {
            get
            {
                if ((_DocumentPrincipalTypes == null))
                {
                    _DocumentPrincipalTypes = base.CreateObjectSet<DocumentPrincipalType>("DocumentPrincipalTypes");
                }
                return _DocumentPrincipalTypes;
            }
        }
        private ObjectSet<DocumentPrincipalType> _DocumentPrincipalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentPaymentMethod> RentPaymentMethods
        {
            get
            {
                if ((_RentPaymentMethods == null))
                {
                    _RentPaymentMethods = base.CreateObjectSet<RentPaymentMethod>("RentPaymentMethods");
                }
                return _RentPaymentMethods;
            }
        }
        private ObjectSet<RentPaymentMethod> _RentPaymentMethods;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentDepositTransfer> RentDepositTransfers
        {
            get
            {
                if ((_RentDepositTransfers == null))
                {
                    _RentDepositTransfers = base.CreateObjectSet<RentDepositTransfer>("RentDepositTransfers");
                }
                return _RentDepositTransfers;
            }
        }
        private ObjectSet<RentDepositTransfer> _RentDepositTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentPayment> RentPayments
        {
            get
            {
                if ((_RentPayments == null))
                {
                    _RentPayments = base.CreateObjectSet<RentPayment>("RentPayments");
                }
                return _RentPayments;
            }
        }
        private ObjectSet<RentPayment> _RentPayments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentRecipt> RentRecipts
        {
            get
            {
                if ((_RentRecipts == null))
                {
                    _RentRecipts = base.CreateObjectSet<RentRecipt>("RentRecipts");
                }
                return _RentRecipts;
            }
        }
        private ObjectSet<RentRecipt> _RentRecipts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyAddress> PropertyAddresses
        {
            get
            {
                if ((_PropertyAddresses == null))
                {
                    _PropertyAddresses = base.CreateObjectSet<PropertyAddress>("PropertyAddresses");
                }
                return _PropertyAddresses;
            }
        }
        private ObjectSet<PropertyAddress> _PropertyAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bank> Banks
        {
            get
            {
                if ((_Banks == null))
                {
                    _Banks = base.CreateObjectSet<Bank>("Banks");
                }
                return _Banks;
            }
        }
        private ObjectSet<Bank> _Banks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addenda EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddenda(Addendum addendum)
        {
            base.AddObject("Addenda", addendum);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeases(Lease lease)
        {
            base.AddObject("Leases", lease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTerms(LeaseTerm leaseTerm)
        {
            base.AddObject("LeaseTerms", leaseTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tenants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenants(Tenant tenant)
        {
            base.AddObject("Tenants", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentPrincipalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentPrincipalTypes(DocumentPrincipalType documentPrincipalType)
        {
            base.AddObject("DocumentPrincipalTypes", documentPrincipalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentPaymentMethods EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentPaymentMethods(RentPaymentMethod rentPaymentMethod)
        {
            base.AddObject("RentPaymentMethods", rentPaymentMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentDepositTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentDepositTransfers(RentDepositTransfer rentDepositTransfer)
        {
            base.AddObject("RentDepositTransfers", rentDepositTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentPayments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentPayments(RentPayment rentPayment)
        {
            base.AddObject("RentPayments", rentPayment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentRecipts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentRecipts(RentRecipt rentRecipt)
        {
            base.AddObject("RentRecipts", rentRecipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyAddresses(PropertyAddress propertyAddress)
        {
            base.AddObject("PropertyAddresses", propertyAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Banks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBanks(Bank bank)
        {
            base.AddObject("Banks", bank);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="Addendum")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Addendum : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Addendum object.
        /// </summary>
        /// <param name="addendumId">Initial value of the AddendumId property.</param>
        /// <param name="addendumContent">Initial value of the AddendumContent property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        public static Addendum CreateAddendum(global::System.Int32 addendumId, global::System.Byte[] addendumContent, global::System.Int32 leaseId)
        {
            Addendum addendum = new Addendum();
            addendum.AddendumId = addendumId;
            addendum.AddendumContent = addendumContent;
            addendum.LeaseId = leaseId;
            return addendum;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddendumId
        {
            get
            {
                return _AddendumId;
            }
            set
            {
                if (_AddendumId != value)
                {
                    OnAddendumIdChanging(value);
                    ReportPropertyChanging("AddendumId");
                    _AddendumId = StructuralObject.SetValidValue(value, "AddendumId");
                    ReportPropertyChanged("AddendumId");
                    OnAddendumIdChanged();
                }
            }
        }
        private global::System.Int32 _AddendumId;
        partial void OnAddendumIdChanging(global::System.Int32 value);
        partial void OnAddendumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] AddendumContent
        {
            get
            {
                return StructuralObject.GetValidValue(_AddendumContent);
            }
            set
            {
                OnAddendumContentChanging(value);
                ReportPropertyChanging("AddendumContent");
                _AddendumContent = StructuralObject.SetValidValue(value, false, "AddendumContent");
                ReportPropertyChanged("AddendumContent");
                OnAddendumContentChanged();
            }
        }
        private global::System.Byte[] _AddendumContent;
        partial void OnAddendumContentChanging(global::System.Byte[] value);
        partial void OnAddendumContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] AddendumDocUrl
        {
            get
            {
                return StructuralObject.GetValidValue(_AddendumDocUrl);
            }
            set
            {
                OnAddendumDocUrlChanging(value);
                ReportPropertyChanging("AddendumDocUrl");
                _AddendumDocUrl = StructuralObject.SetValidValue(value, true, "AddendumDocUrl");
                ReportPropertyChanged("AddendumDocUrl");
                OnAddendumDocUrlChanged();
            }
        }
        private global::System.Byte[] _AddendumDocUrl;
        partial void OnAddendumDocUrlChanging(global::System.Byte[] value);
        partial void OnAddendumDocUrlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Addendum_Lease", "Lease")]
        public Lease Lease
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lease>("ProMasterLeaseDataModel.FK_Addendum_Lease", "Lease").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lease>("ProMasterLeaseDataModel.FK_Addendum_Lease", "Lease").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lease> LeaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lease>("ProMasterLeaseDataModel.FK_Addendum_Lease", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lease>("ProMasterLeaseDataModel.FK_Addendum_Lease", "Lease", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bank object.
        /// </summary>
        /// <param name="bankId">Initial value of the BankId property.</param>
        /// <param name="bankName">Initial value of the BankName property.</param>
        public static Bank CreateBank(global::System.Int32 bankId, global::System.String bankName)
        {
            Bank bank = new Bank();
            bank.BankId = bankId;
            bank.BankName = bankName;
            return bank;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankId
        {
            get
            {
                return _BankId;
            }
            set
            {
                if (_BankId != value)
                {
                    OnBankIdChanging(value);
                    ReportPropertyChanging("BankId");
                    _BankId = StructuralObject.SetValidValue(value, "BankId");
                    ReportPropertyChanged("BankId");
                    OnBankIdChanged();
                }
            }
        }
        private global::System.Int32 _BankId;
        partial void OnBankIdChanging(global::System.Int32 value);
        partial void OnBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, false, "BankName");
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankBranch
        {
            get
            {
                return _BankBranch;
            }
            set
            {
                OnBankBranchChanging(value);
                ReportPropertyChanging("BankBranch");
                _BankBranch = StructuralObject.SetValidValue(value, true, "BankBranch");
                ReportPropertyChanged("BankBranch");
                OnBankBranchChanged();
            }
        }
        private global::System.String _BankBranch;
        partial void OnBankBranchChanging(global::System.String value);
        partial void OnBankBranchChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="dcoumentDetails">Initial value of the DcoumentDetails property.</param>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalId">Initial value of the DocumentPrincipalId property.</param>
        /// <param name="documentUrl">Initial value of the DocumentUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.Int32 documentTypeId, global::System.String documentName, global::System.String dcoumentDetails, global::System.Int32 documentPrincipalTypeId, global::System.Int32 documentPrincipalId, global::System.String documentUrl, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.DocumentTypeId = documentTypeId;
            document.DocumentName = documentName;
            document.DcoumentDetails = dcoumentDetails;
            document.DocumentPrincipalTypeId = documentPrincipalTypeId;
            document.DocumentPrincipalId = documentPrincipalId;
            document.DocumentUrl = documentUrl;
            document.CreationDate = creationDate;
            document.UpdateDate = updateDate;
            document.IsActive = isActive;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value, "DocumentId");
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DcoumentDetails
        {
            get
            {
                return _DcoumentDetails;
            }
            set
            {
                OnDcoumentDetailsChanging(value);
                ReportPropertyChanging("DcoumentDetails");
                _DcoumentDetails = StructuralObject.SetValidValue(value, false, "DcoumentDetails");
                ReportPropertyChanged("DcoumentDetails");
                OnDcoumentDetailsChanged();
            }
        }
        private global::System.String _DcoumentDetails;
        partial void OnDcoumentDetailsChanging(global::System.String value);
        partial void OnDcoumentDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                OnDocumentPrincipalTypeIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalTypeId");
                _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                ReportPropertyChanged("DocumentPrincipalTypeId");
                OnDocumentPrincipalTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalId
        {
            get
            {
                return _DocumentPrincipalId;
            }
            set
            {
                OnDocumentPrincipalIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalId");
                _DocumentPrincipalId = StructuralObject.SetValidValue(value, "DocumentPrincipalId");
                ReportPropertyChanged("DocumentPrincipalId");
                OnDocumentPrincipalIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalId;
        partial void OnDocumentPrincipalIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentUrl
        {
            get
            {
                return _DocumentUrl;
            }
            set
            {
                OnDocumentUrlChanging(value);
                ReportPropertyChanging("DocumentUrl");
                _DocumentUrl = StructuralObject.SetValidValue(value, false, "DocumentUrl");
                ReportPropertyChanged("DocumentUrl");
                OnDocumentUrlChanged();
            }
        }
        private global::System.String _DocumentUrl;
        partial void OnDocumentUrlChanging(global::System.String value);
        partial void OnDocumentUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType")]
        public DocumentPrincipalType DocumentPrincipalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterLeaseDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterLeaseDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentPrincipalType> DocumentPrincipalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterLeaseDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentPrincipalType>("ProMasterLeaseDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Document_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterLeaseDataModel.FK_Document_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterLeaseDataModel.FK_Document_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterLeaseDataModel.FK_Document_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("ProMasterLeaseDataModel.FK_Document_DocumentType", "DocumentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="DocumentPrincipalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentPrincipalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentPrincipalType object.
        /// </summary>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalType1">Initial value of the DocumentPrincipalType1 property.</param>
        public static DocumentPrincipalType CreateDocumentPrincipalType(global::System.Int32 documentPrincipalTypeId, global::System.String documentPrincipalType1)
        {
            DocumentPrincipalType documentPrincipalType = new DocumentPrincipalType();
            documentPrincipalType.DocumentPrincipalTypeId = documentPrincipalTypeId;
            documentPrincipalType.DocumentPrincipalType1 = documentPrincipalType1;
            return documentPrincipalType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                if (_DocumentPrincipalTypeId != value)
                {
                    OnDocumentPrincipalTypeIdChanging(value);
                    ReportPropertyChanging("DocumentPrincipalTypeId");
                    _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                    ReportPropertyChanged("DocumentPrincipalTypeId");
                    OnDocumentPrincipalTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentPrincipalType1
        {
            get
            {
                return _DocumentPrincipalType1;
            }
            set
            {
                OnDocumentPrincipalType1Changing(value);
                ReportPropertyChanging("DocumentPrincipalType1");
                _DocumentPrincipalType1 = StructuralObject.SetValidValue(value, false, "DocumentPrincipalType1");
                ReportPropertyChanged("DocumentPrincipalType1");
                OnDocumentPrincipalType1Changed();
            }
        }
        private global::System.String _DocumentPrincipalType1;
        partial void OnDocumentPrincipalType1Changing(global::System.String value);
        partial void OnDocumentPrincipalType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Document_DocumentPrincipalType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterLeaseDataModel.FK_Document_DocumentPrincipalType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterLeaseDataModel.FK_Document_DocumentPrincipalType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentType1">Initial value of the DocumentType1 property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeId, global::System.String documentType1)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeId = documentTypeId;
            documentType.DocumentType1 = documentType1;
            return documentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                if (_DocumentTypeId != value)
                {
                    OnDocumentTypeIdChanging(value);
                    ReportPropertyChanging("DocumentTypeId");
                    _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                    ReportPropertyChanged("DocumentTypeId");
                    OnDocumentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType1
        {
            get
            {
                return _DocumentType1;
            }
            set
            {
                OnDocumentType1Changing(value);
                ReportPropertyChanging("DocumentType1");
                _DocumentType1 = StructuralObject.SetValidValue(value, false, "DocumentType1");
                ReportPropertyChanged("DocumentType1");
                OnDocumentType1Changed();
            }
        }
        private global::System.String _DocumentType1;
        partial void OnDocumentType1Changing(global::System.String value);
        partial void OnDocumentType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Document_DocumentType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterLeaseDataModel.FK_Document_DocumentType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterLeaseDataModel.FK_Document_DocumentType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="Lease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lease object.
        /// </summary>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="leaseTitle">Initial value of the LeaseTitle property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="leaseStartDate">Initial value of the LeaseStartDate property.</param>
        /// <param name="leaseEndDate">Initial value of the LeaseEndDate property.</param>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="rentFrequency">Initial value of the RentFrequency property.</param>
        /// <param name="rentAmount">Initial value of the RentAmount property.</param>
        /// <param name="rentDueOn">Initial value of the RentDueOn property.</param>
        /// <param name="damageDepositAmount">Initial value of the DamageDepositAmount property.</param>
        /// <param name="leaseSignDate">Initial value of the LeaseSignDate property.</param>
        /// <param name="addendum">Initial value of the Addendum property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Lease CreateLease(global::System.Int32 leaseId, global::System.String leaseTitle, global::System.Int32 propertyId, global::System.DateTime leaseStartDate, global::System.DateTime leaseEndDate, global::System.Int32 leaseTermId, global::System.String rentFrequency, global::System.Decimal rentAmount, global::System.String rentDueOn, global::System.Decimal damageDepositAmount, global::System.DateTime leaseSignDate, global::System.Boolean addendum, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Lease lease = new Lease();
            lease.LeaseId = leaseId;
            lease.LeaseTitle = leaseTitle;
            lease.PropertyId = propertyId;
            lease.LeaseStartDate = leaseStartDate;
            lease.LeaseEndDate = leaseEndDate;
            lease.LeaseTermId = leaseTermId;
            lease.RentFrequency = rentFrequency;
            lease.RentAmount = rentAmount;
            lease.RentDueOn = rentDueOn;
            lease.DamageDepositAmount = damageDepositAmount;
            lease.LeaseSignDate = leaseSignDate;
            lease.Addendum = addendum;
            lease.CreationDate = creationDate;
            lease.UpdateDate = updateDate;
            lease.IsActive = isActive;
            return lease;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                if (_LeaseId != value)
                {
                    OnLeaseIdChanging(value);
                    ReportPropertyChanging("LeaseId");
                    _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                    ReportPropertyChanged("LeaseId");
                    OnLeaseIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaseTitle
        {
            get
            {
                return _LeaseTitle;
            }
            set
            {
                OnLeaseTitleChanging(value);
                ReportPropertyChanging("LeaseTitle");
                _LeaseTitle = StructuralObject.SetValidValue(value, false, "LeaseTitle");
                ReportPropertyChanged("LeaseTitle");
                OnLeaseTitleChanged();
            }
        }
        private global::System.String _LeaseTitle;
        partial void OnLeaseTitleChanging(global::System.String value);
        partial void OnLeaseTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseDesc
        {
            get
            {
                return _LeaseDesc;
            }
            set
            {
                OnLeaseDescChanging(value);
                ReportPropertyChanging("LeaseDesc");
                _LeaseDesc = StructuralObject.SetValidValue(value, true, "LeaseDesc");
                ReportPropertyChanged("LeaseDesc");
                OnLeaseDescChanged();
            }
        }
        private global::System.String _LeaseDesc;
        partial void OnLeaseDescChanging(global::System.String value);
        partial void OnLeaseDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseStartDate
        {
            get
            {
                return _LeaseStartDate;
            }
            set
            {
                OnLeaseStartDateChanging(value);
                ReportPropertyChanging("LeaseStartDate");
                _LeaseStartDate = StructuralObject.SetValidValue(value, "LeaseStartDate");
                ReportPropertyChanged("LeaseStartDate");
                OnLeaseStartDateChanged();
            }
        }
        private global::System.DateTime _LeaseStartDate;
        partial void OnLeaseStartDateChanging(global::System.DateTime value);
        partial void OnLeaseStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseEndDate
        {
            get
            {
                return _LeaseEndDate;
            }
            set
            {
                OnLeaseEndDateChanging(value);
                ReportPropertyChanging("LeaseEndDate");
                _LeaseEndDate = StructuralObject.SetValidValue(value, "LeaseEndDate");
                ReportPropertyChanged("LeaseEndDate");
                OnLeaseEndDateChanged();
            }
        }
        private global::System.DateTime _LeaseEndDate;
        partial void OnLeaseEndDateChanging(global::System.DateTime value);
        partial void OnLeaseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                OnLeaseTermIdChanging(value);
                ReportPropertyChanging("LeaseTermId");
                _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                ReportPropertyChanged("LeaseTermId");
                OnLeaseTermIdChanged();
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentFrequency
        {
            get
            {
                return _RentFrequency;
            }
            set
            {
                OnRentFrequencyChanging(value);
                ReportPropertyChanging("RentFrequency");
                _RentFrequency = StructuralObject.SetValidValue(value, false, "RentFrequency");
                ReportPropertyChanged("RentFrequency");
                OnRentFrequencyChanged();
            }
        }
        private global::System.String _RentFrequency;
        partial void OnRentFrequencyChanging(global::System.String value);
        partial void OnRentFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentAmount
        {
            get
            {
                return _RentAmount;
            }
            set
            {
                OnRentAmountChanging(value);
                ReportPropertyChanging("RentAmount");
                _RentAmount = StructuralObject.SetValidValue(value, "RentAmount");
                ReportPropertyChanged("RentAmount");
                OnRentAmountChanged();
            }
        }
        private global::System.Decimal _RentAmount;
        partial void OnRentAmountChanging(global::System.Decimal value);
        partial void OnRentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentDueOn
        {
            get
            {
                return _RentDueOn;
            }
            set
            {
                OnRentDueOnChanging(value);
                ReportPropertyChanging("RentDueOn");
                _RentDueOn = StructuralObject.SetValidValue(value, false, "RentDueOn");
                ReportPropertyChanged("RentDueOn");
                OnRentDueOnChanged();
            }
        }
        private global::System.String _RentDueOn;
        partial void OnRentDueOnChanging(global::System.String value);
        partial void OnRentDueOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DamageDepositAmount
        {
            get
            {
                return _DamageDepositAmount;
            }
            set
            {
                OnDamageDepositAmountChanging(value);
                ReportPropertyChanging("DamageDepositAmount");
                _DamageDepositAmount = StructuralObject.SetValidValue(value, "DamageDepositAmount");
                ReportPropertyChanged("DamageDepositAmount");
                OnDamageDepositAmountChanged();
            }
        }
        private global::System.Decimal _DamageDepositAmount;
        partial void OnDamageDepositAmountChanging(global::System.Decimal value);
        partial void OnDamageDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PetDepositAmount
        {
            get
            {
                return _PetDepositAmount;
            }
            set
            {
                OnPetDepositAmountChanging(value);
                ReportPropertyChanging("PetDepositAmount");
                _PetDepositAmount = StructuralObject.SetValidValue(value, "PetDepositAmount");
                ReportPropertyChanged("PetDepositAmount");
                OnPetDepositAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PetDepositAmount;
        partial void OnPetDepositAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPetDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseSignDate
        {
            get
            {
                return _LeaseSignDate;
            }
            set
            {
                OnLeaseSignDateChanging(value);
                ReportPropertyChanging("LeaseSignDate");
                _LeaseSignDate = StructuralObject.SetValidValue(value, "LeaseSignDate");
                ReportPropertyChanged("LeaseSignDate");
                OnLeaseSignDateChanged();
            }
        }
        private global::System.DateTime _LeaseSignDate;
        partial void OnLeaseSignDateChanging(global::System.DateTime value);
        partial void OnLeaseSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseAgreementDocUrl
        {
            get
            {
                return _LeaseAgreementDocUrl;
            }
            set
            {
                OnLeaseAgreementDocUrlChanging(value);
                ReportPropertyChanging("LeaseAgreementDocUrl");
                _LeaseAgreementDocUrl = StructuralObject.SetValidValue(value, true, "LeaseAgreementDocUrl");
                ReportPropertyChanged("LeaseAgreementDocUrl");
                OnLeaseAgreementDocUrlChanged();
            }
        }
        private global::System.String _LeaseAgreementDocUrl;
        partial void OnLeaseAgreementDocUrlChanging(global::System.String value);
        partial void OnLeaseAgreementDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Addendum
        {
            get
            {
                return _Addendum;
            }
            set
            {
                OnAddendumChanging(value);
                ReportPropertyChanging("Addendum");
                _Addendum = StructuralObject.SetValidValue(value, "Addendum");
                ReportPropertyChanged("Addendum");
                OnAddendumChanged();
            }
        }
        private global::System.Boolean _Addendum;
        partial void OnAddendumChanging(global::System.Boolean value);
        partial void OnAddendumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Addendum_Lease", "Addendum")]
        public EntityCollection<Addendum> Addenda
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Addendum>("ProMasterLeaseDataModel.FK_Addendum_Lease", "Addendum");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Addendum>("ProMasterLeaseDataModel.FK_Addendum_Lease", "Addendum", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Lease_LeaseTerm", "LeaseTerm")]
        public LeaseTerm LeaseTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterLeaseDataModel.FK_Lease_LeaseTerm", "LeaseTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterLeaseDataModel.FK_Lease_LeaseTerm", "LeaseTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTerm> LeaseTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterLeaseDataModel.FK_Lease_LeaseTerm", "LeaseTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTerm>("ProMasterLeaseDataModel.FK_Lease_LeaseTerm", "LeaseTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Lease_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterLeaseDataModel.FK_Lease_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterLeaseDataModel.FK_Lease_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterLeaseDataModel.FK_Lease_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterLeaseDataModel.FK_Lease_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="LeaseTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTerm object.
        /// </summary>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="leaaseTerm">Initial value of the LeaaseTerm property.</param>
        public static LeaseTerm CreateLeaseTerm(global::System.Int32 leaseTermId, global::System.String leaaseTerm)
        {
            LeaseTerm leaseTerm = new LeaseTerm();
            leaseTerm.LeaseTermId = leaseTermId;
            leaseTerm.LeaaseTerm = leaaseTerm;
            return leaseTerm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                if (_LeaseTermId != value)
                {
                    OnLeaseTermIdChanging(value);
                    ReportPropertyChanging("LeaseTermId");
                    _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                    ReportPropertyChanged("LeaseTermId");
                    OnLeaseTermIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaaseTerm
        {
            get
            {
                return _LeaaseTerm;
            }
            set
            {
                OnLeaaseTermChanging(value);
                ReportPropertyChanging("LeaaseTerm");
                _LeaaseTerm = StructuralObject.SetValidValue(value, false, "LeaaseTerm");
                ReportPropertyChanged("LeaaseTerm");
                OnLeaaseTermChanged();
            }
        }
        private global::System.String _LeaaseTerm;
        partial void OnLeaaseTermChanging(global::System.String value);
        partial void OnLeaaseTermChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Lease_LeaseTerm", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterLeaseDataModel.FK_Lease_LeaseTerm", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterLeaseDataModel.FK_Lease_LeaseTerm", "Lease", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="propertyBuildYear">Initial value of the PropertyBuildYear property.</param>
        /// <param name="propertyMgmntlStatusId">Initial value of the PropertyMgmntlStatusId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Property CreateProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.Int32 propertyTypeId, global::System.Int32 propertyAddressId, global::System.Int32 propertyFeatureId, global::System.Int32 propertyFacilityId, global::System.Int32 propertyOwnerId, global::System.Int32 propertyManagerId, global::System.Int32 propertyBuildYear, global::System.Int32 propertyMgmntlStatusId, global::System.Boolean isActive, global::System.Boolean isShared, global::System.Int32 rentalStatusId, global::System.DateTime createdDate, global::System.DateTime updateDate)
        {
            Property property = new Property();
            property.PropertyId = propertyId;
            property.PropertyName = propertyName;
            property.PropertyTypeId = propertyTypeId;
            property.PropertyAddressId = propertyAddressId;
            property.PropertyFeatureId = propertyFeatureId;
            property.PropertyFacilityId = propertyFacilityId;
            property.PropertyOwnerId = propertyOwnerId;
            property.PropertyManagerId = propertyManagerId;
            property.PropertyBuildYear = propertyBuildYear;
            property.PropertyMgmntlStatusId = propertyMgmntlStatusId;
            property.IsActive = isActive;
            property.IsShared = isShared;
            property.RentalStatusId = rentalStatusId;
            property.CreatedDate = createdDate;
            property.UpdateDate = updateDate;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDesc
        {
            get
            {
                return _PropertyDesc;
            }
            set
            {
                OnPropertyDescChanging(value);
                ReportPropertyChanging("PropertyDesc");
                _PropertyDesc = StructuralObject.SetValidValue(value, true, "PropertyDesc");
                ReportPropertyChanged("PropertyDesc");
                OnPropertyDescChanged();
            }
        }
        private global::System.String _PropertyDesc;
        partial void OnPropertyDescChanging(global::System.String value);
        partial void OnPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyListDesc
        {
            get
            {
                return _PropertyListDesc;
            }
            set
            {
                OnPropertyListDescChanging(value);
                ReportPropertyChanging("PropertyListDesc");
                _PropertyListDesc = StructuralObject.SetValidValue(value, true, "PropertyListDesc");
                ReportPropertyChanged("PropertyListDesc");
                OnPropertyListDescChanged();
            }
        }
        private global::System.String _PropertyListDesc;
        partial void OnPropertyListDescChanging(global::System.String value);
        partial void OnPropertyListDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                OnPropertyTypeIdChanging(value);
                ReportPropertyChanging("PropertyTypeId");
                _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                ReportPropertyChanged("PropertyTypeId");
                OnPropertyTypeIdChanged();
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrataCouncilId
        {
            get
            {
                return _StrataCouncilId;
            }
            set
            {
                OnStrataCouncilIdChanging(value);
                ReportPropertyChanging("StrataCouncilId");
                _StrataCouncilId = StructuralObject.SetValidValue(value, "StrataCouncilId");
                ReportPropertyChanged("StrataCouncilId");
                OnStrataCouncilIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StrataCouncilId;
        partial void OnStrataCouncilIdChanging(Nullable<global::System.Int32> value);
        partial void OnStrataCouncilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                OnPropertyAddressIdChanging(value);
                ReportPropertyChanging("PropertyAddressId");
                _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                ReportPropertyChanged("PropertyAddressId");
                OnPropertyAddressIdChanged();
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                OnPropertyFeatureIdChanging(value);
                ReportPropertyChanging("PropertyFeatureId");
                _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                ReportPropertyChanged("PropertyFeatureId");
                OnPropertyFeatureIdChanged();
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                OnPropertyFacilityIdChanging(value);
                ReportPropertyChanging("PropertyFacilityId");
                _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                ReportPropertyChanged("PropertyFacilityId");
                OnPropertyFacilityIdChanged();
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                OnPropertyOwnerIdChanging(value);
                ReportPropertyChanging("PropertyOwnerId");
                _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                ReportPropertyChanged("PropertyOwnerId");
                OnPropertyOwnerIdChanged();
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                OnPropertyManagerIdChanging(value);
                ReportPropertyChanging("PropertyManagerId");
                _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                ReportPropertyChanged("PropertyManagerId");
                OnPropertyManagerIdChanged();
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyImgUrl
        {
            get
            {
                return _PropertyImgUrl;
            }
            set
            {
                OnPropertyImgUrlChanging(value);
                ReportPropertyChanging("PropertyImgUrl");
                _PropertyImgUrl = StructuralObject.SetValidValue(value, true, "PropertyImgUrl");
                ReportPropertyChanged("PropertyImgUrl");
                OnPropertyImgUrlChanged();
            }
        }
        private global::System.String _PropertyImgUrl;
        partial void OnPropertyImgUrlChanging(global::System.String value);
        partial void OnPropertyImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyVideoUrl
        {
            get
            {
                return _PropertyVideoUrl;
            }
            set
            {
                OnPropertyVideoUrlChanging(value);
                ReportPropertyChanging("PropertyVideoUrl");
                _PropertyVideoUrl = StructuralObject.SetValidValue(value, true, "PropertyVideoUrl");
                ReportPropertyChanged("PropertyVideoUrl");
                OnPropertyVideoUrlChanged();
            }
        }
        private global::System.String _PropertyVideoUrl;
        partial void OnPropertyVideoUrlChanging(global::System.String value);
        partial void OnPropertyVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyBuildYear
        {
            get
            {
                return _PropertyBuildYear;
            }
            set
            {
                OnPropertyBuildYearChanging(value);
                ReportPropertyChanging("PropertyBuildYear");
                _PropertyBuildYear = StructuralObject.SetValidValue(value, "PropertyBuildYear");
                ReportPropertyChanged("PropertyBuildYear");
                OnPropertyBuildYearChanged();
            }
        }
        private global::System.Int32 _PropertyBuildYear;
        partial void OnPropertyBuildYearChanging(global::System.Int32 value);
        partial void OnPropertyBuildYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyMgmntlStatusId
        {
            get
            {
                return _PropertyMgmntlStatusId;
            }
            set
            {
                OnPropertyMgmntlStatusIdChanging(value);
                ReportPropertyChanging("PropertyMgmntlStatusId");
                _PropertyMgmntlStatusId = StructuralObject.SetValidValue(value, "PropertyMgmntlStatusId");
                ReportPropertyChanged("PropertyMgmntlStatusId");
                OnPropertyMgmntlStatusIdChanged();
            }
        }
        private global::System.Int32 _PropertyMgmntlStatusId;
        partial void OnPropertyMgmntlStatusIdChanging(global::System.Int32 value);
        partial void OnPropertyMgmntlStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                OnRentalStatusIdChanging(value);
                ReportPropertyChanging("RentalStatusId");
                _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                ReportPropertyChanged("RentalStatusId");
                OnRentalStatusIdChanged();
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Lease_Property", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterLeaseDataModel.FK_Lease_Property", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterLeaseDataModel.FK_Lease_Property", "Lease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Property_PropertyAddress", "PropertyAddress")]
        public PropertyAddress PropertyAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterLeaseDataModel.FK_Property_PropertyAddress", "PropertyAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterLeaseDataModel.FK_Property_PropertyAddress", "PropertyAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyAddress> PropertyAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterLeaseDataModel.FK_Property_PropertyAddress", "PropertyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyAddress>("ProMasterLeaseDataModel.FK_Property_PropertyAddress", "PropertyAddress", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="PropertyAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyAddress object.
        /// </summary>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertySuiteNumber">Initial value of the PropertySuiteNumber property.</param>
        /// <param name="propertyStreet">Initial value of the PropertyStreet property.</param>
        /// <param name="propertyCity">Initial value of the PropertyCity property.</param>
        /// <param name="propertyStateProvince">Initial value of the PropertyStateProvince property.</param>
        /// <param name="propertyCountry">Initial value of the PropertyCountry property.</param>
        /// <param name="propertyZipPostCode">Initial value of the PropertyZipPostCode property.</param>
        public static PropertyAddress CreatePropertyAddress(global::System.Int32 propertyAddressId, global::System.String propertySuiteNumber, global::System.String propertyStreet, global::System.String propertyCity, global::System.String propertyStateProvince, global::System.String propertyCountry, global::System.String propertyZipPostCode)
        {
            PropertyAddress propertyAddress = new PropertyAddress();
            propertyAddress.PropertyAddressId = propertyAddressId;
            propertyAddress.PropertySuiteNumber = propertySuiteNumber;
            propertyAddress.PropertyStreet = propertyStreet;
            propertyAddress.PropertyCity = propertyCity;
            propertyAddress.PropertyStateProvince = propertyStateProvince;
            propertyAddress.PropertyCountry = propertyCountry;
            propertyAddress.PropertyZipPostCode = propertyZipPostCode;
            return propertyAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                if (_PropertyAddressId != value)
                {
                    OnPropertyAddressIdChanging(value);
                    ReportPropertyChanging("PropertyAddressId");
                    _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                    ReportPropertyChanged("PropertyAddressId");
                    OnPropertyAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertySuiteNumber
        {
            get
            {
                return _PropertySuiteNumber;
            }
            set
            {
                OnPropertySuiteNumberChanging(value);
                ReportPropertyChanging("PropertySuiteNumber");
                _PropertySuiteNumber = StructuralObject.SetValidValue(value, false, "PropertySuiteNumber");
                ReportPropertyChanged("PropertySuiteNumber");
                OnPropertySuiteNumberChanged();
            }
        }
        private global::System.String _PropertySuiteNumber;
        partial void OnPropertySuiteNumberChanging(global::System.String value);
        partial void OnPropertySuiteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyNumber
        {
            get
            {
                return _PropertyNumber;
            }
            set
            {
                OnPropertyNumberChanging(value);
                ReportPropertyChanging("PropertyNumber");
                _PropertyNumber = StructuralObject.SetValidValue(value, true, "PropertyNumber");
                ReportPropertyChanged("PropertyNumber");
                OnPropertyNumberChanged();
            }
        }
        private global::System.String _PropertyNumber;
        partial void OnPropertyNumberChanging(global::System.String value);
        partial void OnPropertyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStreet
        {
            get
            {
                return _PropertyStreet;
            }
            set
            {
                OnPropertyStreetChanging(value);
                ReportPropertyChanging("PropertyStreet");
                _PropertyStreet = StructuralObject.SetValidValue(value, false, "PropertyStreet");
                ReportPropertyChanged("PropertyStreet");
                OnPropertyStreetChanged();
            }
        }
        private global::System.String _PropertyStreet;
        partial void OnPropertyStreetChanging(global::System.String value);
        partial void OnPropertyStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCity
        {
            get
            {
                return _PropertyCity;
            }
            set
            {
                OnPropertyCityChanging(value);
                ReportPropertyChanging("PropertyCity");
                _PropertyCity = StructuralObject.SetValidValue(value, false, "PropertyCity");
                ReportPropertyChanged("PropertyCity");
                OnPropertyCityChanged();
            }
        }
        private global::System.String _PropertyCity;
        partial void OnPropertyCityChanging(global::System.String value);
        partial void OnPropertyCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStateProvince
        {
            get
            {
                return _PropertyStateProvince;
            }
            set
            {
                OnPropertyStateProvinceChanging(value);
                ReportPropertyChanging("PropertyStateProvince");
                _PropertyStateProvince = StructuralObject.SetValidValue(value, false, "PropertyStateProvince");
                ReportPropertyChanged("PropertyStateProvince");
                OnPropertyStateProvinceChanged();
            }
        }
        private global::System.String _PropertyStateProvince;
        partial void OnPropertyStateProvinceChanging(global::System.String value);
        partial void OnPropertyStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCountry
        {
            get
            {
                return _PropertyCountry;
            }
            set
            {
                OnPropertyCountryChanging(value);
                ReportPropertyChanging("PropertyCountry");
                _PropertyCountry = StructuralObject.SetValidValue(value, false, "PropertyCountry");
                ReportPropertyChanged("PropertyCountry");
                OnPropertyCountryChanged();
            }
        }
        private global::System.String _PropertyCountry;
        partial void OnPropertyCountryChanging(global::System.String value);
        partial void OnPropertyCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyZipPostCode
        {
            get
            {
                return _PropertyZipPostCode;
            }
            set
            {
                OnPropertyZipPostCodeChanging(value);
                ReportPropertyChanging("PropertyZipPostCode");
                _PropertyZipPostCode = StructuralObject.SetValidValue(value, false, "PropertyZipPostCode");
                ReportPropertyChanged("PropertyZipPostCode");
                OnPropertyZipPostCodeChanged();
            }
        }
        private global::System.String _PropertyZipPostCode;
        partial void OnPropertyZipPostCodeChanging(global::System.String value);
        partial void OnPropertyZipPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLongitudeValue
        {
            get
            {
                return _GPSLongitudeValue;
            }
            set
            {
                OnGPSLongitudeValueChanging(value);
                ReportPropertyChanging("GPSLongitudeValue");
                _GPSLongitudeValue = StructuralObject.SetValidValue(value, true, "GPSLongitudeValue");
                ReportPropertyChanged("GPSLongitudeValue");
                OnGPSLongitudeValueChanged();
            }
        }
        private global::System.String _GPSLongitudeValue;
        partial void OnGPSLongitudeValueChanging(global::System.String value);
        partial void OnGPSLongitudeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLatitudeValue
        {
            get
            {
                return _GPSLatitudeValue;
            }
            set
            {
                OnGPSLatitudeValueChanging(value);
                ReportPropertyChanging("GPSLatitudeValue");
                _GPSLatitudeValue = StructuralObject.SetValidValue(value, true, "GPSLatitudeValue");
                ReportPropertyChanged("GPSLatitudeValue");
                OnGPSLatitudeValueChanged();
            }
        }
        private global::System.String _GPSLatitudeValue;
        partial void OnGPSLatitudeValueChanging(global::System.String value);
        partial void OnGPSLatitudeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_Property_PropertyAddress", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterLeaseDataModel.FK_Property_PropertyAddress", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterLeaseDataModel.FK_Property_PropertyAddress", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="RentDepositTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentDepositTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentDepositTransfer object.
        /// </summary>
        /// <param name="rentDepositTransferId">Initial value of the RentDepositTransferId property.</param>
        /// <param name="rentTransferAmount">Initial value of the RentTransferAmount property.</param>
        /// <param name="rentTransferDate">Initial value of the RentTransferDate property.</param>
        /// <param name="bankId">Initial value of the BankId property.</param>
        /// <param name="rentalPaymentId">Initial value of the RentalPaymentId property.</param>
        public static RentDepositTransfer CreateRentDepositTransfer(global::System.Int32 rentDepositTransferId, global::System.Decimal rentTransferAmount, global::System.DateTime rentTransferDate, global::System.Int32 bankId, global::System.Int32 rentalPaymentId)
        {
            RentDepositTransfer rentDepositTransfer = new RentDepositTransfer();
            rentDepositTransfer.RentDepositTransferId = rentDepositTransferId;
            rentDepositTransfer.RentTransferAmount = rentTransferAmount;
            rentDepositTransfer.RentTransferDate = rentTransferDate;
            rentDepositTransfer.BankId = bankId;
            rentDepositTransfer.RentalPaymentId = rentalPaymentId;
            return rentDepositTransfer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentDepositTransferId
        {
            get
            {
                return _RentDepositTransferId;
            }
            set
            {
                if (_RentDepositTransferId != value)
                {
                    OnRentDepositTransferIdChanging(value);
                    ReportPropertyChanging("RentDepositTransferId");
                    _RentDepositTransferId = StructuralObject.SetValidValue(value, "RentDepositTransferId");
                    ReportPropertyChanged("RentDepositTransferId");
                    OnRentDepositTransferIdChanged();
                }
            }
        }
        private global::System.Int32 _RentDepositTransferId;
        partial void OnRentDepositTransferIdChanging(global::System.Int32 value);
        partial void OnRentDepositTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentTransferAmount
        {
            get
            {
                return _RentTransferAmount;
            }
            set
            {
                OnRentTransferAmountChanging(value);
                ReportPropertyChanging("RentTransferAmount");
                _RentTransferAmount = StructuralObject.SetValidValue(value, "RentTransferAmount");
                ReportPropertyChanged("RentTransferAmount");
                OnRentTransferAmountChanged();
            }
        }
        private global::System.Decimal _RentTransferAmount;
        partial void OnRentTransferAmountChanging(global::System.Decimal value);
        partial void OnRentTransferAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RentTransferDate
        {
            get
            {
                return _RentTransferDate;
            }
            set
            {
                OnRentTransferDateChanging(value);
                ReportPropertyChanging("RentTransferDate");
                _RentTransferDate = StructuralObject.SetValidValue(value, "RentTransferDate");
                ReportPropertyChanged("RentTransferDate");
                OnRentTransferDateChanged();
            }
        }
        private global::System.DateTime _RentTransferDate;
        partial void OnRentTransferDateChanging(global::System.DateTime value);
        partial void OnRentTransferDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BankId
        {
            get
            {
                return _BankId;
            }
            set
            {
                OnBankIdChanging(value);
                ReportPropertyChanging("BankId");
                _BankId = StructuralObject.SetValidValue(value, "BankId");
                ReportPropertyChanged("BankId");
                OnBankIdChanged();
            }
        }
        private global::System.Int32 _BankId;
        partial void OnBankIdChanging(global::System.Int32 value);
        partial void OnBankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalPaymentId
        {
            get
            {
                return _RentalPaymentId;
            }
            set
            {
                OnRentalPaymentIdChanging(value);
                ReportPropertyChanging("RentalPaymentId");
                _RentalPaymentId = StructuralObject.SetValidValue(value, "RentalPaymentId");
                ReportPropertyChanged("RentalPaymentId");
                OnRentalPaymentIdChanged();
            }
        }
        private global::System.Int32 _RentalPaymentId;
        partial void OnRentalPaymentIdChanging(global::System.Int32 value);
        partial void OnRentalPaymentIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentDepositTransfer_RentPayment", "RentPayment")]
        public RentPayment RentPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentDepositTransfer_RentPayment", "RentPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentDepositTransfer_RentPayment", "RentPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentPayment> RentPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentDepositTransfer_RentPayment", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentDepositTransfer_RentPayment", "RentPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="RentPayment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentPayment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentPayment object.
        /// </summary>
        /// <param name="rentPaymentId">Initial value of the RentPaymentId property.</param>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="rentIsPaidOntime">Initial value of the RentIsPaidOntime property.</param>
        /// <param name="rentPaymentDate">Initial value of the RentPaymentDate property.</param>
        /// <param name="rentPaymentMonth">Initial value of the RentPaymentMonth property.</param>
        /// <param name="rentPaymentYear">Initial value of the RentPaymentYear property.</param>
        /// <param name="rentPaidAmount">Initial value of the RentPaidAmount property.</param>
        /// <param name="numberOfLatePayment">Initial value of the NumberOfLatePayment property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        /// <param name="rentPaymentMethodId">Initial value of the RentPaymentMethodId property.</param>
        /// <param name="isCollectedInPerson">Initial value of the IsCollectedInPerson property.</param>
        /// <param name="isDepositForOwner">Initial value of the IsDepositForOwner property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        public static RentPayment CreateRentPayment(global::System.Int32 rentPaymentId, global::System.Int32 tenantId, global::System.Boolean rentIsPaidOntime, global::System.DateTime rentPaymentDate, global::System.String rentPaymentMonth, global::System.String rentPaymentYear, global::System.Decimal rentPaidAmount, global::System.Int32 numberOfLatePayment, global::System.Decimal balance, global::System.Int32 rentPaymentMethodId, global::System.Boolean isCollectedInPerson, global::System.Boolean isDepositForOwner, global::System.DateTime creationDate)
        {
            RentPayment rentPayment = new RentPayment();
            rentPayment.RentPaymentId = rentPaymentId;
            rentPayment.TenantId = tenantId;
            rentPayment.RentIsPaidOntime = rentIsPaidOntime;
            rentPayment.RentPaymentDate = rentPaymentDate;
            rentPayment.RentPaymentMonth = rentPaymentMonth;
            rentPayment.RentPaymentYear = rentPaymentYear;
            rentPayment.RentPaidAmount = rentPaidAmount;
            rentPayment.NumberOfLatePayment = numberOfLatePayment;
            rentPayment.Balance = balance;
            rentPayment.RentPaymentMethodId = rentPaymentMethodId;
            rentPayment.IsCollectedInPerson = isCollectedInPerson;
            rentPayment.IsDepositForOwner = isDepositForOwner;
            rentPayment.CreationDate = creationDate;
            return rentPayment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentId
        {
            get
            {
                return _RentPaymentId;
            }
            set
            {
                if (_RentPaymentId != value)
                {
                    OnRentPaymentIdChanging(value);
                    ReportPropertyChanging("RentPaymentId");
                    _RentPaymentId = StructuralObject.SetValidValue(value, "RentPaymentId");
                    ReportPropertyChanged("RentPaymentId");
                    OnRentPaymentIdChanged();
                }
            }
        }
        private global::System.Int32 _RentPaymentId;
        partial void OnRentPaymentIdChanging(global::System.Int32 value);
        partial void OnRentPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                OnTenantIdChanging(value);
                ReportPropertyChanging("TenantId");
                _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                ReportPropertyChanged("TenantId");
                OnTenantIdChanged();
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RentIsPaidOntime
        {
            get
            {
                return _RentIsPaidOntime;
            }
            set
            {
                OnRentIsPaidOntimeChanging(value);
                ReportPropertyChanging("RentIsPaidOntime");
                _RentIsPaidOntime = StructuralObject.SetValidValue(value, "RentIsPaidOntime");
                ReportPropertyChanged("RentIsPaidOntime");
                OnRentIsPaidOntimeChanged();
            }
        }
        private global::System.Boolean _RentIsPaidOntime;
        partial void OnRentIsPaidOntimeChanging(global::System.Boolean value);
        partial void OnRentIsPaidOntimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RentPaymentDate
        {
            get
            {
                return _RentPaymentDate;
            }
            set
            {
                OnRentPaymentDateChanging(value);
                ReportPropertyChanging("RentPaymentDate");
                _RentPaymentDate = StructuralObject.SetValidValue(value, "RentPaymentDate");
                ReportPropertyChanged("RentPaymentDate");
                OnRentPaymentDateChanged();
            }
        }
        private global::System.DateTime _RentPaymentDate;
        partial void OnRentPaymentDateChanging(global::System.DateTime value);
        partial void OnRentPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentMonth
        {
            get
            {
                return _RentPaymentMonth;
            }
            set
            {
                OnRentPaymentMonthChanging(value);
                ReportPropertyChanging("RentPaymentMonth");
                _RentPaymentMonth = StructuralObject.SetValidValue(value, false, "RentPaymentMonth");
                ReportPropertyChanged("RentPaymentMonth");
                OnRentPaymentMonthChanged();
            }
        }
        private global::System.String _RentPaymentMonth;
        partial void OnRentPaymentMonthChanging(global::System.String value);
        partial void OnRentPaymentMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentYear
        {
            get
            {
                return _RentPaymentYear;
            }
            set
            {
                OnRentPaymentYearChanging(value);
                ReportPropertyChanging("RentPaymentYear");
                _RentPaymentYear = StructuralObject.SetValidValue(value, false, "RentPaymentYear");
                ReportPropertyChanged("RentPaymentYear");
                OnRentPaymentYearChanged();
            }
        }
        private global::System.String _RentPaymentYear;
        partial void OnRentPaymentYearChanging(global::System.String value);
        partial void OnRentPaymentYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentPaidAmount
        {
            get
            {
                return _RentPaidAmount;
            }
            set
            {
                OnRentPaidAmountChanging(value);
                ReportPropertyChanging("RentPaidAmount");
                _RentPaidAmount = StructuralObject.SetValidValue(value, "RentPaidAmount");
                ReportPropertyChanged("RentPaidAmount");
                OnRentPaidAmountChanged();
            }
        }
        private global::System.Decimal _RentPaidAmount;
        partial void OnRentPaidAmountChanging(global::System.Decimal value);
        partial void OnRentPaidAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfLatePayment
        {
            get
            {
                return _NumberOfLatePayment;
            }
            set
            {
                OnNumberOfLatePaymentChanging(value);
                ReportPropertyChanging("NumberOfLatePayment");
                _NumberOfLatePayment = StructuralObject.SetValidValue(value, "NumberOfLatePayment");
                ReportPropertyChanged("NumberOfLatePayment");
                OnNumberOfLatePaymentChanged();
            }
        }
        private global::System.Int32 _NumberOfLatePayment;
        partial void OnNumberOfLatePaymentChanging(global::System.Int32 value);
        partial void OnNumberOfLatePaymentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value, "Balance");
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentMethodId
        {
            get
            {
                return _RentPaymentMethodId;
            }
            set
            {
                OnRentPaymentMethodIdChanging(value);
                ReportPropertyChanging("RentPaymentMethodId");
                _RentPaymentMethodId = StructuralObject.SetValidValue(value, "RentPaymentMethodId");
                ReportPropertyChanged("RentPaymentMethodId");
                OnRentPaymentMethodIdChanged();
            }
        }
        private global::System.Int32 _RentPaymentMethodId;
        partial void OnRentPaymentMethodIdChanging(global::System.Int32 value);
        partial void OnRentPaymentMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCollectedInPerson
        {
            get
            {
                return _IsCollectedInPerson;
            }
            set
            {
                OnIsCollectedInPersonChanging(value);
                ReportPropertyChanging("IsCollectedInPerson");
                _IsCollectedInPerson = StructuralObject.SetValidValue(value, "IsCollectedInPerson");
                ReportPropertyChanged("IsCollectedInPerson");
                OnIsCollectedInPersonChanged();
            }
        }
        private global::System.Boolean _IsCollectedInPerson;
        partial void OnIsCollectedInPersonChanging(global::System.Boolean value);
        partial void OnIsCollectedInPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDepositForOwner
        {
            get
            {
                return _IsDepositForOwner;
            }
            set
            {
                OnIsDepositForOwnerChanging(value);
                ReportPropertyChanging("IsDepositForOwner");
                _IsDepositForOwner = StructuralObject.SetValidValue(value, "IsDepositForOwner");
                ReportPropertyChanged("IsDepositForOwner");
                OnIsDepositForOwnerChanged();
            }
        }
        private global::System.Boolean _IsDepositForOwner;
        partial void OnIsDepositForOwnerChanging(global::System.Boolean value);
        partial void OnIsDepositForOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentPayment_RentPaymentMethod", "RentPaymentMethod")]
        public RentPaymentMethod RentPaymentMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPaymentMethod>("ProMasterLeaseDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPaymentMethod>("ProMasterLeaseDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentPaymentMethod> RentPaymentMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPaymentMethod>("ProMasterLeaseDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentPaymentMethod>("ProMasterLeaseDataModel.FK_RentPayment_RentPaymentMethod", "RentPaymentMethod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentPayment_Tenant", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterLeaseDataModel.FK_RentPayment_Tenant", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterLeaseDataModel.FK_RentPayment_Tenant", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProMasterLeaseDataModel.FK_RentPayment_Tenant", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProMasterLeaseDataModel.FK_RentPayment_Tenant", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentDepositTransfer_RentPayment", "RentDepositTransfer")]
        public EntityCollection<RentDepositTransfer> RentDepositTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentDepositTransfer>("ProMasterLeaseDataModel.FK_RentDepositTransfer_RentPayment", "RentDepositTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentDepositTransfer>("ProMasterLeaseDataModel.FK_RentDepositTransfer_RentPayment", "RentDepositTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentRecipt_RentPayment", "RentRecipt")]
        public EntityCollection<RentRecipt> RentRecipts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentRecipt>("ProMasterLeaseDataModel.FK_RentRecipt_RentPayment", "RentRecipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentRecipt>("ProMasterLeaseDataModel.FK_RentRecipt_RentPayment", "RentRecipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="RentPaymentMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentPaymentMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentPaymentMethod object.
        /// </summary>
        /// <param name="rentPaymentMethodId">Initial value of the RentPaymentMethodId property.</param>
        /// <param name="rentPaymentMethod1">Initial value of the RentPaymentMethod1 property.</param>
        public static RentPaymentMethod CreateRentPaymentMethod(global::System.Int32 rentPaymentMethodId, global::System.String rentPaymentMethod1)
        {
            RentPaymentMethod rentPaymentMethod = new RentPaymentMethod();
            rentPaymentMethod.RentPaymentMethodId = rentPaymentMethodId;
            rentPaymentMethod.RentPaymentMethod1 = rentPaymentMethod1;
            return rentPaymentMethod;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentMethodId
        {
            get
            {
                return _RentPaymentMethodId;
            }
            set
            {
                if (_RentPaymentMethodId != value)
                {
                    OnRentPaymentMethodIdChanging(value);
                    ReportPropertyChanging("RentPaymentMethodId");
                    _RentPaymentMethodId = StructuralObject.SetValidValue(value, "RentPaymentMethodId");
                    ReportPropertyChanged("RentPaymentMethodId");
                    OnRentPaymentMethodIdChanged();
                }
            }
        }
        private global::System.Int32 _RentPaymentMethodId;
        partial void OnRentPaymentMethodIdChanging(global::System.Int32 value);
        partial void OnRentPaymentMethodIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentPaymentMethod1
        {
            get
            {
                return _RentPaymentMethod1;
            }
            set
            {
                OnRentPaymentMethod1Changing(value);
                ReportPropertyChanging("RentPaymentMethod1");
                _RentPaymentMethod1 = StructuralObject.SetValidValue(value, false, "RentPaymentMethod1");
                ReportPropertyChanged("RentPaymentMethod1");
                OnRentPaymentMethod1Changed();
            }
        }
        private global::System.String _RentPaymentMethod1;
        partial void OnRentPaymentMethod1Changing(global::System.String value);
        partial void OnRentPaymentMethod1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentPayment_RentPaymentMethod", "RentPayment")]
        public EntityCollection<RentPayment> RentPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentPayment>("ProMasterLeaseDataModel.FK_RentPayment_RentPaymentMethod", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentPayment>("ProMasterLeaseDataModel.FK_RentPayment_RentPaymentMethod", "RentPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="RentRecipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentRecipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentRecipt object.
        /// </summary>
        /// <param name="rentReciptId">Initial value of the RentReciptId property.</param>
        /// <param name="rentPaymentId">Initial value of the RentPaymentId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static RentRecipt CreateRentRecipt(global::System.Int32 rentReciptId, global::System.Int32 rentPaymentId, global::System.DateTime createDate)
        {
            RentRecipt rentRecipt = new RentRecipt();
            rentRecipt.RentReciptId = rentReciptId;
            rentRecipt.RentPaymentId = rentPaymentId;
            rentRecipt.CreateDate = createDate;
            return rentRecipt;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentReciptId
        {
            get
            {
                return _RentReciptId;
            }
            set
            {
                if (_RentReciptId != value)
                {
                    OnRentReciptIdChanging(value);
                    ReportPropertyChanging("RentReciptId");
                    _RentReciptId = StructuralObject.SetValidValue(value, "RentReciptId");
                    ReportPropertyChanged("RentReciptId");
                    OnRentReciptIdChanged();
                }
            }
        }
        private global::System.Int32 _RentReciptId;
        partial void OnRentReciptIdChanging(global::System.Int32 value);
        partial void OnRentReciptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentPaymentId
        {
            get
            {
                return _RentPaymentId;
            }
            set
            {
                OnRentPaymentIdChanging(value);
                ReportPropertyChanging("RentPaymentId");
                _RentPaymentId = StructuralObject.SetValidValue(value, "RentPaymentId");
                ReportPropertyChanged("RentPaymentId");
                OnRentPaymentIdChanged();
            }
        }
        private global::System.Int32 _RentPaymentId;
        partial void OnRentPaymentIdChanging(global::System.Int32 value);
        partial void OnRentPaymentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReciptDocUrl
        {
            get
            {
                return _ReciptDocUrl;
            }
            set
            {
                OnReciptDocUrlChanging(value);
                ReportPropertyChanging("ReciptDocUrl");
                _ReciptDocUrl = StructuralObject.SetValidValue(value, true, "ReciptDocUrl");
                ReportPropertyChanged("ReciptDocUrl");
                OnReciptDocUrlChanged();
            }
        }
        private global::System.String _ReciptDocUrl;
        partial void OnReciptDocUrlChanging(global::System.String value);
        partial void OnReciptDocUrlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentRecipt_RentPayment", "RentPayment")]
        public RentPayment RentPayment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentRecipt_RentPayment", "RentPayment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentRecipt_RentPayment", "RentPayment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentPayment> RentPaymentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentRecipt_RentPayment", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentPayment>("ProMasterLeaseDataModel.FK_RentRecipt_RentPayment", "RentPayment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterLeaseDataModel", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="managedBy">Initial value of the ManagedBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Tenant CreateTenant(global::System.Int32 tenantId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Int32 leaseId, global::System.Int32 roleId, global::System.Boolean isActive, global::System.String managedBy, global::System.DateTime createDate, global::System.DateTime updateDate)
        {
            Tenant tenant = new Tenant();
            tenant.TenantId = tenantId;
            tenant.UserName = userName;
            tenant.FirstName = firstName;
            tenant.LastName = lastName;
            tenant.ContactEmail = contactEmail;
            tenant.ContactTelephone1 = contactTelephone1;
            tenant.OnlineAccessEnbaled = onlineAccessEnbaled;
            tenant.UserAvartaImgUrl = userAvartaImgUrl;
            tenant.LeaseId = leaseId;
            tenant.RoleId = roleId;
            tenant.IsActive = isActive;
            tenant.ManagedBy = managedBy;
            tenant.CreateDate = createDate;
            tenant.UpdateDate = updateDate;
            return tenant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                if (_TenantId != value)
                {
                    OnTenantIdChanging(value);
                    ReportPropertyChanging("TenantId");
                    _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                    ReportPropertyChanged("TenantId");
                    OnTenantIdChanged();
                }
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagedBy
        {
            get
            {
                return _ManagedBy;
            }
            set
            {
                OnManagedByChanging(value);
                ReportPropertyChanging("ManagedBy");
                _ManagedBy = StructuralObject.SetValidValue(value, false, "ManagedBy");
                ReportPropertyChanged("ManagedBy");
                OnManagedByChanged();
            }
        }
        private global::System.String _ManagedBy;
        partial void OnManagedByChanging(global::System.String value);
        partial void OnManagedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterLeaseDataModel", "FK_RentPayment_Tenant", "RentPayment")]
        public EntityCollection<RentPayment> RentPayments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RentPayment>("ProMasterLeaseDataModel.FK_RentPayment_Tenant", "RentPayment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RentPayment>("ProMasterLeaseDataModel.FK_RentPayment_Tenant", "RentPayment", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
