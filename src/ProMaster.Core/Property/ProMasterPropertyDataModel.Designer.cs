//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.DocumentPrincipalType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Document_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.DocumentType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Document), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Event_EventType", "EventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.EventType), "ManagementEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.ManagementEvent), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Lease_LeaseTerm", "LeaseTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.LeaseTerm), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.WorkOrderCategory), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.WorkOrderStatu), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_Vendor", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Vendor), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Message_MessageType", "MessageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.MessageType), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Message), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_MessageReply_Message", "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Message), "MessageReply", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.MessageReply), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Lease_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "Lease", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Lease), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Event_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "ManagementEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.ManagementEvent), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Message_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Message), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyAddress", "PropertyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.PropertyAddress), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyFacility", "PropertyFacility", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.PropertyFacility), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyFeature", "PropertyFeature", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.PropertyFeature), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyManager", "PropertyManager", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.PropertyManager), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyOwner", "PropertyOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.PropertyOwner), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyType", "PropertyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.PropertyType), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_Property_RentalStatus", "RentalStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.RentalStatu), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.Property), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_PropertyList_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "PropertyList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.PropertyList), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_PropertyListingPicture_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "PropertyListingPicture", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.PropertyListingPicture), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_TenancyApplication_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "TenancyApplication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.TenancyApplication), true)]
[assembly: EdmRelationshipAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Property.Property), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Property.WorkOrder), true)]

#endregion

namespace ProMaster.Core.Property
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProMasterPropertyDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProMasterPropertyDataEntities object using the connection string found in the 'ProMasterPropertyDataEntities' section of the application configuration file.
        /// </summary>
        public ProMasterPropertyDataEntities() : base("name=ProMasterPropertyDataEntities", "ProMasterPropertyDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterPropertyDataEntities object.
        /// </summary>
        public ProMasterPropertyDataEntities(string connectionString) : base(connectionString, "ProMasterPropertyDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProMasterPropertyDataEntities object.
        /// </summary>
        public ProMasterPropertyDataEntities(EntityConnection connection) : base(connection, "ProMasterPropertyDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyAddress> PropertyAddresses
        {
            get
            {
                if ((_PropertyAddresses == null))
                {
                    _PropertyAddresses = base.CreateObjectSet<PropertyAddress>("PropertyAddresses");
                }
                return _PropertyAddresses;
            }
        }
        private ObjectSet<PropertyAddress> _PropertyAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyManager> PropertyManagers
        {
            get
            {
                if ((_PropertyManagers == null))
                {
                    _PropertyManagers = base.CreateObjectSet<PropertyManager>("PropertyManagers");
                }
                return _PropertyManagers;
            }
        }
        private ObjectSet<PropertyManager> _PropertyManagers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyOwner> PropertyOwners
        {
            get
            {
                if ((_PropertyOwners == null))
                {
                    _PropertyOwners = base.CreateObjectSet<PropertyOwner>("PropertyOwners");
                }
                return _PropertyOwners;
            }
        }
        private ObjectSet<PropertyOwner> _PropertyOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyType> PropertyTypes
        {
            get
            {
                if ((_PropertyTypes == null))
                {
                    _PropertyTypes = base.CreateObjectSet<PropertyType>("PropertyTypes");
                }
                return _PropertyTypes;
            }
        }
        private ObjectSet<PropertyType> _PropertyTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyFacility> PropertyFacilities
        {
            get
            {
                if ((_PropertyFacilities == null))
                {
                    _PropertyFacilities = base.CreateObjectSet<PropertyFacility>("PropertyFacilities");
                }
                return _PropertyFacilities;
            }
        }
        private ObjectSet<PropertyFacility> _PropertyFacilities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RentalStatu> RentalStatus
        {
            get
            {
                if ((_RentalStatus == null))
                {
                    _RentalStatus = base.CreateObjectSet<RentalStatu>("RentalStatus");
                }
                return _RentalStatus;
            }
        }
        private ObjectSet<RentalStatu> _RentalStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyFeature> PropertyFeatures
        {
            get
            {
                if ((_PropertyFeatures == null))
                {
                    _PropertyFeatures = base.CreateObjectSet<PropertyFeature>("PropertyFeatures");
                }
                return _PropertyFeatures;
            }
        }
        private ObjectSet<PropertyFeature> _PropertyFeatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TenancyApplication> TenancyApplications
        {
            get
            {
                if ((_TenancyApplications == null))
                {
                    _TenancyApplications = base.CreateObjectSet<TenancyApplication>("TenancyApplications");
                }
                return _TenancyApplications;
            }
        }
        private ObjectSet<TenancyApplication> _TenancyApplications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyList> PropertyLists
        {
            get
            {
                if ((_PropertyLists == null))
                {
                    _PropertyLists = base.CreateObjectSet<PropertyList>("PropertyLists");
                }
                return _PropertyLists;
            }
        }
        private ObjectSet<PropertyList> _PropertyLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentPrincipalType> DocumentPrincipalTypes
        {
            get
            {
                if ((_DocumentPrincipalTypes == null))
                {
                    _DocumentPrincipalTypes = base.CreateObjectSet<DocumentPrincipalType>("DocumentPrincipalTypes");
                }
                return _DocumentPrincipalTypes;
            }
        }
        private ObjectSet<DocumentPrincipalType> _DocumentPrincipalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventType> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventType>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventType> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderStatu> WorkOrderStatus
        {
            get
            {
                if ((_WorkOrderStatus == null))
                {
                    _WorkOrderStatus = base.CreateObjectSet<WorkOrderStatu>("WorkOrderStatus");
                }
                return _WorkOrderStatus;
            }
        }
        private ObjectSet<WorkOrderStatu> _WorkOrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementEvent> ManagementEvents
        {
            get
            {
                if ((_ManagementEvents == null))
                {
                    _ManagementEvents = base.CreateObjectSet<ManagementEvent>("ManagementEvents");
                }
                return _ManagementEvents;
            }
        }
        private ObjectSet<ManagementEvent> _ManagementEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeaseTerm> LeaseTerms
        {
            get
            {
                if ((_LeaseTerms == null))
                {
                    _LeaseTerms = base.CreateObjectSet<LeaseTerm>("LeaseTerms");
                }
                return _LeaseTerms;
            }
        }
        private ObjectSet<LeaseTerm> _LeaseTerms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> Tenants
        {
            get
            {
                if ((_Tenants == null))
                {
                    _Tenants = base.CreateObjectSet<Tenant>("Tenants");
                }
                return _Tenants;
            }
        }
        private ObjectSet<Tenant> _Tenants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lease> Leases
        {
            get
            {
                if ((_Leases == null))
                {
                    _Leases = base.CreateObjectSet<Lease>("Leases");
                }
                return _Leases;
            }
        }
        private ObjectSet<Lease> _Leases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderCategory> WorkOrderCategories
        {
            get
            {
                if ((_WorkOrderCategories == null))
                {
                    _WorkOrderCategories = base.CreateObjectSet<WorkOrderCategory>("WorkOrderCategories");
                }
                return _WorkOrderCategories;
            }
        }
        private ObjectSet<WorkOrderCategory> _WorkOrderCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrder> WorkOrders
        {
            get
            {
                if ((_WorkOrders == null))
                {
                    _WorkOrders = base.CreateObjectSet<WorkOrder>("WorkOrders");
                }
                return _WorkOrders;
            }
        }
        private ObjectSet<WorkOrder> _WorkOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Calendar> Calendars
        {
            get
            {
                if ((_Calendars == null))
                {
                    _Calendars = base.CreateObjectSet<Calendar>("Calendars");
                }
                return _Calendars;
            }
        }
        private ObjectSet<Calendar> _Calendars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageReply> MessageReplies
        {
            get
            {
                if ((_MessageReplies == null))
                {
                    _MessageReplies = base.CreateObjectSet<MessageReply>("MessageReplies");
                }
                return _MessageReplies;
            }
        }
        private ObjectSet<MessageReply> _MessageReplies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageType> MessageTypes
        {
            get
            {
                if ((_MessageTypes == null))
                {
                    _MessageTypes = base.CreateObjectSet<MessageType>("MessageTypes");
                }
                return _MessageTypes;
            }
        }
        private ObjectSet<MessageType> _MessageTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyListingPicture> PropertyListingPictures
        {
            get
            {
                if ((_PropertyListingPictures == null))
                {
                    _PropertyListingPictures = base.CreateObjectSet<PropertyListingPicture>("PropertyListingPictures");
                }
                return _PropertyListingPictures;
            }
        }
        private ObjectSet<PropertyListingPicture> _PropertyListingPictures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyAddresses(PropertyAddress propertyAddress)
        {
            base.AddObject("PropertyAddresses", propertyAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyManagers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyManagers(PropertyManager propertyManager)
        {
            base.AddObject("PropertyManagers", propertyManager);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyOwners(PropertyOwner propertyOwner)
        {
            base.AddObject("PropertyOwners", propertyOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyTypes(PropertyType propertyType)
        {
            base.AddObject("PropertyTypes", propertyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyFacilities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyFacilities(PropertyFacility propertyFacility)
        {
            base.AddObject("PropertyFacilities", propertyFacility);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RentalStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRentalStatus(RentalStatu rentalStatu)
        {
            base.AddObject("RentalStatus", rentalStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyFeatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyFeatures(PropertyFeature propertyFeature)
        {
            base.AddObject("PropertyFeatures", propertyFeature);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TenancyApplications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenancyApplications(TenancyApplication tenancyApplication)
        {
            base.AddObject("TenancyApplications", tenancyApplication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyLists(PropertyList propertyList)
        {
            base.AddObject("PropertyLists", propertyList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentPrincipalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentPrincipalTypes(DocumentPrincipalType documentPrincipalType)
        {
            base.AddObject("DocumentPrincipalTypes", documentPrincipalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventType eventType)
        {
            base.AddObject("EventTypes", eventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderStatus(WorkOrderStatu workOrderStatu)
        {
            base.AddObject("WorkOrderStatus", workOrderStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementEvents(ManagementEvent managementEvent)
        {
            base.AddObject("ManagementEvents", managementEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeaseTerms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeaseTerms(LeaseTerm leaseTerm)
        {
            base.AddObject("LeaseTerms", leaseTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tenants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenants(Tenant tenant)
        {
            base.AddObject("Tenants", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeases(Lease lease)
        {
            base.AddObject("Leases", lease);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderCategories(WorkOrderCategory workOrderCategory)
        {
            base.AddObject("WorkOrderCategories", workOrderCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrders(WorkOrder workOrder)
        {
            base.AddObject("WorkOrders", workOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Calendars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCalendars(Calendar calendar)
        {
            base.AddObject("Calendars", calendar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageReplies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageReplies(MessageReply messageReply)
        {
            base.AddObject("MessageReplies", messageReply);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageTypes(MessageType messageType)
        {
            base.AddObject("MessageTypes", messageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyListingPictures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyListingPictures(PropertyListingPicture propertyListingPicture)
        {
            base.AddObject("PropertyListingPictures", propertyListingPicture);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Calendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Calendar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Calendar object.
        /// </summary>
        /// <param name="calendarId">Initial value of the CalendarId property.</param>
        /// <param name="calendarTitle">Initial value of the CalendarTitle property.</param>
        /// <param name="eventStart">Initial value of the EventStart property.</param>
        /// <param name="eventEnd">Initial value of the EventEnd property.</param>
        /// <param name="isAllDay">Initial value of the IsAllDay property.</param>
        /// <param name="pmId">Initial value of the PmId property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Calendar CreateCalendar(global::System.Int32 calendarId, global::System.String calendarTitle, global::System.String eventStart, global::System.String eventEnd, global::System.Boolean isAllDay, global::System.Int32 pmId, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            Calendar calendar = new Calendar();
            calendar.CalendarId = calendarId;
            calendar.CalendarTitle = calendarTitle;
            calendar.EventStart = eventStart;
            calendar.EventEnd = eventEnd;
            calendar.IsAllDay = isAllDay;
            calendar.PmId = pmId;
            calendar.CreationDate = creationDate;
            calendar.UpdateDate = updateDate;
            return calendar;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarId
        {
            get
            {
                return _CalendarId;
            }
            set
            {
                if (_CalendarId != value)
                {
                    OnCalendarIdChanging(value);
                    ReportPropertyChanging("CalendarId");
                    _CalendarId = StructuralObject.SetValidValue(value, "CalendarId");
                    ReportPropertyChanged("CalendarId");
                    OnCalendarIdChanged();
                }
            }
        }
        private global::System.Int32 _CalendarId;
        partial void OnCalendarIdChanging(global::System.Int32 value);
        partial void OnCalendarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CalendarTitle
        {
            get
            {
                return _CalendarTitle;
            }
            set
            {
                OnCalendarTitleChanging(value);
                ReportPropertyChanging("CalendarTitle");
                _CalendarTitle = StructuralObject.SetValidValue(value, false, "CalendarTitle");
                ReportPropertyChanged("CalendarTitle");
                OnCalendarTitleChanged();
            }
        }
        private global::System.String _CalendarTitle;
        partial void OnCalendarTitleChanging(global::System.String value);
        partial void OnCalendarTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalendarDesc
        {
            get
            {
                return _CalendarDesc;
            }
            set
            {
                OnCalendarDescChanging(value);
                ReportPropertyChanging("CalendarDesc");
                _CalendarDesc = StructuralObject.SetValidValue(value, true, "CalendarDesc");
                ReportPropertyChanged("CalendarDesc");
                OnCalendarDescChanged();
            }
        }
        private global::System.String _CalendarDesc;
        partial void OnCalendarDescChanging(global::System.String value);
        partial void OnCalendarDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventStart
        {
            get
            {
                return _EventStart;
            }
            set
            {
                OnEventStartChanging(value);
                ReportPropertyChanging("EventStart");
                _EventStart = StructuralObject.SetValidValue(value, false, "EventStart");
                ReportPropertyChanged("EventStart");
                OnEventStartChanged();
            }
        }
        private global::System.String _EventStart;
        partial void OnEventStartChanging(global::System.String value);
        partial void OnEventStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventEnd
        {
            get
            {
                return _EventEnd;
            }
            set
            {
                OnEventEndChanging(value);
                ReportPropertyChanging("EventEnd");
                _EventEnd = StructuralObject.SetValidValue(value, false, "EventEnd");
                ReportPropertyChanged("EventEnd");
                OnEventEndChanged();
            }
        }
        private global::System.String _EventEnd;
        partial void OnEventEndChanging(global::System.String value);
        partial void OnEventEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAllDay
        {
            get
            {
                return _IsAllDay;
            }
            set
            {
                OnIsAllDayChanging(value);
                ReportPropertyChanging("IsAllDay");
                _IsAllDay = StructuralObject.SetValidValue(value, "IsAllDay");
                ReportPropertyChanged("IsAllDay");
                OnIsAllDayChanged();
            }
        }
        private global::System.Boolean _IsAllDay;
        partial void OnIsAllDayChanging(global::System.Boolean value);
        partial void OnIsAllDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EventImgUrl
        {
            get
            {
                return _EventImgUrl;
            }
            set
            {
                OnEventImgUrlChanging(value);
                ReportPropertyChanging("EventImgUrl");
                _EventImgUrl = StructuralObject.SetValidValue(value, true, "EventImgUrl");
                ReportPropertyChanged("EventImgUrl");
                OnEventImgUrlChanged();
            }
        }
        private global::System.String _EventImgUrl;
        partial void OnEventImgUrlChanging(global::System.String value);
        partial void OnEventImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PmId
        {
            get
            {
                return _PmId;
            }
            set
            {
                OnPmIdChanging(value);
                ReportPropertyChanging("PmId");
                _PmId = StructuralObject.SetValidValue(value, "PmId");
                ReportPropertyChanged("PmId");
                OnPmIdChanged();
            }
        }
        private global::System.Int32 _PmId;
        partial void OnPmIdChanging(global::System.Int32 value);
        partial void OnPmIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="dcoumentDetails">Initial value of the DcoumentDetails property.</param>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalId">Initial value of the DocumentPrincipalId property.</param>
        /// <param name="documentUrl">Initial value of the DocumentUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.Int32 documentTypeId, global::System.String documentName, global::System.String dcoumentDetails, global::System.Int32 documentPrincipalTypeId, global::System.Int32 documentPrincipalId, global::System.String documentUrl, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.DocumentTypeId = documentTypeId;
            document.DocumentName = documentName;
            document.DcoumentDetails = dcoumentDetails;
            document.DocumentPrincipalTypeId = documentPrincipalTypeId;
            document.DocumentPrincipalId = documentPrincipalId;
            document.DocumentUrl = documentUrl;
            document.CreationDate = creationDate;
            document.UpdateDate = updateDate;
            document.IsActive = isActive;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value, "DocumentId");
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DcoumentDetails
        {
            get
            {
                return _DcoumentDetails;
            }
            set
            {
                OnDcoumentDetailsChanging(value);
                ReportPropertyChanging("DcoumentDetails");
                _DcoumentDetails = StructuralObject.SetValidValue(value, false, "DcoumentDetails");
                ReportPropertyChanged("DcoumentDetails");
                OnDcoumentDetailsChanged();
            }
        }
        private global::System.String _DcoumentDetails;
        partial void OnDcoumentDetailsChanging(global::System.String value);
        partial void OnDcoumentDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                OnDocumentPrincipalTypeIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalTypeId");
                _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                ReportPropertyChanged("DocumentPrincipalTypeId");
                OnDocumentPrincipalTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalId
        {
            get
            {
                return _DocumentPrincipalId;
            }
            set
            {
                OnDocumentPrincipalIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalId");
                _DocumentPrincipalId = StructuralObject.SetValidValue(value, "DocumentPrincipalId");
                ReportPropertyChanged("DocumentPrincipalId");
                OnDocumentPrincipalIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalId;
        partial void OnDocumentPrincipalIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentUrl
        {
            get
            {
                return _DocumentUrl;
            }
            set
            {
                OnDocumentUrlChanging(value);
                ReportPropertyChanging("DocumentUrl");
                _DocumentUrl = StructuralObject.SetValidValue(value, false, "DocumentUrl");
                ReportPropertyChanged("DocumentUrl");
                OnDocumentUrlChanged();
            }
        }
        private global::System.String _DocumentUrl;
        partial void OnDocumentUrlChanging(global::System.String value);
        partial void OnDocumentUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType")]
        public DocumentPrincipalType DocumentPrincipalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterPropertyDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterPropertyDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentPrincipalType> DocumentPrincipalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("ProMasterPropertyDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentPrincipalType>("ProMasterPropertyDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Document_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterPropertyDataModel.FK_Document_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterPropertyDataModel.FK_Document_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("ProMasterPropertyDataModel.FK_Document_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("ProMasterPropertyDataModel.FK_Document_DocumentType", "DocumentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="DocumentPrincipalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentPrincipalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentPrincipalType object.
        /// </summary>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalType1">Initial value of the DocumentPrincipalType1 property.</param>
        public static DocumentPrincipalType CreateDocumentPrincipalType(global::System.Int32 documentPrincipalTypeId, global::System.String documentPrincipalType1)
        {
            DocumentPrincipalType documentPrincipalType = new DocumentPrincipalType();
            documentPrincipalType.DocumentPrincipalTypeId = documentPrincipalTypeId;
            documentPrincipalType.DocumentPrincipalType1 = documentPrincipalType1;
            return documentPrincipalType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                if (_DocumentPrincipalTypeId != value)
                {
                    OnDocumentPrincipalTypeIdChanging(value);
                    ReportPropertyChanging("DocumentPrincipalTypeId");
                    _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                    ReportPropertyChanged("DocumentPrincipalTypeId");
                    OnDocumentPrincipalTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentPrincipalType1
        {
            get
            {
                return _DocumentPrincipalType1;
            }
            set
            {
                OnDocumentPrincipalType1Changing(value);
                ReportPropertyChanging("DocumentPrincipalType1");
                _DocumentPrincipalType1 = StructuralObject.SetValidValue(value, false, "DocumentPrincipalType1");
                ReportPropertyChanged("DocumentPrincipalType1");
                OnDocumentPrincipalType1Changed();
            }
        }
        private global::System.String _DocumentPrincipalType1;
        partial void OnDocumentPrincipalType1Changing(global::System.String value);
        partial void OnDocumentPrincipalType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Document_DocumentPrincipalType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterPropertyDataModel.FK_Document_DocumentPrincipalType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterPropertyDataModel.FK_Document_DocumentPrincipalType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentType1">Initial value of the DocumentType1 property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeId, global::System.String documentType1)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeId = documentTypeId;
            documentType.DocumentType1 = documentType1;
            return documentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                if (_DocumentTypeId != value)
                {
                    OnDocumentTypeIdChanging(value);
                    ReportPropertyChanging("DocumentTypeId");
                    _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                    ReportPropertyChanged("DocumentTypeId");
                    OnDocumentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType1
        {
            get
            {
                return _DocumentType1;
            }
            set
            {
                OnDocumentType1Changing(value);
                ReportPropertyChanging("DocumentType1");
                _DocumentType1 = StructuralObject.SetValidValue(value, false, "DocumentType1");
                ReportPropertyChanged("DocumentType1");
                OnDocumentType1Changed();
            }
        }
        private global::System.String _DocumentType1;
        partial void OnDocumentType1Changing(global::System.String value);
        partial void OnDocumentType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Document_DocumentType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("ProMasterPropertyDataModel.FK_Document_DocumentType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("ProMasterPropertyDataModel.FK_Document_DocumentType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="EventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventType object.
        /// </summary>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="eventType1">Initial value of the EventType1 property.</param>
        public static EventType CreateEventType(global::System.Int32 eventTypeId, global::System.String eventType1)
        {
            EventType eventType = new EventType();
            eventType.EventTypeId = eventTypeId;
            eventType.EventType1 = eventType1;
            return eventType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                if (_EventTypeId != value)
                {
                    OnEventTypeIdChanging(value);
                    ReportPropertyChanging("EventTypeId");
                    _EventTypeId = StructuralObject.SetValidValue(value, "EventTypeId");
                    ReportPropertyChanged("EventTypeId");
                    OnEventTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventType1
        {
            get
            {
                return _EventType1;
            }
            set
            {
                OnEventType1Changing(value);
                ReportPropertyChanging("EventType1");
                _EventType1 = StructuralObject.SetValidValue(value, false, "EventType1");
                ReportPropertyChanged("EventType1");
                OnEventType1Changed();
            }
        }
        private global::System.String _EventType1;
        partial void OnEventType1Changing(global::System.String value);
        partial void OnEventType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Event_EventType", "ManagementEvent")]
        public EntityCollection<ManagementEvent> ManagementEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementEvent>("ProMasterPropertyDataModel.FK_Event_EventType", "ManagementEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementEvent>("ProMasterPropertyDataModel.FK_Event_EventType", "ManagementEvent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Lease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lease : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lease object.
        /// </summary>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="leaseTitle">Initial value of the LeaseTitle property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="leaseStartDate">Initial value of the LeaseStartDate property.</param>
        /// <param name="leaseEndDate">Initial value of the LeaseEndDate property.</param>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="rentFrequency">Initial value of the RentFrequency property.</param>
        /// <param name="rentAmount">Initial value of the RentAmount property.</param>
        /// <param name="rentDueOn">Initial value of the RentDueOn property.</param>
        /// <param name="damageDepositAmount">Initial value of the DamageDepositAmount property.</param>
        /// <param name="leaseSignDate">Initial value of the LeaseSignDate property.</param>
        /// <param name="addendum">Initial value of the Addendum property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Lease CreateLease(global::System.Int32 leaseId, global::System.String leaseTitle, global::System.Int32 propertyId, global::System.DateTime leaseStartDate, global::System.DateTime leaseEndDate, global::System.Int32 leaseTermId, global::System.String rentFrequency, global::System.Decimal rentAmount, global::System.String rentDueOn, global::System.Decimal damageDepositAmount, global::System.DateTime leaseSignDate, global::System.Boolean addendum, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Boolean isActive)
        {
            Lease lease = new Lease();
            lease.LeaseId = leaseId;
            lease.LeaseTitle = leaseTitle;
            lease.PropertyId = propertyId;
            lease.LeaseStartDate = leaseStartDate;
            lease.LeaseEndDate = leaseEndDate;
            lease.LeaseTermId = leaseTermId;
            lease.RentFrequency = rentFrequency;
            lease.RentAmount = rentAmount;
            lease.RentDueOn = rentDueOn;
            lease.DamageDepositAmount = damageDepositAmount;
            lease.LeaseSignDate = leaseSignDate;
            lease.Addendum = addendum;
            lease.CreationDate = creationDate;
            lease.UpdateDate = updateDate;
            lease.IsActive = isActive;
            return lease;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                if (_LeaseId != value)
                {
                    OnLeaseIdChanging(value);
                    ReportPropertyChanging("LeaseId");
                    _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                    ReportPropertyChanged("LeaseId");
                    OnLeaseIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaseTitle
        {
            get
            {
                return _LeaseTitle;
            }
            set
            {
                OnLeaseTitleChanging(value);
                ReportPropertyChanging("LeaseTitle");
                _LeaseTitle = StructuralObject.SetValidValue(value, false, "LeaseTitle");
                ReportPropertyChanged("LeaseTitle");
                OnLeaseTitleChanged();
            }
        }
        private global::System.String _LeaseTitle;
        partial void OnLeaseTitleChanging(global::System.String value);
        partial void OnLeaseTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseDesc
        {
            get
            {
                return _LeaseDesc;
            }
            set
            {
                OnLeaseDescChanging(value);
                ReportPropertyChanging("LeaseDesc");
                _LeaseDesc = StructuralObject.SetValidValue(value, true, "LeaseDesc");
                ReportPropertyChanged("LeaseDesc");
                OnLeaseDescChanged();
            }
        }
        private global::System.String _LeaseDesc;
        partial void OnLeaseDescChanging(global::System.String value);
        partial void OnLeaseDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseStartDate
        {
            get
            {
                return _LeaseStartDate;
            }
            set
            {
                OnLeaseStartDateChanging(value);
                ReportPropertyChanging("LeaseStartDate");
                _LeaseStartDate = StructuralObject.SetValidValue(value, "LeaseStartDate");
                ReportPropertyChanged("LeaseStartDate");
                OnLeaseStartDateChanged();
            }
        }
        private global::System.DateTime _LeaseStartDate;
        partial void OnLeaseStartDateChanging(global::System.DateTime value);
        partial void OnLeaseStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseEndDate
        {
            get
            {
                return _LeaseEndDate;
            }
            set
            {
                OnLeaseEndDateChanging(value);
                ReportPropertyChanging("LeaseEndDate");
                _LeaseEndDate = StructuralObject.SetValidValue(value, "LeaseEndDate");
                ReportPropertyChanged("LeaseEndDate");
                OnLeaseEndDateChanged();
            }
        }
        private global::System.DateTime _LeaseEndDate;
        partial void OnLeaseEndDateChanging(global::System.DateTime value);
        partial void OnLeaseEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                OnLeaseTermIdChanging(value);
                ReportPropertyChanging("LeaseTermId");
                _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                ReportPropertyChanged("LeaseTermId");
                OnLeaseTermIdChanged();
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentFrequency
        {
            get
            {
                return _RentFrequency;
            }
            set
            {
                OnRentFrequencyChanging(value);
                ReportPropertyChanging("RentFrequency");
                _RentFrequency = StructuralObject.SetValidValue(value, false, "RentFrequency");
                ReportPropertyChanged("RentFrequency");
                OnRentFrequencyChanged();
            }
        }
        private global::System.String _RentFrequency;
        partial void OnRentFrequencyChanging(global::System.String value);
        partial void OnRentFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal RentAmount
        {
            get
            {
                return _RentAmount;
            }
            set
            {
                OnRentAmountChanging(value);
                ReportPropertyChanging("RentAmount");
                _RentAmount = StructuralObject.SetValidValue(value, "RentAmount");
                ReportPropertyChanged("RentAmount");
                OnRentAmountChanged();
            }
        }
        private global::System.Decimal _RentAmount;
        partial void OnRentAmountChanging(global::System.Decimal value);
        partial void OnRentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RentDueOn
        {
            get
            {
                return _RentDueOn;
            }
            set
            {
                OnRentDueOnChanging(value);
                ReportPropertyChanging("RentDueOn");
                _RentDueOn = StructuralObject.SetValidValue(value, false, "RentDueOn");
                ReportPropertyChanged("RentDueOn");
                OnRentDueOnChanged();
            }
        }
        private global::System.String _RentDueOn;
        partial void OnRentDueOnChanging(global::System.String value);
        partial void OnRentDueOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DamageDepositAmount
        {
            get
            {
                return _DamageDepositAmount;
            }
            set
            {
                OnDamageDepositAmountChanging(value);
                ReportPropertyChanging("DamageDepositAmount");
                _DamageDepositAmount = StructuralObject.SetValidValue(value, "DamageDepositAmount");
                ReportPropertyChanged("DamageDepositAmount");
                OnDamageDepositAmountChanged();
            }
        }
        private global::System.Decimal _DamageDepositAmount;
        partial void OnDamageDepositAmountChanging(global::System.Decimal value);
        partial void OnDamageDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PetDepositAmount
        {
            get
            {
                return _PetDepositAmount;
            }
            set
            {
                OnPetDepositAmountChanging(value);
                ReportPropertyChanging("PetDepositAmount");
                _PetDepositAmount = StructuralObject.SetValidValue(value, "PetDepositAmount");
                ReportPropertyChanged("PetDepositAmount");
                OnPetDepositAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PetDepositAmount;
        partial void OnPetDepositAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPetDepositAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaseSignDate
        {
            get
            {
                return _LeaseSignDate;
            }
            set
            {
                OnLeaseSignDateChanging(value);
                ReportPropertyChanging("LeaseSignDate");
                _LeaseSignDate = StructuralObject.SetValidValue(value, "LeaseSignDate");
                ReportPropertyChanged("LeaseSignDate");
                OnLeaseSignDateChanged();
            }
        }
        private global::System.DateTime _LeaseSignDate;
        partial void OnLeaseSignDateChanging(global::System.DateTime value);
        partial void OnLeaseSignDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeaseAgreementDocUrl
        {
            get
            {
                return _LeaseAgreementDocUrl;
            }
            set
            {
                OnLeaseAgreementDocUrlChanging(value);
                ReportPropertyChanging("LeaseAgreementDocUrl");
                _LeaseAgreementDocUrl = StructuralObject.SetValidValue(value, true, "LeaseAgreementDocUrl");
                ReportPropertyChanged("LeaseAgreementDocUrl");
                OnLeaseAgreementDocUrlChanged();
            }
        }
        private global::System.String _LeaseAgreementDocUrl;
        partial void OnLeaseAgreementDocUrlChanging(global::System.String value);
        partial void OnLeaseAgreementDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Addendum
        {
            get
            {
                return _Addendum;
            }
            set
            {
                OnAddendumChanging(value);
                ReportPropertyChanging("Addendum");
                _Addendum = StructuralObject.SetValidValue(value, "Addendum");
                ReportPropertyChanged("Addendum");
                OnAddendumChanged();
            }
        }
        private global::System.Boolean _Addendum;
        partial void OnAddendumChanging(global::System.Boolean value);
        partial void OnAddendumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Lease_LeaseTerm", "LeaseTerm")]
        public LeaseTerm LeaseTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterPropertyDataModel.FK_Lease_LeaseTerm", "LeaseTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterPropertyDataModel.FK_Lease_LeaseTerm", "LeaseTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LeaseTerm> LeaseTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LeaseTerm>("ProMasterPropertyDataModel.FK_Lease_LeaseTerm", "LeaseTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LeaseTerm>("ProMasterPropertyDataModel.FK_Lease_LeaseTerm", "LeaseTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Lease_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Lease_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Lease_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Lease_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_Lease_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="LeaseTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeaseTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeaseTerm object.
        /// </summary>
        /// <param name="leaseTermId">Initial value of the LeaseTermId property.</param>
        /// <param name="leaaseTerm">Initial value of the LeaaseTerm property.</param>
        public static LeaseTerm CreateLeaseTerm(global::System.Int32 leaseTermId, global::System.String leaaseTerm)
        {
            LeaseTerm leaseTerm = new LeaseTerm();
            leaseTerm.LeaseTermId = leaseTermId;
            leaseTerm.LeaaseTerm = leaaseTerm;
            return leaseTerm;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseTermId
        {
            get
            {
                return _LeaseTermId;
            }
            set
            {
                if (_LeaseTermId != value)
                {
                    OnLeaseTermIdChanging(value);
                    ReportPropertyChanging("LeaseTermId");
                    _LeaseTermId = StructuralObject.SetValidValue(value, "LeaseTermId");
                    ReportPropertyChanged("LeaseTermId");
                    OnLeaseTermIdChanged();
                }
            }
        }
        private global::System.Int32 _LeaseTermId;
        partial void OnLeaseTermIdChanging(global::System.Int32 value);
        partial void OnLeaseTermIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeaaseTerm
        {
            get
            {
                return _LeaaseTerm;
            }
            set
            {
                OnLeaaseTermChanging(value);
                ReportPropertyChanging("LeaaseTerm");
                _LeaaseTerm = StructuralObject.SetValidValue(value, false, "LeaaseTerm");
                ReportPropertyChanged("LeaaseTerm");
                OnLeaaseTermChanged();
            }
        }
        private global::System.String _LeaaseTerm;
        partial void OnLeaaseTermChanging(global::System.String value);
        partial void OnLeaaseTermChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Lease_LeaseTerm", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterPropertyDataModel.FK_Lease_LeaseTerm", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterPropertyDataModel.FK_Lease_LeaseTerm", "Lease", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="ManagementEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementEvent object.
        /// </summary>
        /// <param name="eventId">Initial value of the EventId property.</param>
        /// <param name="eventName">Initial value of the EventName property.</param>
        /// <param name="eventDetails">Initial value of the EventDetails property.</param>
        /// <param name="eventDate">Initial value of the EventDate property.</param>
        /// <param name="eventTypeId">Initial value of the EventTypeId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="mileageIncurred">Initial value of the MileageIncurred property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="timeSpent">Initial value of the TimeSpent property.</param>
        public static ManagementEvent CreateManagementEvent(global::System.Int32 eventId, global::System.String eventName, global::System.String eventDetails, global::System.DateTime eventDate, global::System.Int32 eventTypeId, global::System.Int32 propertyId, global::System.Decimal mileageIncurred, global::System.DateTime creationDate, global::System.Decimal timeSpent)
        {
            ManagementEvent managementEvent = new ManagementEvent();
            managementEvent.EventId = eventId;
            managementEvent.EventName = eventName;
            managementEvent.EventDetails = eventDetails;
            managementEvent.EventDate = eventDate;
            managementEvent.EventTypeId = eventTypeId;
            managementEvent.PropertyId = propertyId;
            managementEvent.MileageIncurred = mileageIncurred;
            managementEvent.CreationDate = creationDate;
            managementEvent.TimeSpent = timeSpent;
            return managementEvent;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                if (_EventId != value)
                {
                    OnEventIdChanging(value);
                    ReportPropertyChanging("EventId");
                    _EventId = StructuralObject.SetValidValue(value, "EventId");
                    ReportPropertyChanged("EventId");
                    OnEventIdChanged();
                }
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventName
        {
            get
            {
                return _EventName;
            }
            set
            {
                OnEventNameChanging(value);
                ReportPropertyChanging("EventName");
                _EventName = StructuralObject.SetValidValue(value, false, "EventName");
                ReportPropertyChanged("EventName");
                OnEventNameChanged();
            }
        }
        private global::System.String _EventName;
        partial void OnEventNameChanging(global::System.String value);
        partial void OnEventNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EventDetails
        {
            get
            {
                return _EventDetails;
            }
            set
            {
                OnEventDetailsChanging(value);
                ReportPropertyChanging("EventDetails");
                _EventDetails = StructuralObject.SetValidValue(value, false, "EventDetails");
                ReportPropertyChanged("EventDetails");
                OnEventDetailsChanged();
            }
        }
        private global::System.String _EventDetails;
        partial void OnEventDetailsChanging(global::System.String value);
        partial void OnEventDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EventDate
        {
            get
            {
                return _EventDate;
            }
            set
            {
                OnEventDateChanging(value);
                ReportPropertyChanging("EventDate");
                _EventDate = StructuralObject.SetValidValue(value, "EventDate");
                ReportPropertyChanged("EventDate");
                OnEventDateChanged();
            }
        }
        private global::System.DateTime _EventDate;
        partial void OnEventDateChanging(global::System.DateTime value);
        partial void OnEventDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventTypeId
        {
            get
            {
                return _EventTypeId;
            }
            set
            {
                OnEventTypeIdChanging(value);
                ReportPropertyChanging("EventTypeId");
                _EventTypeId = StructuralObject.SetValidValue(value, "EventTypeId");
                ReportPropertyChanged("EventTypeId");
                OnEventTypeIdChanged();
            }
        }
        private global::System.Int32 _EventTypeId;
        partial void OnEventTypeIdChanging(global::System.Int32 value);
        partial void OnEventTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MileageIncurred
        {
            get
            {
                return _MileageIncurred;
            }
            set
            {
                OnMileageIncurredChanging(value);
                ReportPropertyChanging("MileageIncurred");
                _MileageIncurred = StructuralObject.SetValidValue(value, "MileageIncurred");
                ReportPropertyChanged("MileageIncurred");
                OnMileageIncurredChanged();
            }
        }
        private global::System.Decimal _MileageIncurred;
        partial void OnMileageIncurredChanging(global::System.Decimal value);
        partial void OnMileageIncurredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TimeSpent
        {
            get
            {
                return _TimeSpent;
            }
            set
            {
                OnTimeSpentChanging(value);
                ReportPropertyChanging("TimeSpent");
                _TimeSpent = StructuralObject.SetValidValue(value, "TimeSpent");
                ReportPropertyChanged("TimeSpent");
                OnTimeSpentChanged();
            }
        }
        private global::System.Decimal _TimeSpent;
        partial void OnTimeSpentChanging(global::System.Decimal value);
        partial void OnTimeSpentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Event_EventType", "EventType")]
        public EventType EventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("ProMasterPropertyDataModel.FK_Event_EventType", "EventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("ProMasterPropertyDataModel.FK_Event_EventType", "EventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventType> EventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventType>("ProMasterPropertyDataModel.FK_Event_EventType", "EventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventType>("ProMasterPropertyDataModel.FK_Event_EventType", "EventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Event_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Event_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Event_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Event_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_Event_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="sentByUserName">Initial value of the SentByUserName property.</param>
        /// <param name="toUserName">Initial value of the ToUserName property.</param>
        /// <param name="messageSubject">Initial value of the MessageSubject property.</param>
        /// <param name="messageTypeId">Initial value of the MessageTypeId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="sentDate">Initial value of the SentDate property.</param>
        public static Message CreateMessage(global::System.Int32 messageId, global::System.String sentByUserName, global::System.String toUserName, global::System.String messageSubject, global::System.Int32 messageTypeId, global::System.Int32 propertyId, global::System.DateTime sentDate)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.SentByUserName = sentByUserName;
            message.ToUserName = toUserName;
            message.MessageSubject = messageSubject;
            message.MessageTypeId = messageTypeId;
            message.PropertyId = propertyId;
            message.SentDate = sentDate;
            return message;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value, "MessageId");
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SentByUserName
        {
            get
            {
                return _SentByUserName;
            }
            set
            {
                OnSentByUserNameChanging(value);
                ReportPropertyChanging("SentByUserName");
                _SentByUserName = StructuralObject.SetValidValue(value, false, "SentByUserName");
                ReportPropertyChanged("SentByUserName");
                OnSentByUserNameChanged();
            }
        }
        private global::System.String _SentByUserName;
        partial void OnSentByUserNameChanging(global::System.String value);
        partial void OnSentByUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToUserName
        {
            get
            {
                return _ToUserName;
            }
            set
            {
                OnToUserNameChanging(value);
                ReportPropertyChanging("ToUserName");
                _ToUserName = StructuralObject.SetValidValue(value, false, "ToUserName");
                ReportPropertyChanged("ToUserName");
                OnToUserNameChanged();
            }
        }
        private global::System.String _ToUserName;
        partial void OnToUserNameChanging(global::System.String value);
        partial void OnToUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageSubject
        {
            get
            {
                return _MessageSubject;
            }
            set
            {
                OnMessageSubjectChanging(value);
                ReportPropertyChanging("MessageSubject");
                _MessageSubject = StructuralObject.SetValidValue(value, false, "MessageSubject");
                ReportPropertyChanged("MessageSubject");
                OnMessageSubjectChanged();
            }
        }
        private global::System.String _MessageSubject;
        partial void OnMessageSubjectChanging(global::System.String value);
        partial void OnMessageSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageBody
        {
            get
            {
                return _MessageBody;
            }
            set
            {
                OnMessageBodyChanging(value);
                ReportPropertyChanging("MessageBody");
                _MessageBody = StructuralObject.SetValidValue(value, true, "MessageBody");
                ReportPropertyChanged("MessageBody");
                OnMessageBodyChanged();
            }
        }
        private global::System.String _MessageBody;
        partial void OnMessageBodyChanging(global::System.String value);
        partial void OnMessageBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageTypeId
        {
            get
            {
                return _MessageTypeId;
            }
            set
            {
                OnMessageTypeIdChanging(value);
                ReportPropertyChanging("MessageTypeId");
                _MessageTypeId = StructuralObject.SetValidValue(value, "MessageTypeId");
                ReportPropertyChanged("MessageTypeId");
                OnMessageTypeIdChanged();
            }
        }
        private global::System.Int32 _MessageTypeId;
        partial void OnMessageTypeIdChanging(global::System.Int32 value);
        partial void OnMessageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ToAllTenants
        {
            get
            {
                return _ToAllTenants;
            }
            set
            {
                OnToAllTenantsChanging(value);
                ReportPropertyChanging("ToAllTenants");
                _ToAllTenants = StructuralObject.SetValidValue(value, "ToAllTenants");
                ReportPropertyChanged("ToAllTenants");
                OnToAllTenantsChanged();
            }
        }
        private Nullable<global::System.Boolean> _ToAllTenants;
        partial void OnToAllTenantsChanging(Nullable<global::System.Boolean> value);
        partial void OnToAllTenantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ToAllLandlords
        {
            get
            {
                return _ToAllLandlords;
            }
            set
            {
                OnToAllLandlordsChanging(value);
                ReportPropertyChanging("ToAllLandlords");
                _ToAllLandlords = StructuralObject.SetValidValue(value, "ToAllLandlords");
                ReportPropertyChanged("ToAllLandlords");
                OnToAllLandlordsChanged();
            }
        }
        private Nullable<global::System.Boolean> _ToAllLandlords;
        partial void OnToAllLandlordsChanging(Nullable<global::System.Boolean> value);
        partial void OnToAllLandlordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> MessageReadStatus
        {
            get
            {
                return _MessageReadStatus;
            }
            set
            {
                OnMessageReadStatusChanging(value);
                ReportPropertyChanging("MessageReadStatus");
                _MessageReadStatus = StructuralObject.SetValidValue(value, "MessageReadStatus");
                ReportPropertyChanged("MessageReadStatus");
                OnMessageReadStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _MessageReadStatus;
        partial void OnMessageReadStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnMessageReadStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SentDate
        {
            get
            {
                return _SentDate;
            }
            set
            {
                OnSentDateChanging(value);
                ReportPropertyChanging("SentDate");
                _SentDate = StructuralObject.SetValidValue(value, "SentDate");
                ReportPropertyChanged("SentDate");
                OnSentDateChanged();
            }
        }
        private global::System.DateTime _SentDate;
        partial void OnSentDateChanging(global::System.DateTime value);
        partial void OnSentDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Message_MessageType", "MessageType")]
        public MessageType MessageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("ProMasterPropertyDataModel.FK_Message_MessageType", "MessageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("ProMasterPropertyDataModel.FK_Message_MessageType", "MessageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageType> MessageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageType>("ProMasterPropertyDataModel.FK_Message_MessageType", "MessageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageType>("ProMasterPropertyDataModel.FK_Message_MessageType", "MessageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_MessageReply_Message", "MessageReply")]
        public EntityCollection<MessageReply> MessageReplies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageReply>("ProMasterPropertyDataModel.FK_MessageReply_Message", "MessageReply");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageReply>("ProMasterPropertyDataModel.FK_MessageReply_Message", "MessageReply", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Message_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Message_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Message_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_Message_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_Message_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="MessageReply")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageReply : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageReply object.
        /// </summary>
        /// <param name="messageReplyId">Initial value of the MessageReplyId property.</param>
        /// <param name="messageReplySubject">Initial value of the MessageReplySubject property.</param>
        /// <param name="messageReplyDate">Initial value of the MessageReplyDate property.</param>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        public static MessageReply CreateMessageReply(global::System.Int32 messageReplyId, global::System.String messageReplySubject, global::System.DateTime messageReplyDate, global::System.Int32 messageId)
        {
            MessageReply messageReply = new MessageReply();
            messageReply.MessageReplyId = messageReplyId;
            messageReply.MessageReplySubject = messageReplySubject;
            messageReply.MessageReplyDate = messageReplyDate;
            messageReply.MessageId = messageId;
            return messageReply;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageReplyId
        {
            get
            {
                return _MessageReplyId;
            }
            set
            {
                if (_MessageReplyId != value)
                {
                    OnMessageReplyIdChanging(value);
                    ReportPropertyChanging("MessageReplyId");
                    _MessageReplyId = StructuralObject.SetValidValue(value, "MessageReplyId");
                    ReportPropertyChanged("MessageReplyId");
                    OnMessageReplyIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageReplyId;
        partial void OnMessageReplyIdChanging(global::System.Int32 value);
        partial void OnMessageReplyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageReplySubject
        {
            get
            {
                return _MessageReplySubject;
            }
            set
            {
                OnMessageReplySubjectChanging(value);
                ReportPropertyChanging("MessageReplySubject");
                _MessageReplySubject = StructuralObject.SetValidValue(value, false, "MessageReplySubject");
                ReportPropertyChanged("MessageReplySubject");
                OnMessageReplySubjectChanged();
            }
        }
        private global::System.String _MessageReplySubject;
        partial void OnMessageReplySubjectChanging(global::System.String value);
        partial void OnMessageReplySubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageReplyBody
        {
            get
            {
                return _MessageReplyBody;
            }
            set
            {
                OnMessageReplyBodyChanging(value);
                ReportPropertyChanging("MessageReplyBody");
                _MessageReplyBody = StructuralObject.SetValidValue(value, true, "MessageReplyBody");
                ReportPropertyChanged("MessageReplyBody");
                OnMessageReplyBodyChanged();
            }
        }
        private global::System.String _MessageReplyBody;
        partial void OnMessageReplyBodyChanging(global::System.String value);
        partial void OnMessageReplyBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessageReplyDate
        {
            get
            {
                return _MessageReplyDate;
            }
            set
            {
                OnMessageReplyDateChanging(value);
                ReportPropertyChanging("MessageReplyDate");
                _MessageReplyDate = StructuralObject.SetValidValue(value, "MessageReplyDate");
                ReportPropertyChanged("MessageReplyDate");
                OnMessageReplyDateChanged();
            }
        }
        private global::System.DateTime _MessageReplyDate;
        partial void OnMessageReplyDateChanging(global::System.DateTime value);
        partial void OnMessageReplyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                OnMessageIdChanging(value);
                ReportPropertyChanging("MessageId");
                _MessageId = StructuralObject.SetValidValue(value, "MessageId");
                ReportPropertyChanged("MessageId");
                OnMessageIdChanged();
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_MessageReply_Message", "Message")]
        public Message Message
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("ProMasterPropertyDataModel.FK_MessageReply_Message", "Message").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("ProMasterPropertyDataModel.FK_MessageReply_Message", "Message").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Message> MessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Message>("ProMasterPropertyDataModel.FK_MessageReply_Message", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Message>("ProMasterPropertyDataModel.FK_MessageReply_Message", "Message", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="MessageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageType object.
        /// </summary>
        /// <param name="messageTypeId">Initial value of the MessageTypeId property.</param>
        /// <param name="messageType1">Initial value of the MessageType1 property.</param>
        public static MessageType CreateMessageType(global::System.Int32 messageTypeId, global::System.String messageType1)
        {
            MessageType messageType = new MessageType();
            messageType.MessageTypeId = messageTypeId;
            messageType.MessageType1 = messageType1;
            return messageType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageTypeId
        {
            get
            {
                return _MessageTypeId;
            }
            set
            {
                if (_MessageTypeId != value)
                {
                    OnMessageTypeIdChanging(value);
                    ReportPropertyChanging("MessageTypeId");
                    _MessageTypeId = StructuralObject.SetValidValue(value, "MessageTypeId");
                    ReportPropertyChanged("MessageTypeId");
                    OnMessageTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageTypeId;
        partial void OnMessageTypeIdChanging(global::System.Int32 value);
        partial void OnMessageTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageType1
        {
            get
            {
                return _MessageType1;
            }
            set
            {
                OnMessageType1Changing(value);
                ReportPropertyChanging("MessageType1");
                _MessageType1 = StructuralObject.SetValidValue(value, false, "MessageType1");
                ReportPropertyChanged("MessageType1");
                OnMessageType1Changed();
            }
        }
        private global::System.String _MessageType1;
        partial void OnMessageType1Changing(global::System.String value);
        partial void OnMessageType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Message_MessageType", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ProMasterPropertyDataModel.FK_Message_MessageType", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ProMasterPropertyDataModel.FK_Message_MessageType", "Message", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="propertyBuildYear">Initial value of the PropertyBuildYear property.</param>
        /// <param name="propertyMgmntlStatusId">Initial value of the PropertyMgmntlStatusId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Property CreateProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.Int32 propertyTypeId, global::System.Int32 propertyAddressId, global::System.Int32 propertyFeatureId, global::System.Int32 propertyFacilityId, global::System.Int32 propertyOwnerId, global::System.Int32 propertyManagerId, global::System.Int32 propertyBuildYear, global::System.Int32 propertyMgmntlStatusId, global::System.Boolean isActive, global::System.Boolean isShared, global::System.Int32 rentalStatusId, global::System.DateTime createdDate, global::System.DateTime updateDate)
        {
            Property property = new Property();
            property.PropertyId = propertyId;
            property.PropertyName = propertyName;
            property.PropertyTypeId = propertyTypeId;
            property.PropertyAddressId = propertyAddressId;
            property.PropertyFeatureId = propertyFeatureId;
            property.PropertyFacilityId = propertyFacilityId;
            property.PropertyOwnerId = propertyOwnerId;
            property.PropertyManagerId = propertyManagerId;
            property.PropertyBuildYear = propertyBuildYear;
            property.PropertyMgmntlStatusId = propertyMgmntlStatusId;
            property.IsActive = isActive;
            property.IsShared = isShared;
            property.RentalStatusId = rentalStatusId;
            property.CreatedDate = createdDate;
            property.UpdateDate = updateDate;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDesc
        {
            get
            {
                return _PropertyDesc;
            }
            set
            {
                OnPropertyDescChanging(value);
                ReportPropertyChanging("PropertyDesc");
                _PropertyDesc = StructuralObject.SetValidValue(value, true, "PropertyDesc");
                ReportPropertyChanged("PropertyDesc");
                OnPropertyDescChanged();
            }
        }
        private global::System.String _PropertyDesc;
        partial void OnPropertyDescChanging(global::System.String value);
        partial void OnPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyListDesc
        {
            get
            {
                return _PropertyListDesc;
            }
            set
            {
                OnPropertyListDescChanging(value);
                ReportPropertyChanging("PropertyListDesc");
                _PropertyListDesc = StructuralObject.SetValidValue(value, true, "PropertyListDesc");
                ReportPropertyChanged("PropertyListDesc");
                OnPropertyListDescChanged();
            }
        }
        private global::System.String _PropertyListDesc;
        partial void OnPropertyListDescChanging(global::System.String value);
        partial void OnPropertyListDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                OnPropertyTypeIdChanging(value);
                ReportPropertyChanging("PropertyTypeId");
                _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                ReportPropertyChanged("PropertyTypeId");
                OnPropertyTypeIdChanged();
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrataCouncilId
        {
            get
            {
                return _StrataCouncilId;
            }
            set
            {
                OnStrataCouncilIdChanging(value);
                ReportPropertyChanging("StrataCouncilId");
                _StrataCouncilId = StructuralObject.SetValidValue(value, "StrataCouncilId");
                ReportPropertyChanged("StrataCouncilId");
                OnStrataCouncilIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StrataCouncilId;
        partial void OnStrataCouncilIdChanging(Nullable<global::System.Int32> value);
        partial void OnStrataCouncilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                OnPropertyAddressIdChanging(value);
                ReportPropertyChanging("PropertyAddressId");
                _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                ReportPropertyChanged("PropertyAddressId");
                OnPropertyAddressIdChanged();
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                OnPropertyFeatureIdChanging(value);
                ReportPropertyChanging("PropertyFeatureId");
                _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                ReportPropertyChanged("PropertyFeatureId");
                OnPropertyFeatureIdChanged();
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                OnPropertyFacilityIdChanging(value);
                ReportPropertyChanging("PropertyFacilityId");
                _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                ReportPropertyChanged("PropertyFacilityId");
                OnPropertyFacilityIdChanged();
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                OnPropertyOwnerIdChanging(value);
                ReportPropertyChanging("PropertyOwnerId");
                _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                ReportPropertyChanged("PropertyOwnerId");
                OnPropertyOwnerIdChanged();
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                OnPropertyManagerIdChanging(value);
                ReportPropertyChanging("PropertyManagerId");
                _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                ReportPropertyChanged("PropertyManagerId");
                OnPropertyManagerIdChanged();
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyImgUrl
        {
            get
            {
                return _PropertyImgUrl;
            }
            set
            {
                OnPropertyImgUrlChanging(value);
                ReportPropertyChanging("PropertyImgUrl");
                _PropertyImgUrl = StructuralObject.SetValidValue(value, true, "PropertyImgUrl");
                ReportPropertyChanged("PropertyImgUrl");
                OnPropertyImgUrlChanged();
            }
        }
        private global::System.String _PropertyImgUrl;
        partial void OnPropertyImgUrlChanging(global::System.String value);
        partial void OnPropertyImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyVideoUrl
        {
            get
            {
                return _PropertyVideoUrl;
            }
            set
            {
                OnPropertyVideoUrlChanging(value);
                ReportPropertyChanging("PropertyVideoUrl");
                _PropertyVideoUrl = StructuralObject.SetValidValue(value, true, "PropertyVideoUrl");
                ReportPropertyChanged("PropertyVideoUrl");
                OnPropertyVideoUrlChanged();
            }
        }
        private global::System.String _PropertyVideoUrl;
        partial void OnPropertyVideoUrlChanging(global::System.String value);
        partial void OnPropertyVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyBuildYear
        {
            get
            {
                return _PropertyBuildYear;
            }
            set
            {
                OnPropertyBuildYearChanging(value);
                ReportPropertyChanging("PropertyBuildYear");
                _PropertyBuildYear = StructuralObject.SetValidValue(value, "PropertyBuildYear");
                ReportPropertyChanged("PropertyBuildYear");
                OnPropertyBuildYearChanged();
            }
        }
        private global::System.Int32 _PropertyBuildYear;
        partial void OnPropertyBuildYearChanging(global::System.Int32 value);
        partial void OnPropertyBuildYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyMgmntlStatusId
        {
            get
            {
                return _PropertyMgmntlStatusId;
            }
            set
            {
                OnPropertyMgmntlStatusIdChanging(value);
                ReportPropertyChanging("PropertyMgmntlStatusId");
                _PropertyMgmntlStatusId = StructuralObject.SetValidValue(value, "PropertyMgmntlStatusId");
                ReportPropertyChanged("PropertyMgmntlStatusId");
                OnPropertyMgmntlStatusIdChanged();
            }
        }
        private global::System.Int32 _PropertyMgmntlStatusId;
        partial void OnPropertyMgmntlStatusIdChanging(global::System.Int32 value);
        partial void OnPropertyMgmntlStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                OnRentalStatusIdChanging(value);
                ReportPropertyChanging("RentalStatusId");
                _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                ReportPropertyChanged("RentalStatusId");
                OnRentalStatusIdChanged();
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Lease_Property", "Lease")]
        public EntityCollection<Lease> Leases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lease>("ProMasterPropertyDataModel.FK_Lease_Property", "Lease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lease>("ProMasterPropertyDataModel.FK_Lease_Property", "Lease", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Event_Property", "ManagementEvent")]
        public EntityCollection<ManagementEvent> ManagementEvents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementEvent>("ProMasterPropertyDataModel.FK_Event_Property", "ManagementEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementEvent>("ProMasterPropertyDataModel.FK_Event_Property", "ManagementEvent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Message_Property", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("ProMasterPropertyDataModel.FK_Message_Property", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("ProMasterPropertyDataModel.FK_Message_Property", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyAddress", "PropertyAddress")]
        public PropertyAddress PropertyAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterPropertyDataModel.FK_Property_PropertyAddress", "PropertyAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterPropertyDataModel.FK_Property_PropertyAddress", "PropertyAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyAddress> PropertyAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("ProMasterPropertyDataModel.FK_Property_PropertyAddress", "PropertyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyAddress>("ProMasterPropertyDataModel.FK_Property_PropertyAddress", "PropertyAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyFacility", "PropertyFacility")]
        public PropertyFacility PropertyFacility
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyFacility>("ProMasterPropertyDataModel.FK_Property_PropertyFacility", "PropertyFacility").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyFacility>("ProMasterPropertyDataModel.FK_Property_PropertyFacility", "PropertyFacility").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyFacility> PropertyFacilityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyFacility>("ProMasterPropertyDataModel.FK_Property_PropertyFacility", "PropertyFacility");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyFacility>("ProMasterPropertyDataModel.FK_Property_PropertyFacility", "PropertyFacility", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyFeature", "PropertyFeature")]
        public PropertyFeature PropertyFeature
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyFeature>("ProMasterPropertyDataModel.FK_Property_PropertyFeature", "PropertyFeature").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyFeature>("ProMasterPropertyDataModel.FK_Property_PropertyFeature", "PropertyFeature").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyFeature> PropertyFeatureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyFeature>("ProMasterPropertyDataModel.FK_Property_PropertyFeature", "PropertyFeature");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyFeature>("ProMasterPropertyDataModel.FK_Property_PropertyFeature", "PropertyFeature", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyManager", "PropertyManager")]
        public PropertyManager PropertyManager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyManager>("ProMasterPropertyDataModel.FK_Property_PropertyManager", "PropertyManager").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyManager>("ProMasterPropertyDataModel.FK_Property_PropertyManager", "PropertyManager").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyManager> PropertyManagerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyManager>("ProMasterPropertyDataModel.FK_Property_PropertyManager", "PropertyManager");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyManager>("ProMasterPropertyDataModel.FK_Property_PropertyManager", "PropertyManager", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyOwner", "PropertyOwner")]
        public PropertyOwner PropertyOwner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterPropertyDataModel.FK_Property_PropertyOwner", "PropertyOwner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterPropertyDataModel.FK_Property_PropertyOwner", "PropertyOwner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyOwner> PropertyOwnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyOwner>("ProMasterPropertyDataModel.FK_Property_PropertyOwner", "PropertyOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyOwner>("ProMasterPropertyDataModel.FK_Property_PropertyOwner", "PropertyOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyType", "PropertyType")]
        public PropertyType PropertyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyType>("ProMasterPropertyDataModel.FK_Property_PropertyType", "PropertyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyType>("ProMasterPropertyDataModel.FK_Property_PropertyType", "PropertyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyType> PropertyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyType>("ProMasterPropertyDataModel.FK_Property_PropertyType", "PropertyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyType>("ProMasterPropertyDataModel.FK_Property_PropertyType", "PropertyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_RentalStatus", "RentalStatu")]
        public RentalStatu RentalStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalStatu>("ProMasterPropertyDataModel.FK_Property_RentalStatus", "RentalStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalStatu>("ProMasterPropertyDataModel.FK_Property_RentalStatus", "RentalStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RentalStatu> RentalStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RentalStatu>("ProMasterPropertyDataModel.FK_Property_RentalStatus", "RentalStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RentalStatu>("ProMasterPropertyDataModel.FK_Property_RentalStatus", "RentalStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_PropertyList_Property", "PropertyList")]
        public EntityCollection<PropertyList> PropertyLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyList>("ProMasterPropertyDataModel.FK_PropertyList_Property", "PropertyList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyList>("ProMasterPropertyDataModel.FK_PropertyList_Property", "PropertyList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_PropertyListingPicture_Property", "PropertyListingPicture")]
        public EntityCollection<PropertyListingPicture> PropertyListingPictures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PropertyListingPicture>("ProMasterPropertyDataModel.FK_PropertyListingPicture_Property", "PropertyListingPicture");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PropertyListingPicture>("ProMasterPropertyDataModel.FK_PropertyListingPicture_Property", "PropertyListingPicture", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_TenancyApplication_Property", "TenancyApplication")]
        public EntityCollection<TenancyApplication> TenancyApplications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenancyApplication>("ProMasterPropertyDataModel.FK_TenancyApplication_Property", "TenancyApplication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenancyApplication>("ProMasterPropertyDataModel.FK_TenancyApplication_Property", "TenancyApplication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_Property", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_Property", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_Property", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyAddress object.
        /// </summary>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertySuiteNumber">Initial value of the PropertySuiteNumber property.</param>
        /// <param name="propertyStreet">Initial value of the PropertyStreet property.</param>
        /// <param name="propertyCity">Initial value of the PropertyCity property.</param>
        /// <param name="propertyStateProvince">Initial value of the PropertyStateProvince property.</param>
        /// <param name="propertyCountry">Initial value of the PropertyCountry property.</param>
        /// <param name="propertyZipPostCode">Initial value of the PropertyZipPostCode property.</param>
        public static PropertyAddress CreatePropertyAddress(global::System.Int32 propertyAddressId, global::System.String propertySuiteNumber, global::System.String propertyStreet, global::System.String propertyCity, global::System.String propertyStateProvince, global::System.String propertyCountry, global::System.String propertyZipPostCode)
        {
            PropertyAddress propertyAddress = new PropertyAddress();
            propertyAddress.PropertyAddressId = propertyAddressId;
            propertyAddress.PropertySuiteNumber = propertySuiteNumber;
            propertyAddress.PropertyStreet = propertyStreet;
            propertyAddress.PropertyCity = propertyCity;
            propertyAddress.PropertyStateProvince = propertyStateProvince;
            propertyAddress.PropertyCountry = propertyCountry;
            propertyAddress.PropertyZipPostCode = propertyZipPostCode;
            return propertyAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                if (_PropertyAddressId != value)
                {
                    OnPropertyAddressIdChanging(value);
                    ReportPropertyChanging("PropertyAddressId");
                    _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                    ReportPropertyChanged("PropertyAddressId");
                    OnPropertyAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertySuiteNumber
        {
            get
            {
                return _PropertySuiteNumber;
            }
            set
            {
                OnPropertySuiteNumberChanging(value);
                ReportPropertyChanging("PropertySuiteNumber");
                _PropertySuiteNumber = StructuralObject.SetValidValue(value, false, "PropertySuiteNumber");
                ReportPropertyChanged("PropertySuiteNumber");
                OnPropertySuiteNumberChanged();
            }
        }
        private global::System.String _PropertySuiteNumber;
        partial void OnPropertySuiteNumberChanging(global::System.String value);
        partial void OnPropertySuiteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyNumber
        {
            get
            {
                return _PropertyNumber;
            }
            set
            {
                OnPropertyNumberChanging(value);
                ReportPropertyChanging("PropertyNumber");
                _PropertyNumber = StructuralObject.SetValidValue(value, true, "PropertyNumber");
                ReportPropertyChanged("PropertyNumber");
                OnPropertyNumberChanged();
            }
        }
        private global::System.String _PropertyNumber;
        partial void OnPropertyNumberChanging(global::System.String value);
        partial void OnPropertyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStreet
        {
            get
            {
                return _PropertyStreet;
            }
            set
            {
                OnPropertyStreetChanging(value);
                ReportPropertyChanging("PropertyStreet");
                _PropertyStreet = StructuralObject.SetValidValue(value, false, "PropertyStreet");
                ReportPropertyChanged("PropertyStreet");
                OnPropertyStreetChanged();
            }
        }
        private global::System.String _PropertyStreet;
        partial void OnPropertyStreetChanging(global::System.String value);
        partial void OnPropertyStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCity
        {
            get
            {
                return _PropertyCity;
            }
            set
            {
                OnPropertyCityChanging(value);
                ReportPropertyChanging("PropertyCity");
                _PropertyCity = StructuralObject.SetValidValue(value, false, "PropertyCity");
                ReportPropertyChanged("PropertyCity");
                OnPropertyCityChanged();
            }
        }
        private global::System.String _PropertyCity;
        partial void OnPropertyCityChanging(global::System.String value);
        partial void OnPropertyCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStateProvince
        {
            get
            {
                return _PropertyStateProvince;
            }
            set
            {
                OnPropertyStateProvinceChanging(value);
                ReportPropertyChanging("PropertyStateProvince");
                _PropertyStateProvince = StructuralObject.SetValidValue(value, false, "PropertyStateProvince");
                ReportPropertyChanged("PropertyStateProvince");
                OnPropertyStateProvinceChanged();
            }
        }
        private global::System.String _PropertyStateProvince;
        partial void OnPropertyStateProvinceChanging(global::System.String value);
        partial void OnPropertyStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCountry
        {
            get
            {
                return _PropertyCountry;
            }
            set
            {
                OnPropertyCountryChanging(value);
                ReportPropertyChanging("PropertyCountry");
                _PropertyCountry = StructuralObject.SetValidValue(value, false, "PropertyCountry");
                ReportPropertyChanged("PropertyCountry");
                OnPropertyCountryChanged();
            }
        }
        private global::System.String _PropertyCountry;
        partial void OnPropertyCountryChanging(global::System.String value);
        partial void OnPropertyCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyZipPostCode
        {
            get
            {
                return _PropertyZipPostCode;
            }
            set
            {
                OnPropertyZipPostCodeChanging(value);
                ReportPropertyChanging("PropertyZipPostCode");
                _PropertyZipPostCode = StructuralObject.SetValidValue(value, false, "PropertyZipPostCode");
                ReportPropertyChanged("PropertyZipPostCode");
                OnPropertyZipPostCodeChanged();
            }
        }
        private global::System.String _PropertyZipPostCode;
        partial void OnPropertyZipPostCodeChanging(global::System.String value);
        partial void OnPropertyZipPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLongitudeValue
        {
            get
            {
                return _GPSLongitudeValue;
            }
            set
            {
                OnGPSLongitudeValueChanging(value);
                ReportPropertyChanging("GPSLongitudeValue");
                _GPSLongitudeValue = StructuralObject.SetValidValue(value, true, "GPSLongitudeValue");
                ReportPropertyChanged("GPSLongitudeValue");
                OnGPSLongitudeValueChanged();
            }
        }
        private global::System.String _GPSLongitudeValue;
        partial void OnGPSLongitudeValueChanging(global::System.String value);
        partial void OnGPSLongitudeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLatitudeValue
        {
            get
            {
                return _GPSLatitudeValue;
            }
            set
            {
                OnGPSLatitudeValueChanging(value);
                ReportPropertyChanging("GPSLatitudeValue");
                _GPSLatitudeValue = StructuralObject.SetValidValue(value, true, "GPSLatitudeValue");
                ReportPropertyChanged("GPSLatitudeValue");
                OnGPSLatitudeValueChanged();
            }
        }
        private global::System.String _GPSLatitudeValue;
        partial void OnGPSLatitudeValueChanging(global::System.String value);
        partial void OnGPSLatitudeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyAddress", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyAddress", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyAddress", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyFacility")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyFacility : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyFacility object.
        /// </summary>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="stove">Initial value of the Stove property.</param>
        /// <param name="refrigerator">Initial value of the Refrigerator property.</param>
        /// <param name="dishwasher">Initial value of the Dishwasher property.</param>
        /// <param name="airConditioner">Initial value of the AirConditioner property.</param>
        /// <param name="laundry">Initial value of the Laundry property.</param>
        /// <param name="blindsCurtain">Initial value of the BlindsCurtain property.</param>
        /// <param name="furniture">Initial value of the Furniture property.</param>
        /// <param name="tVInternet">Initial value of the TVInternet property.</param>
        /// <param name="commonFacility">Initial value of the CommonFacility property.</param>
        /// <param name="securitySystem">Initial value of the SecuritySystem property.</param>
        /// <param name="fireAlarmSystem">Initial value of the FireAlarmSystem property.</param>
        public static PropertyFacility CreatePropertyFacility(global::System.Int32 propertyFacilityId, global::System.Boolean stove, global::System.Boolean refrigerator, global::System.Boolean dishwasher, global::System.Boolean airConditioner, global::System.Boolean laundry, global::System.Boolean blindsCurtain, global::System.Boolean furniture, global::System.Boolean tVInternet, global::System.Boolean commonFacility, global::System.Boolean securitySystem, global::System.Boolean fireAlarmSystem)
        {
            PropertyFacility propertyFacility = new PropertyFacility();
            propertyFacility.PropertyFacilityId = propertyFacilityId;
            propertyFacility.Stove = stove;
            propertyFacility.Refrigerator = refrigerator;
            propertyFacility.Dishwasher = dishwasher;
            propertyFacility.AirConditioner = airConditioner;
            propertyFacility.Laundry = laundry;
            propertyFacility.BlindsCurtain = blindsCurtain;
            propertyFacility.Furniture = furniture;
            propertyFacility.TVInternet = tVInternet;
            propertyFacility.CommonFacility = commonFacility;
            propertyFacility.SecuritySystem = securitySystem;
            propertyFacility.FireAlarmSystem = fireAlarmSystem;
            return propertyFacility;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                if (_PropertyFacilityId != value)
                {
                    OnPropertyFacilityIdChanging(value);
                    ReportPropertyChanging("PropertyFacilityId");
                    _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                    ReportPropertyChanged("PropertyFacilityId");
                    OnPropertyFacilityIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stove
        {
            get
            {
                return _Stove;
            }
            set
            {
                OnStoveChanging(value);
                ReportPropertyChanging("Stove");
                _Stove = StructuralObject.SetValidValue(value, "Stove");
                ReportPropertyChanged("Stove");
                OnStoveChanged();
            }
        }
        private global::System.Boolean _Stove;
        partial void OnStoveChanging(global::System.Boolean value);
        partial void OnStoveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Refrigerator
        {
            get
            {
                return _Refrigerator;
            }
            set
            {
                OnRefrigeratorChanging(value);
                ReportPropertyChanging("Refrigerator");
                _Refrigerator = StructuralObject.SetValidValue(value, "Refrigerator");
                ReportPropertyChanged("Refrigerator");
                OnRefrigeratorChanged();
            }
        }
        private global::System.Boolean _Refrigerator;
        partial void OnRefrigeratorChanging(global::System.Boolean value);
        partial void OnRefrigeratorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Dishwasher
        {
            get
            {
                return _Dishwasher;
            }
            set
            {
                OnDishwasherChanging(value);
                ReportPropertyChanging("Dishwasher");
                _Dishwasher = StructuralObject.SetValidValue(value, "Dishwasher");
                ReportPropertyChanged("Dishwasher");
                OnDishwasherChanged();
            }
        }
        private global::System.Boolean _Dishwasher;
        partial void OnDishwasherChanging(global::System.Boolean value);
        partial void OnDishwasherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AirConditioner
        {
            get
            {
                return _AirConditioner;
            }
            set
            {
                OnAirConditionerChanging(value);
                ReportPropertyChanging("AirConditioner");
                _AirConditioner = StructuralObject.SetValidValue(value, "AirConditioner");
                ReportPropertyChanged("AirConditioner");
                OnAirConditionerChanged();
            }
        }
        private global::System.Boolean _AirConditioner;
        partial void OnAirConditionerChanging(global::System.Boolean value);
        partial void OnAirConditionerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Laundry
        {
            get
            {
                return _Laundry;
            }
            set
            {
                OnLaundryChanging(value);
                ReportPropertyChanging("Laundry");
                _Laundry = StructuralObject.SetValidValue(value, "Laundry");
                ReportPropertyChanged("Laundry");
                OnLaundryChanged();
            }
        }
        private global::System.Boolean _Laundry;
        partial void OnLaundryChanging(global::System.Boolean value);
        partial void OnLaundryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BlindsCurtain
        {
            get
            {
                return _BlindsCurtain;
            }
            set
            {
                OnBlindsCurtainChanging(value);
                ReportPropertyChanging("BlindsCurtain");
                _BlindsCurtain = StructuralObject.SetValidValue(value, "BlindsCurtain");
                ReportPropertyChanged("BlindsCurtain");
                OnBlindsCurtainChanged();
            }
        }
        private global::System.Boolean _BlindsCurtain;
        partial void OnBlindsCurtainChanging(global::System.Boolean value);
        partial void OnBlindsCurtainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Furniture
        {
            get
            {
                return _Furniture;
            }
            set
            {
                OnFurnitureChanging(value);
                ReportPropertyChanging("Furniture");
                _Furniture = StructuralObject.SetValidValue(value, "Furniture");
                ReportPropertyChanged("Furniture");
                OnFurnitureChanged();
            }
        }
        private global::System.Boolean _Furniture;
        partial void OnFurnitureChanging(global::System.Boolean value);
        partial void OnFurnitureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TVInternet
        {
            get
            {
                return _TVInternet;
            }
            set
            {
                OnTVInternetChanging(value);
                ReportPropertyChanging("TVInternet");
                _TVInternet = StructuralObject.SetValidValue(value, "TVInternet");
                ReportPropertyChanged("TVInternet");
                OnTVInternetChanged();
            }
        }
        private global::System.Boolean _TVInternet;
        partial void OnTVInternetChanging(global::System.Boolean value);
        partial void OnTVInternetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CommonFacility
        {
            get
            {
                return _CommonFacility;
            }
            set
            {
                OnCommonFacilityChanging(value);
                ReportPropertyChanging("CommonFacility");
                _CommonFacility = StructuralObject.SetValidValue(value, "CommonFacility");
                ReportPropertyChanged("CommonFacility");
                OnCommonFacilityChanged();
            }
        }
        private global::System.Boolean _CommonFacility;
        partial void OnCommonFacilityChanging(global::System.Boolean value);
        partial void OnCommonFacilityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SecuritySystem
        {
            get
            {
                return _SecuritySystem;
            }
            set
            {
                OnSecuritySystemChanging(value);
                ReportPropertyChanging("SecuritySystem");
                _SecuritySystem = StructuralObject.SetValidValue(value, "SecuritySystem");
                ReportPropertyChanged("SecuritySystem");
                OnSecuritySystemChanged();
            }
        }
        private global::System.Boolean _SecuritySystem;
        partial void OnSecuritySystemChanging(global::System.Boolean value);
        partial void OnSecuritySystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FireAlarmSystem
        {
            get
            {
                return _FireAlarmSystem;
            }
            set
            {
                OnFireAlarmSystemChanging(value);
                ReportPropertyChanging("FireAlarmSystem");
                _FireAlarmSystem = StructuralObject.SetValidValue(value, "FireAlarmSystem");
                ReportPropertyChanged("FireAlarmSystem");
                OnFireAlarmSystemChanged();
            }
        }
        private global::System.Boolean _FireAlarmSystem;
        partial void OnFireAlarmSystemChanging(global::System.Boolean value);
        partial void OnFireAlarmSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Others
        {
            get
            {
                return _Others;
            }
            set
            {
                OnOthersChanging(value);
                ReportPropertyChanging("Others");
                _Others = StructuralObject.SetValidValue(value, true, "Others");
                ReportPropertyChanged("Others");
                OnOthersChanged();
            }
        }
        private global::System.String _Others;
        partial void OnOthersChanging(global::System.String value);
        partial void OnOthersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyFacility", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyFacility", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyFacility", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyFeature")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyFeature : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyFeature object.
        /// </summary>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="numberOfBedrooms">Initial value of the NumberOfBedrooms property.</param>
        /// <param name="numberOfBathrooms">Initial value of the NumberOfBathrooms property.</param>
        /// <param name="numberOfLayers">Initial value of the NumberOfLayers property.</param>
        /// <param name="numberOfParking">Initial value of the NumberOfParking property.</param>
        /// <param name="basementAvailable">Initial value of the BasementAvailable property.</param>
        /// <param name="totalLivingArea">Initial value of the TotalLivingArea property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        public static PropertyFeature CreatePropertyFeature(global::System.Int32 propertyFeatureId, global::System.Int32 numberOfBedrooms, global::System.Int32 numberOfBathrooms, global::System.Int32 numberOfLayers, global::System.Int32 numberOfParking, global::System.Boolean basementAvailable, global::System.Int32 totalLivingArea, global::System.Boolean isShared)
        {
            PropertyFeature propertyFeature = new PropertyFeature();
            propertyFeature.PropertyFeatureId = propertyFeatureId;
            propertyFeature.NumberOfBedrooms = numberOfBedrooms;
            propertyFeature.NumberOfBathrooms = numberOfBathrooms;
            propertyFeature.NumberOfLayers = numberOfLayers;
            propertyFeature.NumberOfParking = numberOfParking;
            propertyFeature.BasementAvailable = basementAvailable;
            propertyFeature.TotalLivingArea = totalLivingArea;
            propertyFeature.IsShared = isShared;
            return propertyFeature;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                if (_PropertyFeatureId != value)
                {
                    OnPropertyFeatureIdChanging(value);
                    ReportPropertyChanging("PropertyFeatureId");
                    _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                    ReportPropertyChanged("PropertyFeatureId");
                    OnPropertyFeatureIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfBedrooms
        {
            get
            {
                return _NumberOfBedrooms;
            }
            set
            {
                OnNumberOfBedroomsChanging(value);
                ReportPropertyChanging("NumberOfBedrooms");
                _NumberOfBedrooms = StructuralObject.SetValidValue(value, "NumberOfBedrooms");
                ReportPropertyChanged("NumberOfBedrooms");
                OnNumberOfBedroomsChanged();
            }
        }
        private global::System.Int32 _NumberOfBedrooms;
        partial void OnNumberOfBedroomsChanging(global::System.Int32 value);
        partial void OnNumberOfBedroomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfBathrooms
        {
            get
            {
                return _NumberOfBathrooms;
            }
            set
            {
                OnNumberOfBathroomsChanging(value);
                ReportPropertyChanging("NumberOfBathrooms");
                _NumberOfBathrooms = StructuralObject.SetValidValue(value, "NumberOfBathrooms");
                ReportPropertyChanged("NumberOfBathrooms");
                OnNumberOfBathroomsChanged();
            }
        }
        private global::System.Int32 _NumberOfBathrooms;
        partial void OnNumberOfBathroomsChanging(global::System.Int32 value);
        partial void OnNumberOfBathroomsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfLayers
        {
            get
            {
                return _NumberOfLayers;
            }
            set
            {
                OnNumberOfLayersChanging(value);
                ReportPropertyChanging("NumberOfLayers");
                _NumberOfLayers = StructuralObject.SetValidValue(value, "NumberOfLayers");
                ReportPropertyChanged("NumberOfLayers");
                OnNumberOfLayersChanged();
            }
        }
        private global::System.Int32 _NumberOfLayers;
        partial void OnNumberOfLayersChanging(global::System.Int32 value);
        partial void OnNumberOfLayersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfParking
        {
            get
            {
                return _NumberOfParking;
            }
            set
            {
                OnNumberOfParkingChanging(value);
                ReportPropertyChanging("NumberOfParking");
                _NumberOfParking = StructuralObject.SetValidValue(value, "NumberOfParking");
                ReportPropertyChanged("NumberOfParking");
                OnNumberOfParkingChanged();
            }
        }
        private global::System.Int32 _NumberOfParking;
        partial void OnNumberOfParkingChanging(global::System.Int32 value);
        partial void OnNumberOfParkingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean BasementAvailable
        {
            get
            {
                return _BasementAvailable;
            }
            set
            {
                OnBasementAvailableChanging(value);
                ReportPropertyChanging("BasementAvailable");
                _BasementAvailable = StructuralObject.SetValidValue(value, "BasementAvailable");
                ReportPropertyChanged("BasementAvailable");
                OnBasementAvailableChanged();
            }
        }
        private global::System.Boolean _BasementAvailable;
        partial void OnBasementAvailableChanging(global::System.Boolean value);
        partial void OnBasementAvailableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalLivingArea
        {
            get
            {
                return _TotalLivingArea;
            }
            set
            {
                OnTotalLivingAreaChanging(value);
                ReportPropertyChanging("TotalLivingArea");
                _TotalLivingArea = StructuralObject.SetValidValue(value, "TotalLivingArea");
                ReportPropertyChanged("TotalLivingArea");
                OnTotalLivingAreaChanged();
            }
        }
        private global::System.Int32 _TotalLivingArea;
        partial void OnTotalLivingAreaChanging(global::System.Int32 value);
        partial void OnTotalLivingAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyFeature", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyFeature", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyFeature", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyList object.
        /// </summary>
        /// <param name="propertyListId">Initial value of the PropertyListId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="listedDate">Initial value of the ListedDate property.</param>
        /// <param name="listedRentAmount">Initial value of the ListedRentAmount property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="listingTitle">Initial value of the ListingTitle property.</param>
        public static PropertyList CreatePropertyList(global::System.Int32 propertyListId, global::System.Int32 propertyId, global::System.DateTime listedDate, global::System.Decimal listedRentAmount, global::System.Boolean isActive, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.String listingTitle)
        {
            PropertyList propertyList = new PropertyList();
            propertyList.PropertyListId = propertyListId;
            propertyList.PropertyId = propertyId;
            propertyList.ListedDate = listedDate;
            propertyList.ListedRentAmount = listedRentAmount;
            propertyList.IsActive = isActive;
            propertyList.CreationDate = creationDate;
            propertyList.UpdateDate = updateDate;
            propertyList.ListingTitle = listingTitle;
            return propertyList;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyListId
        {
            get
            {
                return _PropertyListId;
            }
            set
            {
                if (_PropertyListId != value)
                {
                    OnPropertyListIdChanging(value);
                    ReportPropertyChanging("PropertyListId");
                    _PropertyListId = StructuralObject.SetValidValue(value, "PropertyListId");
                    ReportPropertyChanged("PropertyListId");
                    OnPropertyListIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyListId;
        partial void OnPropertyListIdChanging(global::System.Int32 value);
        partial void OnPropertyListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ListedDate
        {
            get
            {
                return _ListedDate;
            }
            set
            {
                OnListedDateChanging(value);
                ReportPropertyChanging("ListedDate");
                _ListedDate = StructuralObject.SetValidValue(value, "ListedDate");
                ReportPropertyChanged("ListedDate");
                OnListedDateChanged();
            }
        }
        private global::System.DateTime _ListedDate;
        partial void OnListedDateChanging(global::System.DateTime value);
        partial void OnListedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ListedRentAmount
        {
            get
            {
                return _ListedRentAmount;
            }
            set
            {
                OnListedRentAmountChanging(value);
                ReportPropertyChanging("ListedRentAmount");
                _ListedRentAmount = StructuralObject.SetValidValue(value, "ListedRentAmount");
                ReportPropertyChanged("ListedRentAmount");
                OnListedRentAmountChanged();
            }
        }
        private global::System.Decimal _ListedRentAmount;
        partial void OnListedRentAmountChanging(global::System.Decimal value);
        partial void OnListedRentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsListedExternal
        {
            get
            {
                return _IsListedExternal;
            }
            set
            {
                OnIsListedExternalChanging(value);
                ReportPropertyChanging("IsListedExternal");
                _IsListedExternal = StructuralObject.SetValidValue(value, "IsListedExternal");
                ReportPropertyChanged("IsListedExternal");
                OnIsListedExternalChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsListedExternal;
        partial void OnIsListedExternalChanging(Nullable<global::System.Boolean> value);
        partial void OnIsListedExternalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingTitle
        {
            get
            {
                return _ListingTitle;
            }
            set
            {
                OnListingTitleChanging(value);
                ReportPropertyChanging("ListingTitle");
                _ListingTitle = StructuralObject.SetValidValue(value, false, "ListingTitle");
                ReportPropertyChanged("ListingTitle");
                OnListingTitleChanged();
            }
        }
        private global::System.String _ListingTitle;
        partial void OnListingTitleChanging(global::System.String value);
        partial void OnListingTitleChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_PropertyList_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyList_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyList_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyList_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyList_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyListingPicture")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyListingPicture : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyListingPicture object.
        /// </summary>
        /// <param name="propertyListingPictureId">Initial value of the PropertyListingPictureId property.</param>
        /// <param name="propertyPictureTitle">Initial value of the PropertyPictureTitle property.</param>
        /// <param name="imgUrl">Initial value of the ImgUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="imgUrlThumb">Initial value of the ImgUrlThumb property.</param>
        /// <param name="imgUrlMed">Initial value of the ImgUrlMed property.</param>
        public static PropertyListingPicture CreatePropertyListingPicture(global::System.Int32 propertyListingPictureId, global::System.String propertyPictureTitle, global::System.String imgUrl, global::System.DateTime creationDate, global::System.DateTime updateDate, global::System.Int32 propertyId, global::System.String imgUrlThumb, global::System.String imgUrlMed)
        {
            PropertyListingPicture propertyListingPicture = new PropertyListingPicture();
            propertyListingPicture.PropertyListingPictureId = propertyListingPictureId;
            propertyListingPicture.PropertyPictureTitle = propertyPictureTitle;
            propertyListingPicture.ImgUrl = imgUrl;
            propertyListingPicture.CreationDate = creationDate;
            propertyListingPicture.UpdateDate = updateDate;
            propertyListingPicture.PropertyId = propertyId;
            propertyListingPicture.ImgUrlThumb = imgUrlThumb;
            propertyListingPicture.ImgUrlMed = imgUrlMed;
            return propertyListingPicture;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyListingPictureId
        {
            get
            {
                return _PropertyListingPictureId;
            }
            set
            {
                if (_PropertyListingPictureId != value)
                {
                    OnPropertyListingPictureIdChanging(value);
                    ReportPropertyChanging("PropertyListingPictureId");
                    _PropertyListingPictureId = StructuralObject.SetValidValue(value, "PropertyListingPictureId");
                    ReportPropertyChanged("PropertyListingPictureId");
                    OnPropertyListingPictureIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyListingPictureId;
        partial void OnPropertyListingPictureIdChanging(global::System.Int32 value);
        partial void OnPropertyListingPictureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyPictureTitle
        {
            get
            {
                return _PropertyPictureTitle;
            }
            set
            {
                OnPropertyPictureTitleChanging(value);
                ReportPropertyChanging("PropertyPictureTitle");
                _PropertyPictureTitle = StructuralObject.SetValidValue(value, false, "PropertyPictureTitle");
                ReportPropertyChanged("PropertyPictureTitle");
                OnPropertyPictureTitleChanged();
            }
        }
        private global::System.String _PropertyPictureTitle;
        partial void OnPropertyPictureTitleChanging(global::System.String value);
        partial void OnPropertyPictureTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImgUrl
        {
            get
            {
                return _ImgUrl;
            }
            set
            {
                OnImgUrlChanging(value);
                ReportPropertyChanging("ImgUrl");
                _ImgUrl = StructuralObject.SetValidValue(value, false, "ImgUrl");
                ReportPropertyChanged("ImgUrl");
                OnImgUrlChanged();
            }
        }
        private global::System.String _ImgUrl;
        partial void OnImgUrlChanging(global::System.String value);
        partial void OnImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, true, "Caption");
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImgUrlThumb
        {
            get
            {
                return _ImgUrlThumb;
            }
            set
            {
                OnImgUrlThumbChanging(value);
                ReportPropertyChanging("ImgUrlThumb");
                _ImgUrlThumb = StructuralObject.SetValidValue(value, false, "ImgUrlThumb");
                ReportPropertyChanged("ImgUrlThumb");
                OnImgUrlThumbChanged();
            }
        }
        private global::System.String _ImgUrlThumb;
        partial void OnImgUrlThumbChanging(global::System.String value);
        partial void OnImgUrlThumbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImgUrlMed
        {
            get
            {
                return _ImgUrlMed;
            }
            set
            {
                OnImgUrlMedChanging(value);
                ReportPropertyChanging("ImgUrlMed");
                _ImgUrlMed = StructuralObject.SetValidValue(value, false, "ImgUrlMed");
                ReportPropertyChanged("ImgUrlMed");
                OnImgUrlMedChanged();
            }
        }
        private global::System.String _ImgUrlMed;
        partial void OnImgUrlMedChanging(global::System.String value);
        partial void OnImgUrlMedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_PropertyListingPicture_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyListingPicture_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyListingPicture_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyListingPicture_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_PropertyListingPicture_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyManager")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyManager : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyManager object.
        /// </summary>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static PropertyManager CreatePropertyManager(global::System.Int32 propertyManagerId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.String userAvartaImgUrl, global::System.Boolean isActive, global::System.Int32 roleId, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            PropertyManager propertyManager = new PropertyManager();
            propertyManager.PropertyManagerId = propertyManagerId;
            propertyManager.UserName = userName;
            propertyManager.FirstName = firstName;
            propertyManager.LastName = lastName;
            propertyManager.ContactEmail = contactEmail;
            propertyManager.ContactTelephone1 = contactTelephone1;
            propertyManager.UserAvartaImgUrl = userAvartaImgUrl;
            propertyManager.IsActive = isActive;
            propertyManager.RoleId = roleId;
            propertyManager.CreationDate = creationDate;
            propertyManager.UpdateDate = updateDate;
            return propertyManager;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                if (_PropertyManagerId != value)
                {
                    OnPropertyManagerIdChanging(value);
                    ReportPropertyChanging("PropertyManagerId");
                    _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                    ReportPropertyChanged("PropertyManagerId");
                    OnPropertyManagerIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyManager", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyManager", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyManager", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyOwner object.
        /// </summary>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="addedBy">Initial value of the AddedBy property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static PropertyOwner CreatePropertyOwner(global::System.Int32 propertyOwnerId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Boolean isActive, global::System.Int32 roleId, global::System.String addedBy, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            PropertyOwner propertyOwner = new PropertyOwner();
            propertyOwner.PropertyOwnerId = propertyOwnerId;
            propertyOwner.UserName = userName;
            propertyOwner.FirstName = firstName;
            propertyOwner.LastName = lastName;
            propertyOwner.ContactEmail = contactEmail;
            propertyOwner.ContactTelephone1 = contactTelephone1;
            propertyOwner.OnlineAccessEnbaled = onlineAccessEnbaled;
            propertyOwner.UserAvartaImgUrl = userAvartaImgUrl;
            propertyOwner.IsActive = isActive;
            propertyOwner.RoleId = roleId;
            propertyOwner.AddedBy = addedBy;
            propertyOwner.CreationDate = creationDate;
            propertyOwner.UpdateDate = updateDate;
            return propertyOwner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                if (_PropertyOwnerId != value)
                {
                    OnPropertyOwnerIdChanging(value);
                    ReportPropertyChanging("PropertyOwnerId");
                    _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                    ReportPropertyChanged("PropertyOwnerId");
                    OnPropertyOwnerIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddedBy
        {
            get
            {
                return _AddedBy;
            }
            set
            {
                OnAddedByChanging(value);
                ReportPropertyChanging("AddedBy");
                _AddedBy = StructuralObject.SetValidValue(value, false, "AddedBy");
                ReportPropertyChanged("AddedBy");
                OnAddedByChanged();
            }
        }
        private global::System.String _AddedBy;
        partial void OnAddedByChanging(global::System.String value);
        partial void OnAddedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AddProperty
        {
            get
            {
                return _AddProperty;
            }
            set
            {
                OnAddPropertyChanging(value);
                ReportPropertyChanging("AddProperty");
                _AddProperty = StructuralObject.SetValidValue(value, "AddProperty");
                ReportPropertyChanged("AddProperty");
                OnAddPropertyChanged();
            }
        }
        private Nullable<global::System.Boolean> _AddProperty;
        partial void OnAddPropertyChanging(Nullable<global::System.Boolean> value);
        partial void OnAddPropertyChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyOwner", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyOwner", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyOwner", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="PropertyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyType object.
        /// </summary>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyType1">Initial value of the PropertyType1 property.</param>
        public static PropertyType CreatePropertyType(global::System.Int32 propertyTypeId, global::System.String propertyType1)
        {
            PropertyType propertyType = new PropertyType();
            propertyType.PropertyTypeId = propertyTypeId;
            propertyType.PropertyType1 = propertyType1;
            return propertyType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                if (_PropertyTypeId != value)
                {
                    OnPropertyTypeIdChanging(value);
                    ReportPropertyChanging("PropertyTypeId");
                    _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                    ReportPropertyChanged("PropertyTypeId");
                    OnPropertyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyType1
        {
            get
            {
                return _PropertyType1;
            }
            set
            {
                OnPropertyType1Changing(value);
                ReportPropertyChanging("PropertyType1");
                _PropertyType1 = StructuralObject.SetValidValue(value, false, "PropertyType1");
                ReportPropertyChanged("PropertyType1");
                OnPropertyType1Changed();
            }
        }
        private global::System.String _PropertyType1;
        partial void OnPropertyType1Changing(global::System.String value);
        partial void OnPropertyType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_PropertyType", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyType", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_PropertyType", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="RentalStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RentalStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RentalStatu object.
        /// </summary>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static RentalStatu CreateRentalStatu(global::System.Int32 rentalStatusId, global::System.String status)
        {
            RentalStatu rentalStatu = new RentalStatu();
            rentalStatu.RentalStatusId = rentalStatusId;
            rentalStatu.Status = status;
            return rentalStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                if (_RentalStatusId != value)
                {
                    OnRentalStatusIdChanging(value);
                    ReportPropertyChanging("RentalStatusId");
                    _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                    ReportPropertyChanged("RentalStatusId");
                    OnRentalStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_Property_RentalStatus", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_RentalStatus", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("ProMasterPropertyDataModel.FK_Property_RentalStatus", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="TenancyApplication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TenancyApplication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TenancyApplication object.
        /// </summary>
        /// <param name="tenancyApplicationId">Initial value of the TenancyApplicationId property.</param>
        /// <param name="applicantFirstName">Initial value of the ApplicantFirstName property.</param>
        /// <param name="applicantLastName">Initial value of the ApplicantLastName property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="currentAddress">Initial value of the CurrentAddress property.</param>
        /// <param name="applicantContactEmail">Initial value of the ApplicantContactEmail property.</param>
        /// <param name="numberOfTenant">Initial value of the NumberOfTenant property.</param>
        /// <param name="currentEmployerContact">Initial value of the CurrentEmployerContact property.</param>
        /// <param name="currentMonthlyIncome">Initial value of the CurrentMonthlyIncome property.</param>
        /// <param name="isAuthorizedForRefCheck">Initial value of the IsAuthorizedForRefCheck property.</param>
        /// <param name="currentLandlordContact">Initial value of the CurrentLandlordContact property.</param>
        /// <param name="isIdentificationDocAvailalbe">Initial value of the IsIdentificationDocAvailalbe property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="applicationSentDate">Initial value of the ApplicationSentDate property.</param>
        /// <param name="applicantSIN">Initial value of the ApplicantSIN property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static TenancyApplication CreateTenancyApplication(global::System.Int32 tenancyApplicationId, global::System.String applicantFirstName, global::System.String applicantLastName, global::System.Int32 propertyId, global::System.String currentAddress, global::System.String applicantContactEmail, global::System.Int32 numberOfTenant, global::System.String currentEmployerContact, global::System.Decimal currentMonthlyIncome, global::System.Boolean isAuthorizedForRefCheck, global::System.String currentLandlordContact, global::System.Boolean isIdentificationDocAvailalbe, global::System.Boolean isApproved, global::System.DateTime applicationSentDate, global::System.String applicantSIN, global::System.Boolean isActive)
        {
            TenancyApplication tenancyApplication = new TenancyApplication();
            tenancyApplication.TenancyApplicationId = tenancyApplicationId;
            tenancyApplication.ApplicantFirstName = applicantFirstName;
            tenancyApplication.ApplicantLastName = applicantLastName;
            tenancyApplication.PropertyId = propertyId;
            tenancyApplication.CurrentAddress = currentAddress;
            tenancyApplication.ApplicantContactEmail = applicantContactEmail;
            tenancyApplication.NumberOfTenant = numberOfTenant;
            tenancyApplication.CurrentEmployerContact = currentEmployerContact;
            tenancyApplication.CurrentMonthlyIncome = currentMonthlyIncome;
            tenancyApplication.IsAuthorizedForRefCheck = isAuthorizedForRefCheck;
            tenancyApplication.CurrentLandlordContact = currentLandlordContact;
            tenancyApplication.IsIdentificationDocAvailalbe = isIdentificationDocAvailalbe;
            tenancyApplication.IsApproved = isApproved;
            tenancyApplication.ApplicationSentDate = applicationSentDate;
            tenancyApplication.ApplicantSIN = applicantSIN;
            tenancyApplication.IsActive = isActive;
            return tenancyApplication;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenancyApplicationId
        {
            get
            {
                return _TenancyApplicationId;
            }
            set
            {
                if (_TenancyApplicationId != value)
                {
                    OnTenancyApplicationIdChanging(value);
                    ReportPropertyChanging("TenancyApplicationId");
                    _TenancyApplicationId = StructuralObject.SetValidValue(value, "TenancyApplicationId");
                    ReportPropertyChanged("TenancyApplicationId");
                    OnTenancyApplicationIdChanged();
                }
            }
        }
        private global::System.Int32 _TenancyApplicationId;
        partial void OnTenancyApplicationIdChanging(global::System.Int32 value);
        partial void OnTenancyApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantFirstName
        {
            get
            {
                return _ApplicantFirstName;
            }
            set
            {
                OnApplicantFirstNameChanging(value);
                ReportPropertyChanging("ApplicantFirstName");
                _ApplicantFirstName = StructuralObject.SetValidValue(value, false, "ApplicantFirstName");
                ReportPropertyChanged("ApplicantFirstName");
                OnApplicantFirstNameChanged();
            }
        }
        private global::System.String _ApplicantFirstName;
        partial void OnApplicantFirstNameChanging(global::System.String value);
        partial void OnApplicantFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantLastName
        {
            get
            {
                return _ApplicantLastName;
            }
            set
            {
                OnApplicantLastNameChanging(value);
                ReportPropertyChanging("ApplicantLastName");
                _ApplicantLastName = StructuralObject.SetValidValue(value, false, "ApplicantLastName");
                ReportPropertyChanged("ApplicantLastName");
                OnApplicantLastNameChanged();
            }
        }
        private global::System.String _ApplicantLastName;
        partial void OnApplicantLastNameChanging(global::System.String value);
        partial void OnApplicantLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentAddress
        {
            get
            {
                return _CurrentAddress;
            }
            set
            {
                OnCurrentAddressChanging(value);
                ReportPropertyChanging("CurrentAddress");
                _CurrentAddress = StructuralObject.SetValidValue(value, false, "CurrentAddress");
                ReportPropertyChanged("CurrentAddress");
                OnCurrentAddressChanged();
            }
        }
        private global::System.String _CurrentAddress;
        partial void OnCurrentAddressChanging(global::System.String value);
        partial void OnCurrentAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicantContactTel
        {
            get
            {
                return _ApplicantContactTel;
            }
            set
            {
                OnApplicantContactTelChanging(value);
                ReportPropertyChanging("ApplicantContactTel");
                _ApplicantContactTel = StructuralObject.SetValidValue(value, true, "ApplicantContactTel");
                ReportPropertyChanged("ApplicantContactTel");
                OnApplicantContactTelChanged();
            }
        }
        private global::System.String _ApplicantContactTel;
        partial void OnApplicantContactTelChanging(global::System.String value);
        partial void OnApplicantContactTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantContactEmail
        {
            get
            {
                return _ApplicantContactEmail;
            }
            set
            {
                OnApplicantContactEmailChanging(value);
                ReportPropertyChanging("ApplicantContactEmail");
                _ApplicantContactEmail = StructuralObject.SetValidValue(value, false, "ApplicantContactEmail");
                ReportPropertyChanged("ApplicantContactEmail");
                OnApplicantContactEmailChanged();
            }
        }
        private global::System.String _ApplicantContactEmail;
        partial void OnApplicantContactEmailChanging(global::System.String value);
        partial void OnApplicantContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfTenant
        {
            get
            {
                return _NumberOfTenant;
            }
            set
            {
                OnNumberOfTenantChanging(value);
                ReportPropertyChanging("NumberOfTenant");
                _NumberOfTenant = StructuralObject.SetValidValue(value, "NumberOfTenant");
                ReportPropertyChanged("NumberOfTenant");
                OnNumberOfTenantChanged();
            }
        }
        private global::System.Int32 _NumberOfTenant;
        partial void OnNumberOfTenantChanging(global::System.Int32 value);
        partial void OnNumberOfTenantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfChildren
        {
            get
            {
                return _NumberOfChildren;
            }
            set
            {
                OnNumberOfChildrenChanging(value);
                ReportPropertyChanging("NumberOfChildren");
                _NumberOfChildren = StructuralObject.SetValidValue(value, "NumberOfChildren");
                ReportPropertyChanged("NumberOfChildren");
                OnNumberOfChildrenChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfChildren;
        partial void OnNumberOfChildrenChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfChildrenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentEmployerContact
        {
            get
            {
                return _CurrentEmployerContact;
            }
            set
            {
                OnCurrentEmployerContactChanging(value);
                ReportPropertyChanging("CurrentEmployerContact");
                _CurrentEmployerContact = StructuralObject.SetValidValue(value, false, "CurrentEmployerContact");
                ReportPropertyChanged("CurrentEmployerContact");
                OnCurrentEmployerContactChanged();
            }
        }
        private global::System.String _CurrentEmployerContact;
        partial void OnCurrentEmployerContactChanging(global::System.String value);
        partial void OnCurrentEmployerContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CurrentMonthlyIncome
        {
            get
            {
                return _CurrentMonthlyIncome;
            }
            set
            {
                OnCurrentMonthlyIncomeChanging(value);
                ReportPropertyChanging("CurrentMonthlyIncome");
                _CurrentMonthlyIncome = StructuralObject.SetValidValue(value, "CurrentMonthlyIncome");
                ReportPropertyChanged("CurrentMonthlyIncome");
                OnCurrentMonthlyIncomeChanged();
            }
        }
        private global::System.Decimal _CurrentMonthlyIncome;
        partial void OnCurrentMonthlyIncomeChanging(global::System.Decimal value);
        partial void OnCurrentMonthlyIncomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAuthorizedForRefCheck
        {
            get
            {
                return _IsAuthorizedForRefCheck;
            }
            set
            {
                OnIsAuthorizedForRefCheckChanging(value);
                ReportPropertyChanging("IsAuthorizedForRefCheck");
                _IsAuthorizedForRefCheck = StructuralObject.SetValidValue(value, "IsAuthorizedForRefCheck");
                ReportPropertyChanged("IsAuthorizedForRefCheck");
                OnIsAuthorizedForRefCheckChanged();
            }
        }
        private global::System.Boolean _IsAuthorizedForRefCheck;
        partial void OnIsAuthorizedForRefCheckChanging(global::System.Boolean value);
        partial void OnIsAuthorizedForRefCheckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurrentLandlordContact
        {
            get
            {
                return _CurrentLandlordContact;
            }
            set
            {
                OnCurrentLandlordContactChanging(value);
                ReportPropertyChanging("CurrentLandlordContact");
                _CurrentLandlordContact = StructuralObject.SetValidValue(value, false, "CurrentLandlordContact");
                ReportPropertyChanged("CurrentLandlordContact");
                OnCurrentLandlordContactChanged();
            }
        }
        private global::System.String _CurrentLandlordContact;
        partial void OnCurrentLandlordContactChanging(global::System.String value);
        partial void OnCurrentLandlordContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIdentificationDocAvailalbe
        {
            get
            {
                return _IsIdentificationDocAvailalbe;
            }
            set
            {
                OnIsIdentificationDocAvailalbeChanging(value);
                ReportPropertyChanging("IsIdentificationDocAvailalbe");
                _IsIdentificationDocAvailalbe = StructuralObject.SetValidValue(value, "IsIdentificationDocAvailalbe");
                ReportPropertyChanged("IsIdentificationDocAvailalbe");
                OnIsIdentificationDocAvailalbeChanged();
            }
        }
        private global::System.Boolean _IsIdentificationDocAvailalbe;
        partial void OnIsIdentificationDocAvailalbeChanging(global::System.Boolean value);
        partial void OnIsIdentificationDocAvailalbeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value, "IsApproved");
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApplicationSentDate
        {
            get
            {
                return _ApplicationSentDate;
            }
            set
            {
                OnApplicationSentDateChanging(value);
                ReportPropertyChanging("ApplicationSentDate");
                _ApplicationSentDate = StructuralObject.SetValidValue(value, "ApplicationSentDate");
                ReportPropertyChanged("ApplicationSentDate");
                OnApplicationSentDateChanged();
            }
        }
        private global::System.DateTime _ApplicationSentDate;
        partial void OnApplicationSentDateChanging(global::System.DateTime value);
        partial void OnApplicationSentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreditReportScore
        {
            get
            {
                return _CreditReportScore;
            }
            set
            {
                OnCreditReportScoreChanging(value);
                ReportPropertyChanging("CreditReportScore");
                _CreditReportScore = StructuralObject.SetValidValue(value, true, "CreditReportScore");
                ReportPropertyChanged("CreditReportScore");
                OnCreditReportScoreChanged();
            }
        }
        private global::System.String _CreditReportScore;
        partial void OnCreditReportScoreChanging(global::System.String value);
        partial void OnCreditReportScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousAddress
        {
            get
            {
                return _PreviousAddress;
            }
            set
            {
                OnPreviousAddressChanging(value);
                ReportPropertyChanging("PreviousAddress");
                _PreviousAddress = StructuralObject.SetValidValue(value, true, "PreviousAddress");
                ReportPropertyChanged("PreviousAddress");
                OnPreviousAddressChanged();
            }
        }
        private global::System.String _PreviousAddress;
        partial void OnPreviousAddressChanging(global::System.String value);
        partial void OnPreviousAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousEmployerContact
        {
            get
            {
                return _PreviousEmployerContact;
            }
            set
            {
                OnPreviousEmployerContactChanging(value);
                ReportPropertyChanging("PreviousEmployerContact");
                _PreviousEmployerContact = StructuralObject.SetValidValue(value, true, "PreviousEmployerContact");
                ReportPropertyChanged("PreviousEmployerContact");
                OnPreviousEmployerContactChanged();
            }
        }
        private global::System.String _PreviousEmployerContact;
        partial void OnPreviousEmployerContactChanging(global::System.String value);
        partial void OnPreviousEmployerContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreviousLandlordContact
        {
            get
            {
                return _PreviousLandlordContact;
            }
            set
            {
                OnPreviousLandlordContactChanging(value);
                ReportPropertyChanging("PreviousLandlordContact");
                _PreviousLandlordContact = StructuralObject.SetValidValue(value, true, "PreviousLandlordContact");
                ReportPropertyChanged("PreviousLandlordContact");
                OnPreviousLandlordContactChanged();
            }
        }
        private global::System.String _PreviousLandlordContact;
        partial void OnPreviousLandlordContactChanging(global::System.String value);
        partial void OnPreviousLandlordContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ApplicantSIN
        {
            get
            {
                return _ApplicantSIN;
            }
            set
            {
                OnApplicantSINChanging(value);
                ReportPropertyChanging("ApplicantSIN");
                _ApplicantSIN = StructuralObject.SetValidValue(value, false, "ApplicantSIN");
                ReportPropertyChanged("ApplicantSIN");
                OnApplicantSINChanged();
            }
        }
        private global::System.String _ApplicantSIN;
        partial void OnApplicantSINChanging(global::System.String value);
        partial void OnApplicantSINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_TenancyApplication_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_TenancyApplication_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_TenancyApplication_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_TenancyApplication_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_TenancyApplication_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="tenantId">Initial value of the TenantId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="contactEmail">Initial value of the ContactEmail property.</param>
        /// <param name="contactTelephone1">Initial value of the ContactTelephone1 property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="leaseId">Initial value of the LeaseId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="managedBy">Initial value of the ManagedBy property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Tenant CreateTenant(global::System.Int32 tenantId, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String contactEmail, global::System.String contactTelephone1, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.Int32 leaseId, global::System.Int32 roleId, global::System.Boolean isActive, global::System.String managedBy, global::System.DateTime createDate, global::System.DateTime updateDate)
        {
            Tenant tenant = new Tenant();
            tenant.TenantId = tenantId;
            tenant.UserName = userName;
            tenant.FirstName = firstName;
            tenant.LastName = lastName;
            tenant.ContactEmail = contactEmail;
            tenant.ContactTelephone1 = contactTelephone1;
            tenant.OnlineAccessEnbaled = onlineAccessEnbaled;
            tenant.UserAvartaImgUrl = userAvartaImgUrl;
            tenant.LeaseId = leaseId;
            tenant.RoleId = roleId;
            tenant.IsActive = isActive;
            tenant.ManagedBy = managedBy;
            tenant.CreateDate = createDate;
            tenant.UpdateDate = updateDate;
            return tenant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantId
        {
            get
            {
                return _TenantId;
            }
            set
            {
                if (_TenantId != value)
                {
                    OnTenantIdChanging(value);
                    ReportPropertyChanging("TenantId");
                    _TenantId = StructuralObject.SetValidValue(value, "TenantId");
                    ReportPropertyChanged("TenantId");
                    OnTenantIdChanged();
                }
            }
        }
        private global::System.Int32 _TenantId;
        partial void OnTenantIdChanging(global::System.Int32 value);
        partial void OnTenantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactEmail
        {
            get
            {
                return _ContactEmail;
            }
            set
            {
                OnContactEmailChanging(value);
                ReportPropertyChanging("ContactEmail");
                _ContactEmail = StructuralObject.SetValidValue(value, false, "ContactEmail");
                ReportPropertyChanged("ContactEmail");
                OnContactEmailChanged();
            }
        }
        private global::System.String _ContactEmail;
        partial void OnContactEmailChanging(global::System.String value);
        partial void OnContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone1
        {
            get
            {
                return _ContactTelephone1;
            }
            set
            {
                OnContactTelephone1Changing(value);
                ReportPropertyChanging("ContactTelephone1");
                _ContactTelephone1 = StructuralObject.SetValidValue(value, false, "ContactTelephone1");
                ReportPropertyChanged("ContactTelephone1");
                OnContactTelephone1Changed();
            }
        }
        private global::System.String _ContactTelephone1;
        partial void OnContactTelephone1Changing(global::System.String value);
        partial void OnContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactTelephone2
        {
            get
            {
                return _ContactTelephone2;
            }
            set
            {
                OnContactTelephone2Changing(value);
                ReportPropertyChanging("ContactTelephone2");
                _ContactTelephone2 = StructuralObject.SetValidValue(value, true, "ContactTelephone2");
                ReportPropertyChanged("ContactTelephone2");
                OnContactTelephone2Changed();
            }
        }
        private global::System.String _ContactTelephone2;
        partial void OnContactTelephone2Changing(global::System.String value);
        partial void OnContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeaseId
        {
            get
            {
                return _LeaseId;
            }
            set
            {
                OnLeaseIdChanging(value);
                ReportPropertyChanging("LeaseId");
                _LeaseId = StructuralObject.SetValidValue(value, "LeaseId");
                ReportPropertyChanged("LeaseId");
                OnLeaseIdChanged();
            }
        }
        private global::System.Int32 _LeaseId;
        partial void OnLeaseIdChanging(global::System.Int32 value);
        partial void OnLeaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManagedBy
        {
            get
            {
                return _ManagedBy;
            }
            set
            {
                OnManagedByChanging(value);
                ReportPropertyChanging("ManagedBy");
                _ManagedBy = StructuralObject.SetValidValue(value, false, "ManagedBy");
                ReportPropertyChanged("ManagedBy");
                OnManagedByChanged();
            }
        }
        private global::System.String _ManagedBy;
        partial void OnManagedByChanging(global::System.String value);
        partial void OnManagedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="vendorBusinessName">Initial value of the VendorBusinessName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="vendorSpecialtyId">Initial value of the VendorSpecialtyId property.</param>
        /// <param name="vendorContactTelephone1">Initial value of the VendorContactTelephone1 property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Vendor CreateVendor(global::System.Int32 vendorId, global::System.String userName, global::System.String vendorBusinessName, global::System.String firstName, global::System.String lastName, global::System.Int32 vendorSpecialtyId, global::System.String vendorContactTelephone1, global::System.Boolean isActive, global::System.Int32 roleId, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            Vendor vendor = new Vendor();
            vendor.VendorId = vendorId;
            vendor.UserName = userName;
            vendor.VendorBusinessName = vendorBusinessName;
            vendor.FirstName = firstName;
            vendor.LastName = lastName;
            vendor.VendorSpecialtyId = vendorSpecialtyId;
            vendor.VendorContactTelephone1 = vendorContactTelephone1;
            vendor.IsActive = isActive;
            vendor.RoleId = roleId;
            vendor.OnlineAccessEnbaled = onlineAccessEnbaled;
            vendor.UserAvartaImgUrl = userAvartaImgUrl;
            vendor.CreationDate = creationDate;
            vendor.UpdateDate = updateDate;
            return vendor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                if (_VendorId != value)
                {
                    OnVendorIdChanging(value);
                    ReportPropertyChanging("VendorId");
                    _VendorId = StructuralObject.SetValidValue(value, "VendorId");
                    ReportPropertyChanged("VendorId");
                    OnVendorIdChanged();
                }
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VendorBusinessName
        {
            get
            {
                return _VendorBusinessName;
            }
            set
            {
                OnVendorBusinessNameChanging(value);
                ReportPropertyChanging("VendorBusinessName");
                _VendorBusinessName = StructuralObject.SetValidValue(value, false, "VendorBusinessName");
                ReportPropertyChanged("VendorBusinessName");
                OnVendorBusinessNameChanged();
            }
        }
        private global::System.String _VendorBusinessName;
        partial void OnVendorBusinessNameChanging(global::System.String value);
        partial void OnVendorBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorDesc
        {
            get
            {
                return _VendorDesc;
            }
            set
            {
                OnVendorDescChanging(value);
                ReportPropertyChanging("VendorDesc");
                _VendorDesc = StructuralObject.SetValidValue(value, true, "VendorDesc");
                ReportPropertyChanged("VendorDesc");
                OnVendorDescChanged();
            }
        }
        private global::System.String _VendorDesc;
        partial void OnVendorDescChanging(global::System.String value);
        partial void OnVendorDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorSpecialtyId
        {
            get
            {
                return _VendorSpecialtyId;
            }
            set
            {
                OnVendorSpecialtyIdChanging(value);
                ReportPropertyChanging("VendorSpecialtyId");
                _VendorSpecialtyId = StructuralObject.SetValidValue(value, "VendorSpecialtyId");
                ReportPropertyChanged("VendorSpecialtyId");
                OnVendorSpecialtyIdChanged();
            }
        }
        private global::System.Int32 _VendorSpecialtyId;
        partial void OnVendorSpecialtyIdChanging(global::System.Int32 value);
        partial void OnVendorSpecialtyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VendorContactTelephone1
        {
            get
            {
                return _VendorContactTelephone1;
            }
            set
            {
                OnVendorContactTelephone1Changing(value);
                ReportPropertyChanging("VendorContactTelephone1");
                _VendorContactTelephone1 = StructuralObject.SetValidValue(value, false, "VendorContactTelephone1");
                ReportPropertyChanged("VendorContactTelephone1");
                OnVendorContactTelephone1Changed();
            }
        }
        private global::System.String _VendorContactTelephone1;
        partial void OnVendorContactTelephone1Changing(global::System.String value);
        partial void OnVendorContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorContactTelephone2
        {
            get
            {
                return _VendorContactTelephone2;
            }
            set
            {
                OnVendorContactTelephone2Changing(value);
                ReportPropertyChanging("VendorContactTelephone2");
                _VendorContactTelephone2 = StructuralObject.SetValidValue(value, true, "VendorContactTelephone2");
                ReportPropertyChanged("VendorContactTelephone2");
                OnVendorContactTelephone2Changed();
            }
        }
        private global::System.String _VendorContactTelephone2;
        partial void OnVendorContactTelephone2Changing(global::System.String value);
        partial void OnVendorContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorContactEmail
        {
            get
            {
                return _VendorContactEmail;
            }
            set
            {
                OnVendorContactEmailChanging(value);
                ReportPropertyChanging("VendorContactEmail");
                _VendorContactEmail = StructuralObject.SetValidValue(value, true, "VendorContactEmail");
                ReportPropertyChanged("VendorContactEmail");
                OnVendorContactEmailChanged();
            }
        }
        private global::System.String _VendorContactEmail;
        partial void OnVendorContactEmailChanging(global::System.String value);
        partial void OnVendorContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_Vendor", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_Vendor", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_Vendor", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="WorkOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrder object.
        /// </summary>
        /// <param name="workOrderId">Initial value of the WorkOrderId property.</param>
        /// <param name="workOrderName">Initial value of the WorkOrderName property.</param>
        /// <param name="workOrderDetails">Initial value of the WorkOrderDetails property.</param>
        /// <param name="workOrderCategoryId">Initial value of the WorkOrderCategoryId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="workOrderTypeId">Initial value of the WorkOrderTypeId property.</param>
        /// <param name="invoiceAmount">Initial value of the InvoiceAmount property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isAuthorized">Initial value of the IsAuthorized property.</param>
        /// <param name="workOrderStatusId">Initial value of the WorkOrderStatusId property.</param>
        /// <param name="isPaid">Initial value of the IsPaid property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="recordCreationDate">Initial value of the RecordCreationDate property.</param>
        public static WorkOrder CreateWorkOrder(global::System.Int32 workOrderId, global::System.String workOrderName, global::System.String workOrderDetails, global::System.Int32 workOrderCategoryId, global::System.Int32 propertyId, global::System.Int32 vendorId, global::System.Int32 workOrderTypeId, global::System.Decimal invoiceAmount, global::System.DateTime invoiceDate, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isAuthorized, global::System.Int32 workOrderStatusId, global::System.Boolean isPaid, global::System.DateTime paymentDate, global::System.DateTime recordCreationDate)
        {
            WorkOrder workOrder = new WorkOrder();
            workOrder.WorkOrderId = workOrderId;
            workOrder.WorkOrderName = workOrderName;
            workOrder.WorkOrderDetails = workOrderDetails;
            workOrder.WorkOrderCategoryId = workOrderCategoryId;
            workOrder.PropertyId = propertyId;
            workOrder.VendorId = vendorId;
            workOrder.WorkOrderTypeId = workOrderTypeId;
            workOrder.InvoiceAmount = invoiceAmount;
            workOrder.InvoiceDate = invoiceDate;
            workOrder.StartDate = startDate;
            workOrder.EndDate = endDate;
            workOrder.IsAuthorized = isAuthorized;
            workOrder.WorkOrderStatusId = workOrderStatusId;
            workOrder.IsPaid = isPaid;
            workOrder.PaymentDate = paymentDate;
            workOrder.RecordCreationDate = recordCreationDate;
            return workOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderId
        {
            get
            {
                return _WorkOrderId;
            }
            set
            {
                if (_WorkOrderId != value)
                {
                    OnWorkOrderIdChanging(value);
                    ReportPropertyChanging("WorkOrderId");
                    _WorkOrderId = StructuralObject.SetValidValue(value, "WorkOrderId");
                    ReportPropertyChanged("WorkOrderId");
                    OnWorkOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderId;
        partial void OnWorkOrderIdChanging(global::System.Int32 value);
        partial void OnWorkOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderName
        {
            get
            {
                return _WorkOrderName;
            }
            set
            {
                OnWorkOrderNameChanging(value);
                ReportPropertyChanging("WorkOrderName");
                _WorkOrderName = StructuralObject.SetValidValue(value, false, "WorkOrderName");
                ReportPropertyChanged("WorkOrderName");
                OnWorkOrderNameChanged();
            }
        }
        private global::System.String _WorkOrderName;
        partial void OnWorkOrderNameChanging(global::System.String value);
        partial void OnWorkOrderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderDetails
        {
            get
            {
                return _WorkOrderDetails;
            }
            set
            {
                OnWorkOrderDetailsChanging(value);
                ReportPropertyChanging("WorkOrderDetails");
                _WorkOrderDetails = StructuralObject.SetValidValue(value, false, "WorkOrderDetails");
                ReportPropertyChanged("WorkOrderDetails");
                OnWorkOrderDetailsChanged();
            }
        }
        private global::System.String _WorkOrderDetails;
        partial void OnWorkOrderDetailsChanging(global::System.String value);
        partial void OnWorkOrderDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderCategoryId
        {
            get
            {
                return _WorkOrderCategoryId;
            }
            set
            {
                OnWorkOrderCategoryIdChanging(value);
                ReportPropertyChanging("WorkOrderCategoryId");
                _WorkOrderCategoryId = StructuralObject.SetValidValue(value, "WorkOrderCategoryId");
                ReportPropertyChanged("WorkOrderCategoryId");
                OnWorkOrderCategoryIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderCategoryId;
        partial void OnWorkOrderCategoryIdChanging(global::System.Int32 value);
        partial void OnWorkOrderCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value, "VendorId");
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderTypeId
        {
            get
            {
                return _WorkOrderTypeId;
            }
            set
            {
                OnWorkOrderTypeIdChanging(value);
                ReportPropertyChanging("WorkOrderTypeId");
                _WorkOrderTypeId = StructuralObject.SetValidValue(value, "WorkOrderTypeId");
                ReportPropertyChanged("WorkOrderTypeId");
                OnWorkOrderTypeIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderTypeId;
        partial void OnWorkOrderTypeIdChanging(global::System.Int32 value);
        partial void OnWorkOrderTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InvoiceAmount
        {
            get
            {
                return _InvoiceAmount;
            }
            set
            {
                OnInvoiceAmountChanging(value);
                ReportPropertyChanging("InvoiceAmount");
                _InvoiceAmount = StructuralObject.SetValidValue(value, "InvoiceAmount");
                ReportPropertyChanged("InvoiceAmount");
                OnInvoiceAmountChanged();
            }
        }
        private global::System.Decimal _InvoiceAmount;
        partial void OnInvoiceAmountChanging(global::System.Decimal value);
        partial void OnInvoiceAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceDocUrl
        {
            get
            {
                return _InvoiceDocUrl;
            }
            set
            {
                OnInvoiceDocUrlChanging(value);
                ReportPropertyChanging("InvoiceDocUrl");
                _InvoiceDocUrl = StructuralObject.SetValidValue(value, true, "InvoiceDocUrl");
                ReportPropertyChanged("InvoiceDocUrl");
                OnInvoiceDocUrlChanged();
            }
        }
        private global::System.String _InvoiceDocUrl;
        partial void OnInvoiceDocUrlChanging(global::System.String value);
        partial void OnInvoiceDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAuthorized
        {
            get
            {
                return _IsAuthorized;
            }
            set
            {
                OnIsAuthorizedChanging(value);
                ReportPropertyChanging("IsAuthorized");
                _IsAuthorized = StructuralObject.SetValidValue(value, "IsAuthorized");
                ReportPropertyChanged("IsAuthorized");
                OnIsAuthorizedChanged();
            }
        }
        private global::System.Boolean _IsAuthorized;
        partial void OnIsAuthorizedChanging(global::System.Boolean value);
        partial void OnIsAuthorizedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderStatusId
        {
            get
            {
                return _WorkOrderStatusId;
            }
            set
            {
                OnWorkOrderStatusIdChanging(value);
                ReportPropertyChanging("WorkOrderStatusId");
                _WorkOrderStatusId = StructuralObject.SetValidValue(value, "WorkOrderStatusId");
                ReportPropertyChanged("WorkOrderStatusId");
                OnWorkOrderStatusIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderStatusId;
        partial void OnWorkOrderStatusIdChanging(global::System.Int32 value);
        partial void OnWorkOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value, "IsPaid");
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private global::System.Boolean _IsPaid;
        partial void OnIsPaidChanging(global::System.Boolean value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, "PaymentDate");
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, true, "PaymentMethod");
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value, "PaymentAmount");
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordCreationDate
        {
            get
            {
                return _RecordCreationDate;
            }
            set
            {
                OnRecordCreationDateChanging(value);
                ReportPropertyChanging("RecordCreationDate");
                _RecordCreationDate = StructuralObject.SetValidValue(value, "RecordCreationDate");
                ReportPropertyChanged("RecordCreationDate");
                OnRecordCreationDateChanged();
            }
        }
        private global::System.DateTime _RecordCreationDate;
        partial void OnRecordCreationDateChanging(global::System.DateTime value);
        partial void OnRecordCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecordUpdateDate
        {
            get
            {
                return _RecordUpdateDate;
            }
            set
            {
                OnRecordUpdateDateChanging(value);
                ReportPropertyChanging("RecordUpdateDate");
                _RecordUpdateDate = StructuralObject.SetValidValue(value, "RecordUpdateDate");
                ReportPropertyChanged("RecordUpdateDate");
                OnRecordUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecordUpdateDate;
        partial void OnRecordUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecordUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory")]
        public WorkOrderCategory WorkOrderCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderCategory> WorkOrderCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderCategory>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu")]
        public WorkOrderStatu WorkOrderStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderStatu> WorkOrderStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderStatu>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_Vendor", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ProMasterPropertyDataModel.FK_WorkOrder_Vendor", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ProMasterPropertyDataModel.FK_WorkOrder_Vendor", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("ProMasterPropertyDataModel.FK_WorkOrder_Vendor", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("ProMasterPropertyDataModel.FK_WorkOrder_Vendor", "Vendor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_WorkOrder_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_WorkOrder_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("ProMasterPropertyDataModel.FK_WorkOrder_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("ProMasterPropertyDataModel.FK_WorkOrder_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="WorkOrderCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderCategory object.
        /// </summary>
        /// <param name="workOrderCategoryId">Initial value of the WorkOrderCategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static WorkOrderCategory CreateWorkOrderCategory(global::System.Int32 workOrderCategoryId, global::System.String categoryName)
        {
            WorkOrderCategory workOrderCategory = new WorkOrderCategory();
            workOrderCategory.WorkOrderCategoryId = workOrderCategoryId;
            workOrderCategory.CategoryName = categoryName;
            return workOrderCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderCategoryId
        {
            get
            {
                return _WorkOrderCategoryId;
            }
            set
            {
                if (_WorkOrderCategoryId != value)
                {
                    OnWorkOrderCategoryIdChanging(value);
                    ReportPropertyChanging("WorkOrderCategoryId");
                    _WorkOrderCategoryId = StructuralObject.SetValidValue(value, "WorkOrderCategoryId");
                    ReportPropertyChanged("WorkOrderCategoryId");
                    OnWorkOrderCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderCategoryId;
        partial void OnWorkOrderCategoryIdChanging(global::System.Int32 value);
        partial void OnWorkOrderCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_WorkOrderCategory", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProMasterPropertyDataModel", Name="WorkOrderStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderStatu object.
        /// </summary>
        /// <param name="workOrderStatusId">Initial value of the WorkOrderStatusId property.</param>
        /// <param name="workOrderStatus">Initial value of the WorkOrderStatus property.</param>
        public static WorkOrderStatu CreateWorkOrderStatu(global::System.Int32 workOrderStatusId, global::System.String workOrderStatus)
        {
            WorkOrderStatu workOrderStatu = new WorkOrderStatu();
            workOrderStatu.WorkOrderStatusId = workOrderStatusId;
            workOrderStatu.WorkOrderStatus = workOrderStatus;
            return workOrderStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderStatusId
        {
            get
            {
                return _WorkOrderStatusId;
            }
            set
            {
                if (_WorkOrderStatusId != value)
                {
                    OnWorkOrderStatusIdChanging(value);
                    ReportPropertyChanging("WorkOrderStatusId");
                    _WorkOrderStatusId = StructuralObject.SetValidValue(value, "WorkOrderStatusId");
                    ReportPropertyChanged("WorkOrderStatusId");
                    OnWorkOrderStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderStatusId;
        partial void OnWorkOrderStatusIdChanging(global::System.Int32 value);
        partial void OnWorkOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderStatus
        {
            get
            {
                return _WorkOrderStatus;
            }
            set
            {
                OnWorkOrderStatusChanging(value);
                ReportPropertyChanging("WorkOrderStatus");
                _WorkOrderStatus = StructuralObject.SetValidValue(value, false, "WorkOrderStatus");
                ReportPropertyChanged("WorkOrderStatus");
                OnWorkOrderStatusChanged();
            }
        }
        private global::System.String _WorkOrderStatus;
        partial void OnWorkOrderStatusChanging(global::System.String value);
        partial void OnWorkOrderStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProMasterPropertyDataModel", "FK_WorkOrder_WorkOrderStatus", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("ProMasterPropertyDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrder", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
