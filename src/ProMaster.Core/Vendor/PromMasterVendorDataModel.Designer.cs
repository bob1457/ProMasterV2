//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_WorkOrder_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.Property), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.WorkOrderCategory), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.WorkOrderStatu), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderType", "WorkOrderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.WorkOrderType), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_Vendor_VendorSpecialty", "VendorSpecialty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.VendorSpecialty), "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.Vendor), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_WorkOrder_Vendor", "Vendor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.Vendor), "WorkOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.WorkOrder), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.DocumentPrincipalType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.Document), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_Document_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.DocumentType), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.Document), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_Cost_CostCategory", "CostCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.CostCategory), "OtherCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.OtherCost), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_Cost_Property", "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.Property), "OtherCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.OtherCost), true)]
[assembly: EdmRelationshipAttribute("PromMasterVendorDataModel", "FK_Property_PropertyAddress", "PropertyAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProMaster.Core.Vendor.PropertyAddress), "Property", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProMaster.Core.Vendor.Property), true)]

#endregion

namespace ProMaster.Core.Vendor
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PromMasterVendorDataEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PromMasterVendorDataEntities object using the connection string found in the 'PromMasterVendorDataEntities' section of the application configuration file.
        /// </summary>
        public PromMasterVendorDataEntities() : base("name=PromMasterVendorDataEntities", "PromMasterVendorDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PromMasterVendorDataEntities object.
        /// </summary>
        public PromMasterVendorDataEntities(string connectionString) : base(connectionString, "PromMasterVendorDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PromMasterVendorDataEntities object.
        /// </summary>
        public PromMasterVendorDataEntities(EntityConnection connection) : base(connection, "PromMasterVendorDataEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Property> Properties
        {
            get
            {
                if ((_Properties == null))
                {
                    _Properties = base.CreateObjectSet<Property>("Properties");
                }
                return _Properties;
            }
        }
        private ObjectSet<Property> _Properties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderType> WorkOrderTypes
        {
            get
            {
                if ((_WorkOrderTypes == null))
                {
                    _WorkOrderTypes = base.CreateObjectSet<WorkOrderType>("WorkOrderTypes");
                }
                return _WorkOrderTypes;
            }
        }
        private ObjectSet<WorkOrderType> _WorkOrderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<VendorSpecialty> VendorSpecialties
        {
            get
            {
                if ((_VendorSpecialties == null))
                {
                    _VendorSpecialties = base.CreateObjectSet<VendorSpecialty>("VendorSpecialties");
                }
                return _VendorSpecialties;
            }
        }
        private ObjectSet<VendorSpecialty> _VendorSpecialties;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderStatu> WorkOrderStatus
        {
            get
            {
                if ((_WorkOrderStatus == null))
                {
                    _WorkOrderStatus = base.CreateObjectSet<WorkOrderStatu>("WorkOrderStatus");
                }
                return _WorkOrderStatus;
            }
        }
        private ObjectSet<WorkOrderStatu> _WorkOrderStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrderCategory> WorkOrderCategories
        {
            get
            {
                if ((_WorkOrderCategories == null))
                {
                    _WorkOrderCategories = base.CreateObjectSet<WorkOrderCategory>("WorkOrderCategories");
                }
                return _WorkOrderCategories;
            }
        }
        private ObjectSet<WorkOrderCategory> _WorkOrderCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkOrder> WorkOrders
        {
            get
            {
                if ((_WorkOrders == null))
                {
                    _WorkOrders = base.CreateObjectSet<WorkOrder>("WorkOrders");
                }
                return _WorkOrders;
            }
        }
        private ObjectSet<WorkOrder> _WorkOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Vendor> Vendors
        {
            get
            {
                if ((_Vendors == null))
                {
                    _Vendors = base.CreateObjectSet<Vendor>("Vendors");
                }
                return _Vendors;
            }
        }
        private ObjectSet<Vendor> _Vendors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentPrincipalType> DocumentPrincipalTypes
        {
            get
            {
                if ((_DocumentPrincipalTypes == null))
                {
                    _DocumentPrincipalTypes = base.CreateObjectSet<DocumentPrincipalType>("DocumentPrincipalTypes");
                }
                return _DocumentPrincipalTypes;
            }
        }
        private ObjectSet<DocumentPrincipalType> _DocumentPrincipalTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CostCategory> CostCategories
        {
            get
            {
                if ((_CostCategories == null))
                {
                    _CostCategories = base.CreateObjectSet<CostCategory>("CostCategories");
                }
                return _CostCategories;
            }
        }
        private ObjectSet<CostCategory> _CostCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OtherCost> OtherCosts
        {
            get
            {
                if ((_OtherCosts == null))
                {
                    _OtherCosts = base.CreateObjectSet<OtherCost>("OtherCosts");
                }
                return _OtherCosts;
            }
        }
        private ObjectSet<OtherCost> _OtherCosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PropertyAddress> PropertyAddresses
        {
            get
            {
                if ((_PropertyAddresses == null))
                {
                    _PropertyAddresses = base.CreateObjectSet<PropertyAddress>("PropertyAddresses");
                }
                return _PropertyAddresses;
            }
        }
        private ObjectSet<PropertyAddress> _PropertyAddresses;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Properties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProperties(Property property)
        {
            base.AddObject("Properties", property);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderTypes(WorkOrderType workOrderType)
        {
            base.AddObject("WorkOrderTypes", workOrderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VendorSpecialties EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendorSpecialties(VendorSpecialty vendorSpecialty)
        {
            base.AddObject("VendorSpecialties", vendorSpecialty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderStatus(WorkOrderStatu workOrderStatu)
        {
            base.AddObject("WorkOrderStatus", workOrderStatu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrderCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrderCategories(WorkOrderCategory workOrderCategory)
        {
            base.AddObject("WorkOrderCategories", workOrderCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkOrders(WorkOrder workOrder)
        {
            base.AddObject("WorkOrders", workOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Vendors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVendors(Vendor vendor)
        {
            base.AddObject("Vendors", vendor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentPrincipalTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentPrincipalTypes(DocumentPrincipalType documentPrincipalType)
        {
            base.AddObject("DocumentPrincipalTypes", documentPrincipalType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CostCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCostCategories(CostCategory costCategory)
        {
            base.AddObject("CostCategories", costCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OtherCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOtherCosts(OtherCost otherCost)
        {
            base.AddObject("OtherCosts", otherCost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PropertyAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPropertyAddresses(PropertyAddress propertyAddress)
        {
            base.AddObject("PropertyAddresses", propertyAddress);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="CostCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CostCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CostCategory object.
        /// </summary>
        /// <param name="costCategoryId">Initial value of the CostCategoryId property.</param>
        /// <param name="costCategoryName">Initial value of the CostCategoryName property.</param>
        public static CostCategory CreateCostCategory(global::System.Int32 costCategoryId, global::System.String costCategoryName)
        {
            CostCategory costCategory = new CostCategory();
            costCategory.CostCategoryId = costCategoryId;
            costCategory.CostCategoryName = costCategoryName;
            return costCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCategoryId
        {
            get
            {
                return _CostCategoryId;
            }
            set
            {
                if (_CostCategoryId != value)
                {
                    OnCostCategoryIdChanging(value);
                    ReportPropertyChanging("CostCategoryId");
                    _CostCategoryId = StructuralObject.SetValidValue(value, "CostCategoryId");
                    ReportPropertyChanged("CostCategoryId");
                    OnCostCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CostCategoryId;
        partial void OnCostCategoryIdChanging(global::System.Int32 value);
        partial void OnCostCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CostCategoryName
        {
            get
            {
                return _CostCategoryName;
            }
            set
            {
                OnCostCategoryNameChanging(value);
                ReportPropertyChanging("CostCategoryName");
                _CostCategoryName = StructuralObject.SetValidValue(value, false, "CostCategoryName");
                ReportPropertyChanged("CostCategoryName");
                OnCostCategoryNameChanged();
            }
        }
        private global::System.String _CostCategoryName;
        partial void OnCostCategoryNameChanging(global::System.String value);
        partial void OnCostCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Cost_CostCategory", "OtherCost")]
        public EntityCollection<OtherCost> OtherCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtherCost>("PromMasterVendorDataModel.FK_Cost_CostCategory", "OtherCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtherCost>("PromMasterVendorDataModel.FK_Cost_CostCategory", "OtherCost", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentName">Initial value of the DocumentName property.</param>
        /// <param name="dcoumentDetails">Initial value of the DcoumentDetails property.</param>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalId">Initial value of the DocumentPrincipalId property.</param>
        /// <param name="documentUrl">Initial value of the DocumentUrl property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.Int32 documentTypeId, global::System.String documentName, global::System.String dcoumentDetails, global::System.Int32 documentPrincipalTypeId, global::System.Int32 documentPrincipalId, global::System.String documentUrl, global::System.Boolean isActive, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.DocumentTypeId = documentTypeId;
            document.DocumentName = documentName;
            document.DcoumentDetails = dcoumentDetails;
            document.DocumentPrincipalTypeId = documentPrincipalTypeId;
            document.DocumentPrincipalId = documentPrincipalId;
            document.DocumentUrl = documentUrl;
            document.IsActive = isActive;
            document.CreationDate = creationDate;
            document.UpdateDate = updateDate;
            return document;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value, "DocumentId");
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentName
        {
            get
            {
                return _DocumentName;
            }
            set
            {
                OnDocumentNameChanging(value);
                ReportPropertyChanging("DocumentName");
                _DocumentName = StructuralObject.SetValidValue(value, false, "DocumentName");
                ReportPropertyChanged("DocumentName");
                OnDocumentNameChanged();
            }
        }
        private global::System.String _DocumentName;
        partial void OnDocumentNameChanging(global::System.String value);
        partial void OnDocumentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DcoumentDetails
        {
            get
            {
                return _DcoumentDetails;
            }
            set
            {
                OnDcoumentDetailsChanging(value);
                ReportPropertyChanging("DcoumentDetails");
                _DcoumentDetails = StructuralObject.SetValidValue(value, false, "DcoumentDetails");
                ReportPropertyChanged("DcoumentDetails");
                OnDcoumentDetailsChanged();
            }
        }
        private global::System.String _DcoumentDetails;
        partial void OnDcoumentDetailsChanging(global::System.String value);
        partial void OnDcoumentDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                OnDocumentPrincipalTypeIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalTypeId");
                _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                ReportPropertyChanged("DocumentPrincipalTypeId");
                OnDocumentPrincipalTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalId
        {
            get
            {
                return _DocumentPrincipalId;
            }
            set
            {
                OnDocumentPrincipalIdChanging(value);
                ReportPropertyChanging("DocumentPrincipalId");
                _DocumentPrincipalId = StructuralObject.SetValidValue(value, "DocumentPrincipalId");
                ReportPropertyChanged("DocumentPrincipalId");
                OnDocumentPrincipalIdChanged();
            }
        }
        private global::System.Int32 _DocumentPrincipalId;
        partial void OnDocumentPrincipalIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentUrl
        {
            get
            {
                return _DocumentUrl;
            }
            set
            {
                OnDocumentUrlChanging(value);
                ReportPropertyChanging("DocumentUrl");
                _DocumentUrl = StructuralObject.SetValidValue(value, false, "DocumentUrl");
                ReportPropertyChanged("DocumentUrl");
                OnDocumentUrlChanged();
            }
        }
        private global::System.String _DocumentUrl;
        partial void OnDocumentUrlChanging(global::System.String value);
        partial void OnDocumentUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Document_DocumentPrincipalType", "DocumentPrincipalType")]
        public DocumentPrincipalType DocumentPrincipalType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("PromMasterVendorDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("PromMasterVendorDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentPrincipalType> DocumentPrincipalTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentPrincipalType>("PromMasterVendorDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentPrincipalType>("PromMasterVendorDataModel.FK_Document_DocumentPrincipalType", "DocumentPrincipalType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Document_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("PromMasterVendorDataModel.FK_Document_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("PromMasterVendorDataModel.FK_Document_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("PromMasterVendorDataModel.FK_Document_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("PromMasterVendorDataModel.FK_Document_DocumentType", "DocumentType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="DocumentPrincipalType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentPrincipalType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentPrincipalType object.
        /// </summary>
        /// <param name="documentPrincipalTypeId">Initial value of the DocumentPrincipalTypeId property.</param>
        /// <param name="documentPrincipalType1">Initial value of the DocumentPrincipalType1 property.</param>
        public static DocumentPrincipalType CreateDocumentPrincipalType(global::System.Int32 documentPrincipalTypeId, global::System.String documentPrincipalType1)
        {
            DocumentPrincipalType documentPrincipalType = new DocumentPrincipalType();
            documentPrincipalType.DocumentPrincipalTypeId = documentPrincipalTypeId;
            documentPrincipalType.DocumentPrincipalType1 = documentPrincipalType1;
            return documentPrincipalType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentPrincipalTypeId
        {
            get
            {
                return _DocumentPrincipalTypeId;
            }
            set
            {
                if (_DocumentPrincipalTypeId != value)
                {
                    OnDocumentPrincipalTypeIdChanging(value);
                    ReportPropertyChanging("DocumentPrincipalTypeId");
                    _DocumentPrincipalTypeId = StructuralObject.SetValidValue(value, "DocumentPrincipalTypeId");
                    ReportPropertyChanged("DocumentPrincipalTypeId");
                    OnDocumentPrincipalTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentPrincipalTypeId;
        partial void OnDocumentPrincipalTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentPrincipalTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentPrincipalType1
        {
            get
            {
                return _DocumentPrincipalType1;
            }
            set
            {
                OnDocumentPrincipalType1Changing(value);
                ReportPropertyChanging("DocumentPrincipalType1");
                _DocumentPrincipalType1 = StructuralObject.SetValidValue(value, false, "DocumentPrincipalType1");
                ReportPropertyChanged("DocumentPrincipalType1");
                OnDocumentPrincipalType1Changed();
            }
        }
        private global::System.String _DocumentPrincipalType1;
        partial void OnDocumentPrincipalType1Changing(global::System.String value);
        partial void OnDocumentPrincipalType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Document_DocumentPrincipalType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("PromMasterVendorDataModel.FK_Document_DocumentPrincipalType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("PromMasterVendorDataModel.FK_Document_DocumentPrincipalType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentType1">Initial value of the DocumentType1 property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeId, global::System.String documentType1)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeId = documentTypeId;
            documentType.DocumentType1 = documentType1;
            return documentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                if (_DocumentTypeId != value)
                {
                    OnDocumentTypeIdChanging(value);
                    ReportPropertyChanging("DocumentTypeId");
                    _DocumentTypeId = StructuralObject.SetValidValue(value, "DocumentTypeId");
                    ReportPropertyChanged("DocumentTypeId");
                    OnDocumentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentType1
        {
            get
            {
                return _DocumentType1;
            }
            set
            {
                OnDocumentType1Changing(value);
                ReportPropertyChanging("DocumentType1");
                _DocumentType1 = StructuralObject.SetValidValue(value, false, "DocumentType1");
                ReportPropertyChanged("DocumentType1");
                OnDocumentType1Changed();
            }
        }
        private global::System.String _DocumentType1;
        partial void OnDocumentType1Changing(global::System.String value);
        partial void OnDocumentType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Document_DocumentType", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("PromMasterVendorDataModel.FK_Document_DocumentType", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("PromMasterVendorDataModel.FK_Document_DocumentType", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="OtherCost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OtherCost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OtherCost object.
        /// </summary>
        /// <param name="otherCostId">Initial value of the OtherCostId property.</param>
        /// <param name="costName">Initial value of the CostName property.</param>
        /// <param name="costCategoryId">Initial value of the CostCategoryId property.</param>
        /// <param name="costAmount">Initial value of the CostAmount property.</param>
        /// <param name="isPaid">Initial value of the IsPaid property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="costAddedDate">Initial value of the CostAddedDate property.</param>
        public static OtherCost CreateOtherCost(global::System.Int32 otherCostId, global::System.String costName, global::System.Int32 costCategoryId, global::System.Decimal costAmount, global::System.Boolean isPaid, global::System.Int32 propertyId, global::System.DateTime costAddedDate)
        {
            OtherCost otherCost = new OtherCost();
            otherCost.OtherCostId = otherCostId;
            otherCost.CostName = costName;
            otherCost.CostCategoryId = costCategoryId;
            otherCost.CostAmount = costAmount;
            otherCost.IsPaid = isPaid;
            otherCost.PropertyId = propertyId;
            otherCost.CostAddedDate = costAddedDate;
            return otherCost;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OtherCostId
        {
            get
            {
                return _OtherCostId;
            }
            set
            {
                if (_OtherCostId != value)
                {
                    OnOtherCostIdChanging(value);
                    ReportPropertyChanging("OtherCostId");
                    _OtherCostId = StructuralObject.SetValidValue(value, "OtherCostId");
                    ReportPropertyChanged("OtherCostId");
                    OnOtherCostIdChanged();
                }
            }
        }
        private global::System.Int32 _OtherCostId;
        partial void OnOtherCostIdChanging(global::System.Int32 value);
        partial void OnOtherCostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CostName
        {
            get
            {
                return _CostName;
            }
            set
            {
                OnCostNameChanging(value);
                ReportPropertyChanging("CostName");
                _CostName = StructuralObject.SetValidValue(value, false, "CostName");
                ReportPropertyChanged("CostName");
                OnCostNameChanged();
            }
        }
        private global::System.String _CostName;
        partial void OnCostNameChanging(global::System.String value);
        partial void OnCostNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostDesc
        {
            get
            {
                return _CostDesc;
            }
            set
            {
                OnCostDescChanging(value);
                ReportPropertyChanging("CostDesc");
                _CostDesc = StructuralObject.SetValidValue(value, true, "CostDesc");
                ReportPropertyChanged("CostDesc");
                OnCostDescChanged();
            }
        }
        private global::System.String _CostDesc;
        partial void OnCostDescChanging(global::System.String value);
        partial void OnCostDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostCategoryId
        {
            get
            {
                return _CostCategoryId;
            }
            set
            {
                OnCostCategoryIdChanging(value);
                ReportPropertyChanging("CostCategoryId");
                _CostCategoryId = StructuralObject.SetValidValue(value, "CostCategoryId");
                ReportPropertyChanged("CostCategoryId");
                OnCostCategoryIdChanged();
            }
        }
        private global::System.Int32 _CostCategoryId;
        partial void OnCostCategoryIdChanging(global::System.Int32 value);
        partial void OnCostCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CostAmount
        {
            get
            {
                return _CostAmount;
            }
            set
            {
                OnCostAmountChanging(value);
                ReportPropertyChanging("CostAmount");
                _CostAmount = StructuralObject.SetValidValue(value, "CostAmount");
                ReportPropertyChanged("CostAmount");
                OnCostAmountChanged();
            }
        }
        private global::System.Decimal _CostAmount;
        partial void OnCostAmountChanging(global::System.Decimal value);
        partial void OnCostAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value, "IsPaid");
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private global::System.Boolean _IsPaid;
        partial void OnIsPaidChanging(global::System.Boolean value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CostAddedDate
        {
            get
            {
                return _CostAddedDate;
            }
            set
            {
                OnCostAddedDateChanging(value);
                ReportPropertyChanging("CostAddedDate");
                _CostAddedDate = StructuralObject.SetValidValue(value, "CostAddedDate");
                ReportPropertyChanged("CostAddedDate");
                OnCostAddedDateChanged();
            }
        }
        private global::System.DateTime _CostAddedDate;
        partial void OnCostAddedDateChanging(global::System.DateTime value);
        partial void OnCostAddedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CostInvoiceDocUrl
        {
            get
            {
                return _CostInvoiceDocUrl;
            }
            set
            {
                OnCostInvoiceDocUrlChanging(value);
                ReportPropertyChanging("CostInvoiceDocUrl");
                _CostInvoiceDocUrl = StructuralObject.SetValidValue(value, true, "CostInvoiceDocUrl");
                ReportPropertyChanged("CostInvoiceDocUrl");
                OnCostInvoiceDocUrlChanged();
            }
        }
        private global::System.String _CostInvoiceDocUrl;
        partial void OnCostInvoiceDocUrlChanging(global::System.String value);
        partial void OnCostInvoiceDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CostUpdateDate
        {
            get
            {
                return _CostUpdateDate;
            }
            set
            {
                OnCostUpdateDateChanging(value);
                ReportPropertyChanging("CostUpdateDate");
                _CostUpdateDate = StructuralObject.SetValidValue(value, "CostUpdateDate");
                ReportPropertyChanged("CostUpdateDate");
                OnCostUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CostUpdateDate;
        partial void OnCostUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCostUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Cost_CostCategory", "CostCategory")]
        public CostCategory CostCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCategory>("PromMasterVendorDataModel.FK_Cost_CostCategory", "CostCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCategory>("PromMasterVendorDataModel.FK_Cost_CostCategory", "CostCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CostCategory> CostCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CostCategory>("PromMasterVendorDataModel.FK_Cost_CostCategory", "CostCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CostCategory>("PromMasterVendorDataModel.FK_Cost_CostCategory", "CostCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Cost_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("PromMasterVendorDataModel.FK_Cost_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("PromMasterVendorDataModel.FK_Cost_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("PromMasterVendorDataModel.FK_Cost_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("PromMasterVendorDataModel.FK_Cost_Property", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="Property")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Property : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Property object.
        /// </summary>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="propertyName">Initial value of the PropertyName property.</param>
        /// <param name="propertyTypeId">Initial value of the PropertyTypeId property.</param>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertyFeatureId">Initial value of the PropertyFeatureId property.</param>
        /// <param name="propertyFacilityId">Initial value of the PropertyFacilityId property.</param>
        /// <param name="propertyOwnerId">Initial value of the PropertyOwnerId property.</param>
        /// <param name="propertyManagerId">Initial value of the PropertyManagerId property.</param>
        /// <param name="propertyBuildYear">Initial value of the PropertyBuildYear property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isShared">Initial value of the IsShared property.</param>
        /// <param name="rentalStatusId">Initial value of the RentalStatusId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        /// <param name="propertyMgmntlStatusId">Initial value of the PropertyMgmntlStatusId property.</param>
        public static Property CreateProperty(global::System.Int32 propertyId, global::System.String propertyName, global::System.Int32 propertyTypeId, global::System.Int32 propertyAddressId, global::System.Int32 propertyFeatureId, global::System.Int32 propertyFacilityId, global::System.Int32 propertyOwnerId, global::System.Int32 propertyManagerId, global::System.Int32 propertyBuildYear, global::System.Boolean isActive, global::System.Boolean isShared, global::System.Int32 rentalStatusId, global::System.DateTime createdDate, global::System.DateTime updateDate, global::System.Int32 propertyMgmntlStatusId)
        {
            Property property = new Property();
            property.PropertyId = propertyId;
            property.PropertyName = propertyName;
            property.PropertyTypeId = propertyTypeId;
            property.PropertyAddressId = propertyAddressId;
            property.PropertyFeatureId = propertyFeatureId;
            property.PropertyFacilityId = propertyFacilityId;
            property.PropertyOwnerId = propertyOwnerId;
            property.PropertyManagerId = propertyManagerId;
            property.PropertyBuildYear = propertyBuildYear;
            property.IsActive = isActive;
            property.IsShared = isShared;
            property.RentalStatusId = rentalStatusId;
            property.CreatedDate = createdDate;
            property.UpdateDate = updateDate;
            property.PropertyMgmntlStatusId = propertyMgmntlStatusId;
            return property;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                if (_PropertyId != value)
                {
                    OnPropertyIdChanging(value);
                    ReportPropertyChanging("PropertyId");
                    _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                    ReportPropertyChanged("PropertyId");
                    OnPropertyIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyName
        {
            get
            {
                return _PropertyName;
            }
            set
            {
                OnPropertyNameChanging(value);
                ReportPropertyChanging("PropertyName");
                _PropertyName = StructuralObject.SetValidValue(value, false, "PropertyName");
                ReportPropertyChanged("PropertyName");
                OnPropertyNameChanged();
            }
        }
        private global::System.String _PropertyName;
        partial void OnPropertyNameChanging(global::System.String value);
        partial void OnPropertyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyDesc
        {
            get
            {
                return _PropertyDesc;
            }
            set
            {
                OnPropertyDescChanging(value);
                ReportPropertyChanging("PropertyDesc");
                _PropertyDesc = StructuralObject.SetValidValue(value, true, "PropertyDesc");
                ReportPropertyChanged("PropertyDesc");
                OnPropertyDescChanged();
            }
        }
        private global::System.String _PropertyDesc;
        partial void OnPropertyDescChanging(global::System.String value);
        partial void OnPropertyDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyTypeId
        {
            get
            {
                return _PropertyTypeId;
            }
            set
            {
                OnPropertyTypeIdChanging(value);
                ReportPropertyChanging("PropertyTypeId");
                _PropertyTypeId = StructuralObject.SetValidValue(value, "PropertyTypeId");
                ReportPropertyChanged("PropertyTypeId");
                OnPropertyTypeIdChanged();
            }
        }
        private global::System.Int32 _PropertyTypeId;
        partial void OnPropertyTypeIdChanging(global::System.Int32 value);
        partial void OnPropertyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                OnPropertyAddressIdChanging(value);
                ReportPropertyChanging("PropertyAddressId");
                _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                ReportPropertyChanged("PropertyAddressId");
                OnPropertyAddressIdChanged();
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFeatureId
        {
            get
            {
                return _PropertyFeatureId;
            }
            set
            {
                OnPropertyFeatureIdChanging(value);
                ReportPropertyChanging("PropertyFeatureId");
                _PropertyFeatureId = StructuralObject.SetValidValue(value, "PropertyFeatureId");
                ReportPropertyChanged("PropertyFeatureId");
                OnPropertyFeatureIdChanged();
            }
        }
        private global::System.Int32 _PropertyFeatureId;
        partial void OnPropertyFeatureIdChanging(global::System.Int32 value);
        partial void OnPropertyFeatureIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyFacilityId
        {
            get
            {
                return _PropertyFacilityId;
            }
            set
            {
                OnPropertyFacilityIdChanging(value);
                ReportPropertyChanging("PropertyFacilityId");
                _PropertyFacilityId = StructuralObject.SetValidValue(value, "PropertyFacilityId");
                ReportPropertyChanged("PropertyFacilityId");
                OnPropertyFacilityIdChanged();
            }
        }
        private global::System.Int32 _PropertyFacilityId;
        partial void OnPropertyFacilityIdChanging(global::System.Int32 value);
        partial void OnPropertyFacilityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyOwnerId
        {
            get
            {
                return _PropertyOwnerId;
            }
            set
            {
                OnPropertyOwnerIdChanging(value);
                ReportPropertyChanging("PropertyOwnerId");
                _PropertyOwnerId = StructuralObject.SetValidValue(value, "PropertyOwnerId");
                ReportPropertyChanged("PropertyOwnerId");
                OnPropertyOwnerIdChanged();
            }
        }
        private global::System.Int32 _PropertyOwnerId;
        partial void OnPropertyOwnerIdChanging(global::System.Int32 value);
        partial void OnPropertyOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyManagerId
        {
            get
            {
                return _PropertyManagerId;
            }
            set
            {
                OnPropertyManagerIdChanging(value);
                ReportPropertyChanging("PropertyManagerId");
                _PropertyManagerId = StructuralObject.SetValidValue(value, "PropertyManagerId");
                ReportPropertyChanged("PropertyManagerId");
                OnPropertyManagerIdChanged();
            }
        }
        private global::System.Int32 _PropertyManagerId;
        partial void OnPropertyManagerIdChanging(global::System.Int32 value);
        partial void OnPropertyManagerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyImgUrl
        {
            get
            {
                return _PropertyImgUrl;
            }
            set
            {
                OnPropertyImgUrlChanging(value);
                ReportPropertyChanging("PropertyImgUrl");
                _PropertyImgUrl = StructuralObject.SetValidValue(value, true, "PropertyImgUrl");
                ReportPropertyChanged("PropertyImgUrl");
                OnPropertyImgUrlChanged();
            }
        }
        private global::System.String _PropertyImgUrl;
        partial void OnPropertyImgUrlChanging(global::System.String value);
        partial void OnPropertyImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyVideoUrl
        {
            get
            {
                return _PropertyVideoUrl;
            }
            set
            {
                OnPropertyVideoUrlChanging(value);
                ReportPropertyChanging("PropertyVideoUrl");
                _PropertyVideoUrl = StructuralObject.SetValidValue(value, true, "PropertyVideoUrl");
                ReportPropertyChanged("PropertyVideoUrl");
                OnPropertyVideoUrlChanged();
            }
        }
        private global::System.String _PropertyVideoUrl;
        partial void OnPropertyVideoUrlChanging(global::System.String value);
        partial void OnPropertyVideoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyBuildYear
        {
            get
            {
                return _PropertyBuildYear;
            }
            set
            {
                OnPropertyBuildYearChanging(value);
                ReportPropertyChanging("PropertyBuildYear");
                _PropertyBuildYear = StructuralObject.SetValidValue(value, "PropertyBuildYear");
                ReportPropertyChanged("PropertyBuildYear");
                OnPropertyBuildYearChanged();
            }
        }
        private global::System.Int32 _PropertyBuildYear;
        partial void OnPropertyBuildYearChanging(global::System.Int32 value);
        partial void OnPropertyBuildYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsShared
        {
            get
            {
                return _IsShared;
            }
            set
            {
                OnIsSharedChanging(value);
                ReportPropertyChanging("IsShared");
                _IsShared = StructuralObject.SetValidValue(value, "IsShared");
                ReportPropertyChanged("IsShared");
                OnIsSharedChanged();
            }
        }
        private global::System.Boolean _IsShared;
        partial void OnIsSharedChanging(global::System.Boolean value);
        partial void OnIsSharedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RentalStatusId
        {
            get
            {
                return _RentalStatusId;
            }
            set
            {
                OnRentalStatusIdChanging(value);
                ReportPropertyChanging("RentalStatusId");
                _RentalStatusId = StructuralObject.SetValidValue(value, "RentalStatusId");
                ReportPropertyChanged("RentalStatusId");
                OnRentalStatusIdChanged();
            }
        }
        private global::System.Int32 _RentalStatusId;
        partial void OnRentalStatusIdChanging(global::System.Int32 value);
        partial void OnRentalStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StrataCouncilId
        {
            get
            {
                return _StrataCouncilId;
            }
            set
            {
                OnStrataCouncilIdChanging(value);
                ReportPropertyChanging("StrataCouncilId");
                _StrataCouncilId = StructuralObject.SetValidValue(value, "StrataCouncilId");
                ReportPropertyChanged("StrataCouncilId");
                OnStrataCouncilIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StrataCouncilId;
        partial void OnStrataCouncilIdChanging(Nullable<global::System.Int32> value);
        partial void OnStrataCouncilIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyListDesc
        {
            get
            {
                return _PropertyListDesc;
            }
            set
            {
                OnPropertyListDescChanging(value);
                ReportPropertyChanging("PropertyListDesc");
                _PropertyListDesc = StructuralObject.SetValidValue(value, true, "PropertyListDesc");
                ReportPropertyChanged("PropertyListDesc");
                OnPropertyListDescChanged();
            }
        }
        private global::System.String _PropertyListDesc;
        partial void OnPropertyListDescChanging(global::System.String value);
        partial void OnPropertyListDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyMgmntlStatusId
        {
            get
            {
                return _PropertyMgmntlStatusId;
            }
            set
            {
                OnPropertyMgmntlStatusIdChanging(value);
                ReportPropertyChanging("PropertyMgmntlStatusId");
                _PropertyMgmntlStatusId = StructuralObject.SetValidValue(value, "PropertyMgmntlStatusId");
                ReportPropertyChanged("PropertyMgmntlStatusId");
                OnPropertyMgmntlStatusIdChanged();
            }
        }
        private global::System.Int32 _PropertyMgmntlStatusId;
        partial void OnPropertyMgmntlStatusIdChanging(global::System.Int32 value);
        partial void OnPropertyMgmntlStatusIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_Property", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_Property", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_Property", "WorkOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Cost_Property", "OtherCost")]
        public EntityCollection<OtherCost> OtherCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OtherCost>("PromMasterVendorDataModel.FK_Cost_Property", "OtherCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OtherCost>("PromMasterVendorDataModel.FK_Cost_Property", "OtherCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Property_PropertyAddress", "PropertyAddress")]
        public PropertyAddress PropertyAddress
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("PromMasterVendorDataModel.FK_Property_PropertyAddress", "PropertyAddress").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("PromMasterVendorDataModel.FK_Property_PropertyAddress", "PropertyAddress").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PropertyAddress> PropertyAddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PropertyAddress>("PromMasterVendorDataModel.FK_Property_PropertyAddress", "PropertyAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PropertyAddress>("PromMasterVendorDataModel.FK_Property_PropertyAddress", "PropertyAddress", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="PropertyAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PropertyAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PropertyAddress object.
        /// </summary>
        /// <param name="propertyAddressId">Initial value of the PropertyAddressId property.</param>
        /// <param name="propertySuiteNumber">Initial value of the PropertySuiteNumber property.</param>
        /// <param name="propertyStreet">Initial value of the PropertyStreet property.</param>
        /// <param name="propertyCity">Initial value of the PropertyCity property.</param>
        /// <param name="propertyStateProvince">Initial value of the PropertyStateProvince property.</param>
        /// <param name="propertyCountry">Initial value of the PropertyCountry property.</param>
        /// <param name="propertyZipPostCode">Initial value of the PropertyZipPostCode property.</param>
        public static PropertyAddress CreatePropertyAddress(global::System.Int32 propertyAddressId, global::System.String propertySuiteNumber, global::System.String propertyStreet, global::System.String propertyCity, global::System.String propertyStateProvince, global::System.String propertyCountry, global::System.String propertyZipPostCode)
        {
            PropertyAddress propertyAddress = new PropertyAddress();
            propertyAddress.PropertyAddressId = propertyAddressId;
            propertyAddress.PropertySuiteNumber = propertySuiteNumber;
            propertyAddress.PropertyStreet = propertyStreet;
            propertyAddress.PropertyCity = propertyCity;
            propertyAddress.PropertyStateProvince = propertyStateProvince;
            propertyAddress.PropertyCountry = propertyCountry;
            propertyAddress.PropertyZipPostCode = propertyZipPostCode;
            return propertyAddress;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyAddressId
        {
            get
            {
                return _PropertyAddressId;
            }
            set
            {
                if (_PropertyAddressId != value)
                {
                    OnPropertyAddressIdChanging(value);
                    ReportPropertyChanging("PropertyAddressId");
                    _PropertyAddressId = StructuralObject.SetValidValue(value, "PropertyAddressId");
                    ReportPropertyChanged("PropertyAddressId");
                    OnPropertyAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _PropertyAddressId;
        partial void OnPropertyAddressIdChanging(global::System.Int32 value);
        partial void OnPropertyAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertySuiteNumber
        {
            get
            {
                return _PropertySuiteNumber;
            }
            set
            {
                OnPropertySuiteNumberChanging(value);
                ReportPropertyChanging("PropertySuiteNumber");
                _PropertySuiteNumber = StructuralObject.SetValidValue(value, false, "PropertySuiteNumber");
                ReportPropertyChanged("PropertySuiteNumber");
                OnPropertySuiteNumberChanged();
            }
        }
        private global::System.String _PropertySuiteNumber;
        partial void OnPropertySuiteNumberChanging(global::System.String value);
        partial void OnPropertySuiteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PropertyNumber
        {
            get
            {
                return _PropertyNumber;
            }
            set
            {
                OnPropertyNumberChanging(value);
                ReportPropertyChanging("PropertyNumber");
                _PropertyNumber = StructuralObject.SetValidValue(value, true, "PropertyNumber");
                ReportPropertyChanged("PropertyNumber");
                OnPropertyNumberChanged();
            }
        }
        private global::System.String _PropertyNumber;
        partial void OnPropertyNumberChanging(global::System.String value);
        partial void OnPropertyNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStreet
        {
            get
            {
                return _PropertyStreet;
            }
            set
            {
                OnPropertyStreetChanging(value);
                ReportPropertyChanging("PropertyStreet");
                _PropertyStreet = StructuralObject.SetValidValue(value, false, "PropertyStreet");
                ReportPropertyChanged("PropertyStreet");
                OnPropertyStreetChanged();
            }
        }
        private global::System.String _PropertyStreet;
        partial void OnPropertyStreetChanging(global::System.String value);
        partial void OnPropertyStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCity
        {
            get
            {
                return _PropertyCity;
            }
            set
            {
                OnPropertyCityChanging(value);
                ReportPropertyChanging("PropertyCity");
                _PropertyCity = StructuralObject.SetValidValue(value, false, "PropertyCity");
                ReportPropertyChanged("PropertyCity");
                OnPropertyCityChanged();
            }
        }
        private global::System.String _PropertyCity;
        partial void OnPropertyCityChanging(global::System.String value);
        partial void OnPropertyCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyStateProvince
        {
            get
            {
                return _PropertyStateProvince;
            }
            set
            {
                OnPropertyStateProvinceChanging(value);
                ReportPropertyChanging("PropertyStateProvince");
                _PropertyStateProvince = StructuralObject.SetValidValue(value, false, "PropertyStateProvince");
                ReportPropertyChanged("PropertyStateProvince");
                OnPropertyStateProvinceChanged();
            }
        }
        private global::System.String _PropertyStateProvince;
        partial void OnPropertyStateProvinceChanging(global::System.String value);
        partial void OnPropertyStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyCountry
        {
            get
            {
                return _PropertyCountry;
            }
            set
            {
                OnPropertyCountryChanging(value);
                ReportPropertyChanging("PropertyCountry");
                _PropertyCountry = StructuralObject.SetValidValue(value, false, "PropertyCountry");
                ReportPropertyChanged("PropertyCountry");
                OnPropertyCountryChanged();
            }
        }
        private global::System.String _PropertyCountry;
        partial void OnPropertyCountryChanging(global::System.String value);
        partial void OnPropertyCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PropertyZipPostCode
        {
            get
            {
                return _PropertyZipPostCode;
            }
            set
            {
                OnPropertyZipPostCodeChanging(value);
                ReportPropertyChanging("PropertyZipPostCode");
                _PropertyZipPostCode = StructuralObject.SetValidValue(value, false, "PropertyZipPostCode");
                ReportPropertyChanged("PropertyZipPostCode");
                OnPropertyZipPostCodeChanged();
            }
        }
        private global::System.String _PropertyZipPostCode;
        partial void OnPropertyZipPostCodeChanging(global::System.String value);
        partial void OnPropertyZipPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLongitudeValue
        {
            get
            {
                return _GPSLongitudeValue;
            }
            set
            {
                OnGPSLongitudeValueChanging(value);
                ReportPropertyChanging("GPSLongitudeValue");
                _GPSLongitudeValue = StructuralObject.SetValidValue(value, true, "GPSLongitudeValue");
                ReportPropertyChanged("GPSLongitudeValue");
                OnGPSLongitudeValueChanged();
            }
        }
        private global::System.String _GPSLongitudeValue;
        partial void OnGPSLongitudeValueChanging(global::System.String value);
        partial void OnGPSLongitudeValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GPSLatitudeValue
        {
            get
            {
                return _GPSLatitudeValue;
            }
            set
            {
                OnGPSLatitudeValueChanging(value);
                ReportPropertyChanging("GPSLatitudeValue");
                _GPSLatitudeValue = StructuralObject.SetValidValue(value, true, "GPSLatitudeValue");
                ReportPropertyChanged("GPSLatitudeValue");
                OnGPSLatitudeValueChanged();
            }
        }
        private global::System.String _GPSLatitudeValue;
        partial void OnGPSLatitudeValueChanging(global::System.String value);
        partial void OnGPSLatitudeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Property_PropertyAddress", "Property")]
        public EntityCollection<Property> Properties
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Property>("PromMasterVendorDataModel.FK_Property_PropertyAddress", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Property>("PromMasterVendorDataModel.FK_Property_PropertyAddress", "Property", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="Vendor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Vendor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vendor object.
        /// </summary>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="vendorBusinessName">Initial value of the VendorBusinessName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="vendorSpecialtyId">Initial value of the VendorSpecialtyId property.</param>
        /// <param name="vendorContactTelephone1">Initial value of the VendorContactTelephone1 property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="onlineAccessEnbaled">Initial value of the OnlineAccessEnbaled property.</param>
        /// <param name="userAvartaImgUrl">Initial value of the UserAvartaImgUrl property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="updateDate">Initial value of the UpdateDate property.</param>
        public static Vendor CreateVendor(global::System.Int32 vendorId, global::System.String userName, global::System.String vendorBusinessName, global::System.String firstName, global::System.String lastName, global::System.Int32 vendorSpecialtyId, global::System.String vendorContactTelephone1, global::System.Boolean isActive, global::System.Int32 roleId, global::System.Boolean onlineAccessEnbaled, global::System.String userAvartaImgUrl, global::System.DateTime creationDate, global::System.DateTime updateDate)
        {
            Vendor vendor = new Vendor();
            vendor.VendorId = vendorId;
            vendor.UserName = userName;
            vendor.VendorBusinessName = vendorBusinessName;
            vendor.FirstName = firstName;
            vendor.LastName = lastName;
            vendor.VendorSpecialtyId = vendorSpecialtyId;
            vendor.VendorContactTelephone1 = vendorContactTelephone1;
            vendor.IsActive = isActive;
            vendor.RoleId = roleId;
            vendor.OnlineAccessEnbaled = onlineAccessEnbaled;
            vendor.UserAvartaImgUrl = userAvartaImgUrl;
            vendor.CreationDate = creationDate;
            vendor.UpdateDate = updateDate;
            return vendor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                if (_VendorId != value)
                {
                    OnVendorIdChanging(value);
                    ReportPropertyChanging("VendorId");
                    _VendorId = StructuralObject.SetValidValue(value, "VendorId");
                    ReportPropertyChanged("VendorId");
                    OnVendorIdChanged();
                }
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VendorBusinessName
        {
            get
            {
                return _VendorBusinessName;
            }
            set
            {
                OnVendorBusinessNameChanging(value);
                ReportPropertyChanging("VendorBusinessName");
                _VendorBusinessName = StructuralObject.SetValidValue(value, false, "VendorBusinessName");
                ReportPropertyChanged("VendorBusinessName");
                OnVendorBusinessNameChanged();
            }
        }
        private global::System.String _VendorBusinessName;
        partial void OnVendorBusinessNameChanging(global::System.String value);
        partial void OnVendorBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorDesc
        {
            get
            {
                return _VendorDesc;
            }
            set
            {
                OnVendorDescChanging(value);
                ReportPropertyChanging("VendorDesc");
                _VendorDesc = StructuralObject.SetValidValue(value, true, "VendorDesc");
                ReportPropertyChanged("VendorDesc");
                OnVendorDescChanged();
            }
        }
        private global::System.String _VendorDesc;
        partial void OnVendorDescChanging(global::System.String value);
        partial void OnVendorDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorSpecialtyId
        {
            get
            {
                return _VendorSpecialtyId;
            }
            set
            {
                OnVendorSpecialtyIdChanging(value);
                ReportPropertyChanging("VendorSpecialtyId");
                _VendorSpecialtyId = StructuralObject.SetValidValue(value, "VendorSpecialtyId");
                ReportPropertyChanged("VendorSpecialtyId");
                OnVendorSpecialtyIdChanged();
            }
        }
        private global::System.Int32 _VendorSpecialtyId;
        partial void OnVendorSpecialtyIdChanging(global::System.Int32 value);
        partial void OnVendorSpecialtyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VendorContactTelephone1
        {
            get
            {
                return _VendorContactTelephone1;
            }
            set
            {
                OnVendorContactTelephone1Changing(value);
                ReportPropertyChanging("VendorContactTelephone1");
                _VendorContactTelephone1 = StructuralObject.SetValidValue(value, false, "VendorContactTelephone1");
                ReportPropertyChanged("VendorContactTelephone1");
                OnVendorContactTelephone1Changed();
            }
        }
        private global::System.String _VendorContactTelephone1;
        partial void OnVendorContactTelephone1Changing(global::System.String value);
        partial void OnVendorContactTelephone1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorContactTelephone2
        {
            get
            {
                return _VendorContactTelephone2;
            }
            set
            {
                OnVendorContactTelephone2Changing(value);
                ReportPropertyChanging("VendorContactTelephone2");
                _VendorContactTelephone2 = StructuralObject.SetValidValue(value, true, "VendorContactTelephone2");
                ReportPropertyChanged("VendorContactTelephone2");
                OnVendorContactTelephone2Changed();
            }
        }
        private global::System.String _VendorContactTelephone2;
        partial void OnVendorContactTelephone2Changing(global::System.String value);
        partial void OnVendorContactTelephone2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VendorContactEmail
        {
            get
            {
                return _VendorContactEmail;
            }
            set
            {
                OnVendorContactEmailChanging(value);
                ReportPropertyChanging("VendorContactEmail");
                _VendorContactEmail = StructuralObject.SetValidValue(value, true, "VendorContactEmail");
                ReportPropertyChanged("VendorContactEmail");
                OnVendorContactEmailChanged();
            }
        }
        private global::System.String _VendorContactEmail;
        partial void OnVendorContactEmailChanging(global::System.String value);
        partial void OnVendorContactEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OnlineAccessEnbaled
        {
            get
            {
                return _OnlineAccessEnbaled;
            }
            set
            {
                OnOnlineAccessEnbaledChanging(value);
                ReportPropertyChanging("OnlineAccessEnbaled");
                _OnlineAccessEnbaled = StructuralObject.SetValidValue(value, "OnlineAccessEnbaled");
                ReportPropertyChanged("OnlineAccessEnbaled");
                OnOnlineAccessEnbaledChanged();
            }
        }
        private global::System.Boolean _OnlineAccessEnbaled;
        partial void OnOnlineAccessEnbaledChanging(global::System.Boolean value);
        partial void OnOnlineAccessEnbaledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserAvartaImgUrl
        {
            get
            {
                return _UserAvartaImgUrl;
            }
            set
            {
                OnUserAvartaImgUrlChanging(value);
                ReportPropertyChanging("UserAvartaImgUrl");
                _UserAvartaImgUrl = StructuralObject.SetValidValue(value, false, "UserAvartaImgUrl");
                ReportPropertyChanged("UserAvartaImgUrl");
                OnUserAvartaImgUrlChanged();
            }
        }
        private global::System.String _UserAvartaImgUrl;
        partial void OnUserAvartaImgUrlChanging(global::System.String value);
        partial void OnUserAvartaImgUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value, "CreationDate");
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private global::System.DateTime _UpdateDate;
        partial void OnUpdateDateChanging(global::System.DateTime value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Vendor_VendorSpecialty", "VendorSpecialty")]
        public VendorSpecialty VendorSpecialty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VendorSpecialty>("PromMasterVendorDataModel.FK_Vendor_VendorSpecialty", "VendorSpecialty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VendorSpecialty>("PromMasterVendorDataModel.FK_Vendor_VendorSpecialty", "VendorSpecialty").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<VendorSpecialty> VendorSpecialtyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<VendorSpecialty>("PromMasterVendorDataModel.FK_Vendor_VendorSpecialty", "VendorSpecialty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<VendorSpecialty>("PromMasterVendorDataModel.FK_Vendor_VendorSpecialty", "VendorSpecialty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_Vendor", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_Vendor", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_Vendor", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="VendorSpecialty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VendorSpecialty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new VendorSpecialty object.
        /// </summary>
        /// <param name="vendorSpecialtyId">Initial value of the VendorSpecialtyId property.</param>
        /// <param name="vendorSpecialtyName">Initial value of the VendorSpecialtyName property.</param>
        public static VendorSpecialty CreateVendorSpecialty(global::System.Int32 vendorSpecialtyId, global::System.String vendorSpecialtyName)
        {
            VendorSpecialty vendorSpecialty = new VendorSpecialty();
            vendorSpecialty.VendorSpecialtyId = vendorSpecialtyId;
            vendorSpecialty.VendorSpecialtyName = vendorSpecialtyName;
            return vendorSpecialty;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorSpecialtyId
        {
            get
            {
                return _VendorSpecialtyId;
            }
            set
            {
                if (_VendorSpecialtyId != value)
                {
                    OnVendorSpecialtyIdChanging(value);
                    ReportPropertyChanging("VendorSpecialtyId");
                    _VendorSpecialtyId = StructuralObject.SetValidValue(value, "VendorSpecialtyId");
                    ReportPropertyChanged("VendorSpecialtyId");
                    OnVendorSpecialtyIdChanged();
                }
            }
        }
        private global::System.Int32 _VendorSpecialtyId;
        partial void OnVendorSpecialtyIdChanging(global::System.Int32 value);
        partial void OnVendorSpecialtyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VendorSpecialtyName
        {
            get
            {
                return _VendorSpecialtyName;
            }
            set
            {
                OnVendorSpecialtyNameChanging(value);
                ReportPropertyChanging("VendorSpecialtyName");
                _VendorSpecialtyName = StructuralObject.SetValidValue(value, false, "VendorSpecialtyName");
                ReportPropertyChanged("VendorSpecialtyName");
                OnVendorSpecialtyNameChanged();
            }
        }
        private global::System.String _VendorSpecialtyName;
        partial void OnVendorSpecialtyNameChanging(global::System.String value);
        partial void OnVendorSpecialtyNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_Vendor_VendorSpecialty", "Vendor")]
        public EntityCollection<Vendor> Vendors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Vendor>("PromMasterVendorDataModel.FK_Vendor_VendorSpecialty", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Vendor>("PromMasterVendorDataModel.FK_Vendor_VendorSpecialty", "Vendor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="WorkOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrder object.
        /// </summary>
        /// <param name="workOrderId">Initial value of the WorkOrderId property.</param>
        /// <param name="workOrderName">Initial value of the WorkOrderName property.</param>
        /// <param name="workOrderDetails">Initial value of the WorkOrderDetails property.</param>
        /// <param name="workOrderCategoryId">Initial value of the WorkOrderCategoryId property.</param>
        /// <param name="propertyId">Initial value of the PropertyId property.</param>
        /// <param name="vendorId">Initial value of the VendorId property.</param>
        /// <param name="workOrderTypeId">Initial value of the WorkOrderTypeId property.</param>
        /// <param name="invoiceAmount">Initial value of the InvoiceAmount property.</param>
        /// <param name="invoiceDate">Initial value of the InvoiceDate property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="isAuthorized">Initial value of the IsAuthorized property.</param>
        /// <param name="workOrderStatusId">Initial value of the WorkOrderStatusId property.</param>
        /// <param name="isPaid">Initial value of the IsPaid property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="recordCreationDate">Initial value of the RecordCreationDate property.</param>
        public static WorkOrder CreateWorkOrder(global::System.Int32 workOrderId, global::System.String workOrderName, global::System.String workOrderDetails, global::System.Int32 workOrderCategoryId, global::System.Int32 propertyId, global::System.Int32 vendorId, global::System.Int32 workOrderTypeId, global::System.Decimal invoiceAmount, global::System.DateTime invoiceDate, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Boolean isAuthorized, global::System.Int32 workOrderStatusId, global::System.Boolean isPaid, global::System.DateTime paymentDate, global::System.DateTime recordCreationDate)
        {
            WorkOrder workOrder = new WorkOrder();
            workOrder.WorkOrderId = workOrderId;
            workOrder.WorkOrderName = workOrderName;
            workOrder.WorkOrderDetails = workOrderDetails;
            workOrder.WorkOrderCategoryId = workOrderCategoryId;
            workOrder.PropertyId = propertyId;
            workOrder.VendorId = vendorId;
            workOrder.WorkOrderTypeId = workOrderTypeId;
            workOrder.InvoiceAmount = invoiceAmount;
            workOrder.InvoiceDate = invoiceDate;
            workOrder.StartDate = startDate;
            workOrder.EndDate = endDate;
            workOrder.IsAuthorized = isAuthorized;
            workOrder.WorkOrderStatusId = workOrderStatusId;
            workOrder.IsPaid = isPaid;
            workOrder.PaymentDate = paymentDate;
            workOrder.RecordCreationDate = recordCreationDate;
            return workOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderId
        {
            get
            {
                return _WorkOrderId;
            }
            set
            {
                if (_WorkOrderId != value)
                {
                    OnWorkOrderIdChanging(value);
                    ReportPropertyChanging("WorkOrderId");
                    _WorkOrderId = StructuralObject.SetValidValue(value, "WorkOrderId");
                    ReportPropertyChanged("WorkOrderId");
                    OnWorkOrderIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderId;
        partial void OnWorkOrderIdChanging(global::System.Int32 value);
        partial void OnWorkOrderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderName
        {
            get
            {
                return _WorkOrderName;
            }
            set
            {
                OnWorkOrderNameChanging(value);
                ReportPropertyChanging("WorkOrderName");
                _WorkOrderName = StructuralObject.SetValidValue(value, false, "WorkOrderName");
                ReportPropertyChanged("WorkOrderName");
                OnWorkOrderNameChanged();
            }
        }
        private global::System.String _WorkOrderName;
        partial void OnWorkOrderNameChanging(global::System.String value);
        partial void OnWorkOrderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderDetails
        {
            get
            {
                return _WorkOrderDetails;
            }
            set
            {
                OnWorkOrderDetailsChanging(value);
                ReportPropertyChanging("WorkOrderDetails");
                _WorkOrderDetails = StructuralObject.SetValidValue(value, false, "WorkOrderDetails");
                ReportPropertyChanged("WorkOrderDetails");
                OnWorkOrderDetailsChanged();
            }
        }
        private global::System.String _WorkOrderDetails;
        partial void OnWorkOrderDetailsChanging(global::System.String value);
        partial void OnWorkOrderDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderCategoryId
        {
            get
            {
                return _WorkOrderCategoryId;
            }
            set
            {
                OnWorkOrderCategoryIdChanging(value);
                ReportPropertyChanging("WorkOrderCategoryId");
                _WorkOrderCategoryId = StructuralObject.SetValidValue(value, "WorkOrderCategoryId");
                ReportPropertyChanged("WorkOrderCategoryId");
                OnWorkOrderCategoryIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderCategoryId;
        partial void OnWorkOrderCategoryIdChanging(global::System.Int32 value);
        partial void OnWorkOrderCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PropertyId
        {
            get
            {
                return _PropertyId;
            }
            set
            {
                OnPropertyIdChanging(value);
                ReportPropertyChanging("PropertyId");
                _PropertyId = StructuralObject.SetValidValue(value, "PropertyId");
                ReportPropertyChanged("PropertyId");
                OnPropertyIdChanged();
            }
        }
        private global::System.Int32 _PropertyId;
        partial void OnPropertyIdChanging(global::System.Int32 value);
        partial void OnPropertyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VendorId
        {
            get
            {
                return _VendorId;
            }
            set
            {
                OnVendorIdChanging(value);
                ReportPropertyChanging("VendorId");
                _VendorId = StructuralObject.SetValidValue(value, "VendorId");
                ReportPropertyChanged("VendorId");
                OnVendorIdChanged();
            }
        }
        private global::System.Int32 _VendorId;
        partial void OnVendorIdChanging(global::System.Int32 value);
        partial void OnVendorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderTypeId
        {
            get
            {
                return _WorkOrderTypeId;
            }
            set
            {
                OnWorkOrderTypeIdChanging(value);
                ReportPropertyChanging("WorkOrderTypeId");
                _WorkOrderTypeId = StructuralObject.SetValidValue(value, "WorkOrderTypeId");
                ReportPropertyChanged("WorkOrderTypeId");
                OnWorkOrderTypeIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderTypeId;
        partial void OnWorkOrderTypeIdChanging(global::System.Int32 value);
        partial void OnWorkOrderTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InvoiceAmount
        {
            get
            {
                return _InvoiceAmount;
            }
            set
            {
                OnInvoiceAmountChanging(value);
                ReportPropertyChanging("InvoiceAmount");
                _InvoiceAmount = StructuralObject.SetValidValue(value, "InvoiceAmount");
                ReportPropertyChanged("InvoiceAmount");
                OnInvoiceAmountChanged();
            }
        }
        private global::System.Decimal _InvoiceAmount;
        partial void OnInvoiceAmountChanging(global::System.Decimal value);
        partial void OnInvoiceAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceDocUrl
        {
            get
            {
                return _InvoiceDocUrl;
            }
            set
            {
                OnInvoiceDocUrlChanging(value);
                ReportPropertyChanging("InvoiceDocUrl");
                _InvoiceDocUrl = StructuralObject.SetValidValue(value, true, "InvoiceDocUrl");
                ReportPropertyChanged("InvoiceDocUrl");
                OnInvoiceDocUrlChanged();
            }
        }
        private global::System.String _InvoiceDocUrl;
        partial void OnInvoiceDocUrlChanging(global::System.String value);
        partial void OnInvoiceDocUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InvoiceDate
        {
            get
            {
                return _InvoiceDate;
            }
            set
            {
                OnInvoiceDateChanging(value);
                ReportPropertyChanging("InvoiceDate");
                _InvoiceDate = StructuralObject.SetValidValue(value, "InvoiceDate");
                ReportPropertyChanged("InvoiceDate");
                OnInvoiceDateChanged();
            }
        }
        private global::System.DateTime _InvoiceDate;
        partial void OnInvoiceDateChanging(global::System.DateTime value);
        partial void OnInvoiceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAuthorized
        {
            get
            {
                return _IsAuthorized;
            }
            set
            {
                OnIsAuthorizedChanging(value);
                ReportPropertyChanging("IsAuthorized");
                _IsAuthorized = StructuralObject.SetValidValue(value, "IsAuthorized");
                ReportPropertyChanged("IsAuthorized");
                OnIsAuthorizedChanged();
            }
        }
        private global::System.Boolean _IsAuthorized;
        partial void OnIsAuthorizedChanging(global::System.Boolean value);
        partial void OnIsAuthorizedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderStatusId
        {
            get
            {
                return _WorkOrderStatusId;
            }
            set
            {
                OnWorkOrderStatusIdChanging(value);
                ReportPropertyChanging("WorkOrderStatusId");
                _WorkOrderStatusId = StructuralObject.SetValidValue(value, "WorkOrderStatusId");
                ReportPropertyChanged("WorkOrderStatusId");
                OnWorkOrderStatusIdChanged();
            }
        }
        private global::System.Int32 _WorkOrderStatusId;
        partial void OnWorkOrderStatusIdChanging(global::System.Int32 value);
        partial void OnWorkOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPaid
        {
            get
            {
                return _IsPaid;
            }
            set
            {
                OnIsPaidChanging(value);
                ReportPropertyChanging("IsPaid");
                _IsPaid = StructuralObject.SetValidValue(value, "IsPaid");
                ReportPropertyChanged("IsPaid");
                OnIsPaidChanged();
            }
        }
        private global::System.Boolean _IsPaid;
        partial void OnIsPaidChanging(global::System.Boolean value);
        partial void OnIsPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value, "PaymentDate");
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RecordCreationDate
        {
            get
            {
                return _RecordCreationDate;
            }
            set
            {
                OnRecordCreationDateChanging(value);
                ReportPropertyChanging("RecordCreationDate");
                _RecordCreationDate = StructuralObject.SetValidValue(value, "RecordCreationDate");
                ReportPropertyChanged("RecordCreationDate");
                OnRecordCreationDateChanged();
            }
        }
        private global::System.DateTime _RecordCreationDate;
        partial void OnRecordCreationDateChanging(global::System.DateTime value);
        partial void OnRecordCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, true, "PaymentMethod");
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecordUpdateDate
        {
            get
            {
                return _RecordUpdateDate;
            }
            set
            {
                OnRecordUpdateDateChanging(value);
                ReportPropertyChanging("RecordUpdateDate");
                _RecordUpdateDate = StructuralObject.SetValidValue(value, "RecordUpdateDate");
                ReportPropertyChanged("RecordUpdateDate");
                OnRecordUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecordUpdateDate;
        partial void OnRecordUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecordUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value, "PaymentAmount");
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _PaymentAmount;
        partial void OnPaymentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnPaymentAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_Property", "Property")]
        public Property Property
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("PromMasterVendorDataModel.FK_WorkOrder_Property", "Property").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("PromMasterVendorDataModel.FK_WorkOrder_Property", "Property").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Property> PropertyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Property>("PromMasterVendorDataModel.FK_WorkOrder_Property", "Property");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Property>("PromMasterVendorDataModel.FK_WorkOrder_Property", "Property", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory")]
        public WorkOrderCategory WorkOrderCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderCategory> WorkOrderCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderCategory>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderCategory>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrderCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu")]
        public WorkOrderStatu WorkOrderStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderStatu> WorkOrderStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderStatu>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderStatu>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrderStatu", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderType", "WorkOrderType")]
        public WorkOrderType WorkOrderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderType>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderType", "WorkOrderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderType>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderType", "WorkOrderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkOrderType> WorkOrderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkOrderType>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderType", "WorkOrderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkOrderType>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderType", "WorkOrderType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_Vendor", "Vendor")]
        public Vendor Vendor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("PromMasterVendorDataModel.FK_WorkOrder_Vendor", "Vendor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("PromMasterVendorDataModel.FK_WorkOrder_Vendor", "Vendor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Vendor> VendorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Vendor>("PromMasterVendorDataModel.FK_WorkOrder_Vendor", "Vendor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Vendor>("PromMasterVendorDataModel.FK_WorkOrder_Vendor", "Vendor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="WorkOrderCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderCategory object.
        /// </summary>
        /// <param name="workOrderCategoryId">Initial value of the WorkOrderCategoryId property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static WorkOrderCategory CreateWorkOrderCategory(global::System.Int32 workOrderCategoryId, global::System.String categoryName)
        {
            WorkOrderCategory workOrderCategory = new WorkOrderCategory();
            workOrderCategory.WorkOrderCategoryId = workOrderCategoryId;
            workOrderCategory.CategoryName = categoryName;
            return workOrderCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderCategoryId
        {
            get
            {
                return _WorkOrderCategoryId;
            }
            set
            {
                if (_WorkOrderCategoryId != value)
                {
                    OnWorkOrderCategoryIdChanging(value);
                    ReportPropertyChanging("WorkOrderCategoryId");
                    _WorkOrderCategoryId = StructuralObject.SetValidValue(value, "WorkOrderCategoryId");
                    ReportPropertyChanged("WorkOrderCategoryId");
                    OnWorkOrderCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderCategoryId;
        partial void OnWorkOrderCategoryIdChanging(global::System.Int32 value);
        partial void OnWorkOrderCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderCategory", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderCategory", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="WorkOrderStatu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderStatu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderStatu object.
        /// </summary>
        /// <param name="workOrderStatusId">Initial value of the WorkOrderStatusId property.</param>
        /// <param name="workOrderStatus">Initial value of the WorkOrderStatus property.</param>
        public static WorkOrderStatu CreateWorkOrderStatu(global::System.Int32 workOrderStatusId, global::System.String workOrderStatus)
        {
            WorkOrderStatu workOrderStatu = new WorkOrderStatu();
            workOrderStatu.WorkOrderStatusId = workOrderStatusId;
            workOrderStatu.WorkOrderStatus = workOrderStatus;
            return workOrderStatu;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderStatusId
        {
            get
            {
                return _WorkOrderStatusId;
            }
            set
            {
                if (_WorkOrderStatusId != value)
                {
                    OnWorkOrderStatusIdChanging(value);
                    ReportPropertyChanging("WorkOrderStatusId");
                    _WorkOrderStatusId = StructuralObject.SetValidValue(value, "WorkOrderStatusId");
                    ReportPropertyChanged("WorkOrderStatusId");
                    OnWorkOrderStatusIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderStatusId;
        partial void OnWorkOrderStatusIdChanging(global::System.Int32 value);
        partial void OnWorkOrderStatusIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderStatus
        {
            get
            {
                return _WorkOrderStatus;
            }
            set
            {
                OnWorkOrderStatusChanging(value);
                ReportPropertyChanging("WorkOrderStatus");
                _WorkOrderStatus = StructuralObject.SetValidValue(value, false, "WorkOrderStatus");
                ReportPropertyChanged("WorkOrderStatus");
                OnWorkOrderStatusChanged();
            }
        }
        private global::System.String _WorkOrderStatus;
        partial void OnWorkOrderStatusChanging(global::System.String value);
        partial void OnWorkOrderStatusChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderStatus", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderStatus", "WorkOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PromMasterVendorDataModel", Name="WorkOrderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkOrderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkOrderType object.
        /// </summary>
        /// <param name="workOrderTypeId">Initial value of the WorkOrderTypeId property.</param>
        /// <param name="workOrderTypeName">Initial value of the WorkOrderTypeName property.</param>
        public static WorkOrderType CreateWorkOrderType(global::System.Int32 workOrderTypeId, global::System.String workOrderTypeName)
        {
            WorkOrderType workOrderType = new WorkOrderType();
            workOrderType.WorkOrderTypeId = workOrderTypeId;
            workOrderType.WorkOrderTypeName = workOrderTypeName;
            return workOrderType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WorkOrderTypeId
        {
            get
            {
                return _WorkOrderTypeId;
            }
            set
            {
                if (_WorkOrderTypeId != value)
                {
                    OnWorkOrderTypeIdChanging(value);
                    ReportPropertyChanging("WorkOrderTypeId");
                    _WorkOrderTypeId = StructuralObject.SetValidValue(value, "WorkOrderTypeId");
                    ReportPropertyChanged("WorkOrderTypeId");
                    OnWorkOrderTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _WorkOrderTypeId;
        partial void OnWorkOrderTypeIdChanging(global::System.Int32 value);
        partial void OnWorkOrderTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkOrderTypeName
        {
            get
            {
                return _WorkOrderTypeName;
            }
            set
            {
                OnWorkOrderTypeNameChanging(value);
                ReportPropertyChanging("WorkOrderTypeName");
                _WorkOrderTypeName = StructuralObject.SetValidValue(value, false, "WorkOrderTypeName");
                ReportPropertyChanged("WorkOrderTypeName");
                OnWorkOrderTypeNameChanged();
            }
        }
        private global::System.String _WorkOrderTypeName;
        partial void OnWorkOrderTypeNameChanging(global::System.String value);
        partial void OnWorkOrderTypeNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PromMasterVendorDataModel", "FK_WorkOrder_WorkOrderType", "WorkOrder")]
        public EntityCollection<WorkOrder> WorkOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderType", "WorkOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkOrder>("PromMasterVendorDataModel.FK_WorkOrder_WorkOrderType", "WorkOrder", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
