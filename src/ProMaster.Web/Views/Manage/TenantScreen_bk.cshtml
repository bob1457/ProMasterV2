@model ProMaster.Core.Tenant.ViewModels.TenantScreenViewModel

@{
    ViewBag.Title = "TenantScreen";
}

<h2>TenantScreen2</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>TenantScreenViewModel</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicationId)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicationId)
            @Html.ValidationMessageFor(model => model.ApplicationId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantFirstName)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantFirstName)
            @Html.ValidationMessageFor(model => model.ApplicantFirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantLastName)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantLastName)
            @Html.ValidationMessageFor(model => model.ApplicantLastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantSIN)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantSIN)
            @Html.ValidationMessageFor(model => model.ApplicantSIN)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantCurrentAddress)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantCurrentAddress)
            @Html.ValidationMessageFor(model => model.ApplicantCurrentAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantPreviousAddress)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantPreviousAddress)
            @Html.ValidationMessageFor(model => model.ApplicantPreviousAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantContactEmail)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantContactEmail)
            @Html.ValidationMessageFor(model => model.ApplicantContactEmail)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantContactTel)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantContactTel)
            @Html.ValidationMessageFor(model => model.ApplicantContactTel)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantCurrentLandlorContact)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantCurrentLandlorContact)
            @Html.ValidationMessageFor(model => model.ApplicantCurrentLandlorContact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantPreviousLandlorContact)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantPreviousLandlorContact)
            @Html.ValidationMessageFor(model => model.ApplicantPreviousLandlorContact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantPreviousEmploerContact)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantPreviousEmploerContact)
            @Html.ValidationMessageFor(model => model.ApplicantPreviousEmploerContact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantCurrentEmploerContact)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantCurrentEmploerContact)
            @Html.ValidationMessageFor(model => model.ApplicantCurrentEmploerContact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantEmploymentIncome)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantEmploymentIncome)
            @Html.ValidationMessageFor(model => model.ApplicantEmploymentIncome)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantOtherIncome)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantOtherIncome)
            @Html.ValidationMessageFor(model => model.ApplicantOtherIncome)
        </div>

        

        

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicantCreditScore)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicantCreditScore)
            @Html.ValidationMessageFor(model => model.ApplicantCreditScore)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NumberOfOccupantse)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.NumberOfOccupantse)
            @Html.ValidationMessageFor(model => model.NumberOfOccupantse)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.NumberOfChildren)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.NumberOfChildren)
            @Html.ValidationMessageFor(model => model.NumberOfChildren)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsApplicationActive)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.IsApplicationActive)
            @Html.ValidationMessageFor(model => model.IsApplicationActive)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ApplicaitonDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ApplicaitonDate)
            @Html.ValidationMessageFor(model => model.ApplicaitonDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsAuthorizedToCheckReference)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.IsAuthorizedToCheckReference)
            @Html.ValidationMessageFor(model => model.IsAuthorizedToCheckReference)
        </div>

        <p>Document Check List</p>

        <div class="editor-label">
            @Html.LabelFor(model => model.IdentificationDocAvailable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IdentificationDocAvailable)
            @Html.ValidationMessageFor(model => model.IdentificationDocAvailable)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IncomeDocAvailable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IncomeDocAvailable)
            @Html.ValidationMessageFor(model => model.IncomeDocAvailable)
        </div>






        <div class="editor-label">
            @Html.LabelFor(model => model.EmployerReferenceDocAvailable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmployerReferenceDocAvailable)
            @Html.ValidationMessageFor(model => model.EmployerReferenceDocAvailable)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.LandlordReferenceDocAvailable)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LandlordReferenceDocAvailable)
            @Html.ValidationMessageFor(model => model.LandlordReferenceDocAvailable)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsAllDocumentsReady)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsAllDocumentsReady)
            @Html.ValidationMessageFor(model => model.IsAllDocumentsReady)
        </div>

        @if(@Model.IsAllDocumentsReady == true)
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.DocumentCheckLiatCompletionDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DocumentCheckLiatCompletionDate)
                @Html.ValidationMessageFor(model => model.DocumentCheckLiatCompletionDate)
            </div>
        }


        


<!-- 
        <div class="editor-label">
            @Html.LabelFor(model => model.ScreenCheckStatus)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Update Status --")
            @Html.ValidationMessageFor(model => model.ScreenCheckStatus)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ScreenCheckStatusId)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Update Status --")
            @Html.ValidationMessageFor(model => model.ScreenCheckStatusId)
        </div>
-->

        <p>Screen Process Update</p>
        <div class="editor-label">
            @Html.LabelFor(model => model.CurrentLandLordReferenceCheckStatus)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model=>model.CurrentLandLordReferenceCheckStatus)
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Update Status --")
            @Html.ValidationMessageFor(model => model.CurrentLandLordReferenceCheckStatus)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PreviousLandlordReferenceCheckStatus)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model=>model.CurrentLandLordReferenceCheckStatus)
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Update Status --")
            @Html.ValidationMessageFor(model => model.PreviousLandlordReferenceCheckStatus)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CurrentEmployerReferenceCheckStatus)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model=>model.CurrentEmployerReferenceCheckStatus)
           @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Update Status --")
            @Html.ValidationMessageFor(model => model.CurrentEmployerReferenceCheckStatus)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PreviousEmployerReferenceCheckStatus)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model=>model.CurrentEmployerReferenceCheckStatus)
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Select Status --")
            @Html.ValidationMessageFor(model => model.PreviousEmployerReferenceCheckStatus)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreditReportCheckStatus)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model=>model.CreditReportCheckStatus)
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Select Status --")
            @Html.ValidationMessageFor(model => model.CreditReportCheckStatus)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IncomeCheckStatus)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model=>model.IncomeCheckStatus)
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Select Status --" )
            @Html.ValidationMessageFor(model => model.IncomeCheckStatus)
        </div>

        @if(@Model.IsScreenProcessCompleted == true)
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.IsScreenProcessCompleted)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.IsScreenProcessCompleted)
                @Html.ValidationMessageFor(model => model.DocumentCheckLiatCompletionDate)
            </div>
        }
        
        

        





        
        
        <div class="editor-label">
            @Html.LabelFor(model => model.IsScreenProcessCompleted)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsScreenProcessCompleted)
            @Html.ValidationMessageFor(model => model.IsScreenProcessCompleted)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FinalScreeningStatus)
        </div>
        <div class="editor-field">
             @Html.DisplayFor(model=>model.CurrentEmployerReferenceCheckStatus)
            @Html.DropDownListFor(model => model.ScreenCheckStatusId, Model.ScreenCheckStatusList, "-- Select Status --")                      
            
        </div>

        <p>
            <input type="submit" value="Update" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


